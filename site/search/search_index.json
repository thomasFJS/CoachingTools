{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"documentation/","text":"Documentation technique R\u00e9sum\u00e9 FitJourney est une application permettant, d'une part, \u00e0 un coach sportif de g\u00e9rer et effectuer le suivi de tous ses clients avec des donn\u00e9es d'entrainements r\u00e9cup\u00e9r\u00e9es \u00e0 l'aide de montres connect\u00e9s Polar. D'autre part, elle permet aux clients d'acc\u00e9der \u00e0 leurs programmes d'entrainements et de nutrition. L'application permet \u00e9galement aux clients de visionner le d\u00e9tail de chacune de leurs s\u00e9ances. FitJourney est une application WEB r\u00e9alis\u00e9e avec le framework Flask du langage Python, elle repose principalement sur l'API Polar Accesslink qui permet l'utilisation des donn\u00e9es des montres connect\u00e9es Ce document reprend toutes les \u00e9tapes du projet qui a \u00e9t\u00e9 r\u00e9alis\u00e9 dans le cadre du travail de dipl\u00f4me de la formation Technicien ES en informatique de Thomas Fujise. Abstract FitJourney is an application that allows personal trainers to follow up all their clients training data that is retrieved using Polar connected watches. It also allows clients to access their training and diet plan. The application allows clients to look at the details of each of their workouts. FitJourney is a WEB application made with Flask Python framework. It relies mainly on the Polar Accesslink API which allows the use of data from connected watches. This document contains all the steps of the project, which was carried out within the diploma project of the IT Technician formation of Thomas Fujise Introduction Dans le cadre de notre deuxi\u00e8me et derni\u00e8re ann\u00e9e au CFPT Informatique en tant que Technicien ES, il nous est demand\u00e9 de r\u00e9aliser un travail de dipl\u00f4me dans le but de valider les comp\u00e9tences acquises tout au long de cette formation. J'ai fait le choix de d\u00e9velopper \"FitJourney\", une application web qui facilite la pratique du m\u00e9tier de coach sportif. Cette application permet de g\u00e9rer le suivi des clients allant de l'importation des programmes individuels des clients \u00e0 la r\u00e9colte des donn\u00e9es d'entrainements \u00e0 l'aide de montre connect\u00e9 Polar. Elle permet \u00e9galement de g\u00e9rer une salle de sport avec les cartes de membres qui permettent l'acc\u00e8s \u00e0 la salle. Ayant pass\u00e9 un dipl\u00f4me de coach sportif l'ann\u00e9e pass\u00e9e, j'\u00e9tais \u00e0 l'aise avec les besoins qu'un professionnel aurait en cas d'utilisation de l'application. Cahier des charges Contexte D\u00e9velopper une application web regroupant des clients et des coachs de sport. L'application permet le suivi des clients et peut r\u00e9cup\u00e9rer des donn\u00e9es d'entrainements directement depuis un appareil connect\u00e9 Polar. Il existe aujourd'hui, tr\u00e8s peu d'outil qui permet \u00e0 un coach sportif de g\u00e9rer sa salle de sport avec le suivi de tous ses clients. C'est pourquoi, j'ai d\u00e9cid\u00e9 de d\u00e9velopper une application qui permettrait de g\u00e9rer une salle de sports ainsi que le suivi des clients et de l'utiliser en tant que sujet pour mon travail de dipl\u00f4me. But du projet Le but du projet est de cr\u00e9er une plateforme web regroupant clients et coachs afin de g\u00e9rer une salle de sport et le suivi des clients. Les donn\u00e9es d'entrainements suivantes sont r\u00e9cup\u00e9r\u00e9es depuis une smartwatch Polar: Pulsation cardiaque (Repos/Actif/Apr\u00e8s effort) Le type d'exercice effectu\u00e9 Date et dur\u00e9e de l'entrainement Nombre de total de calories brul\u00e9es Nombre de calories active (Optionnel) Les donn\u00e9es relatives au sommeil Pulsation cardiaque Cycles de sommeil Interruption Hypnogramme Il y a \u00e9galement un syst\u00e8me de badging pour savoir quand le client rentre et sors de la salle de sport \u00e0 la fin de son entrainement. Cas d'utilisations 2 cas d'utilisations sont possibles avec l'application. Client Le cas d'utilisation pour client : Le client doit se connecter pour avoir acc\u00e8s \u00e0 l'application, il ne peut pas se cr\u00e9er de compte lui-m\u00eame. Si le client se connecte \u00e0 l'application, il a alors acc\u00e8s \u00e0 plusieurs fonctionnalit\u00e9s : Visualiser/T\u00e9l\u00e9charger ses programmes (Entrainement et Nutrition) Laisser un retour sur une session effectu\u00e9 Laisser un retour sur le coaching de mani\u00e8re g\u00e9n\u00e9rale G\u00e9rer son profil Coach Le cas d'utilisation pour coach : Le coach \u00e0 lui \u00e9galement 2 possibilit\u00e9s en arrivant sur l'application (Enregistrement et connexion). Une fois connect\u00e9, le coach \u00e0 acc\u00e8s \u00e0 une multitude de fonctionnalit\u00e9s : Ajout d'un nouveau client (cr\u00e9ation du compte client) Ajouter une session avec un client (Prise de rendez-vous) G\u00e9rer son profil Il a \u00e9galement acc\u00e8s \u00e0 des fonctionnalit\u00e9s pour g\u00e9rer ses clients : Importation des programmes (entrainement et nutrition) Renouveler l'abonnement souscrit par le client Effectuer un bilan avec un client Changer la carte membre du client Sp\u00e9cifications Les donn\u00e9es d'entrainements sont r\u00e9cup\u00e9r\u00e9es avec l'API Accesslink de Polar en Python sous forme d'objet, elles sont v\u00e9rifi\u00e9es et stock\u00e9es directement dans la base de donn\u00e9es Le syst\u00e8me de badge fonctionne \u00e0 l'aide de cartes RFID et un lecteur NFC (ACS ACR 122u) Les graphiques li\u00e9s aux stats sont effectu\u00e9s avec la librairie JavaScript Chart.js Les programmes d'entrainements et de nutritions doivent respecter le format propos\u00e9 (Lors de l'upload une v\u00e9rification est effectu\u00e9e) Un syst\u00e8me de notification est mis en place pour avertir les utilisateurs des diff\u00e9rents \u00e9v\u00e9nements Restrictions Pour l'instant, il est uniquement possible d'utiliser des appareils Polar pour les donn\u00e9es d'entrainement. Le syst\u00e8me de badge est utilis\u00e9 au d\u00e9but et \u00e0 la fin et non pendant l'entrainement. L'API accepte au maximum 500 requ\u00eate pour 20 utilisateurs diff\u00e9rents en 15 min et 5000 pour 100 utilisateurs en 24h Les montres utilis\u00e9es lors des entrainements sont celles du coach (montres d\u00e9j\u00e0 enregistr\u00e9es sur le compte client qui acc\u00e8de \u00e0 l'API) Environnement Les technologies \u00e0 utiliser : HTML5 CSS3 JavaScript SQL Python Flask (Micro Framework Python) Lecteur NFC (ACS ACR122U) API AccessLink Polar Chart.js Syst\u00e8me d'exploitation : D\u00e9veloppement sur Windows Versionning / Documentation : GitHub MarkDown (Mkdocs) Contact \u00c9tudiant Pr\u00e9nom : Thomas Nom : Fujise Email : thomas.fjs@eduge.ch T\u00e9l\u00e9phone : +41 (0) 77 463 89 68 Enseignant Pr\u00e9nom : S\u00e9bastien Nom : Jossi Email : edu-jossis@eduge.ch T\u00e9l\u00e9phone : / Dates importantes Date T\u00e2ches Lundi, 04 avril 2022 D\u00e9but du travail de dipl\u00f4me Mardi, 26 avril 2022 \u00c9valuation interm\u00e9diaire 01 Lundi, 09 mai 2022 Rendu du rapport interm\u00e9diaire + poster & Rendu du r\u00e9sum\u00e9 et de l'abstract Mardi, 10 mai 2022 \u00c9valuation interm\u00e9diaire 02 Jeudi, 12 mai 2022 Apr\u00e8s-midi/Soir\u00e9e poster Mardi, 24 mai 2022 \u00c9valuation interm\u00e9diaire 03 Vendredi, 10 juin 2022 Rendu du travail avant 12:00 Livrable Documentation technique + journal de bord Manuel utilisateur Poster Code source Analyse de l'existant Inithy Inithy est une application de coaching \"tout-en-un\" qui propose \u00e9norm\u00e9ment de fonctionnalit\u00e9s. Elle permet le suivi des clients, le planning de sessions, l'importation de programmes ou encore l'interaction entre utilisateurs de l'application. Elle poss\u00e8de une fonctionnalit\u00e9 de synchronisation avec les applications de sports comme GoogleFit, Apple Sant\u00e9 ou encore Fitbit. La synchronisation avec Polar et Garmin n'est pas disponible avec leur application. Il y a \u00e9galement la possibilit\u00e9 d'effectuer des paiements sur l'application pour acheter un abonnement. C'est une application tr\u00e8s compl\u00e8te qui r\u00e9pond \u00e0 beaucoup de besoins que j'ai identifi\u00e9 pr\u00e9c\u00e9demment. Le principal point qui me diff\u00e9rencie de cette application, est que FitJourney est plus ax\u00e9 pour g\u00e9rer une salle de sport et les clients membres (pour un coach sportif qui aurait son studio de coaching par exemple) que pour le coaching en ligne comme l'est Inithy . Analyse fonctionnelle Fonctionnalit\u00e9s Description g\u00e9n\u00e9rale L'application est accessible par n'importe qui poss\u00e9dant un compte. Seuls les coachs ont acc\u00e8s \u00e0 la page d'enregistrement pour se cr\u00e9er un nouveau compte et c'est \u00e9galement que les coachs qui peuvent cr\u00e9er un compte pour un client. Une fois connect\u00e9, l'utilisateur \u00e0 acc\u00e8s \u00e0 plusieurs fonctionnalit\u00e9s en fonction de son r\u00f4le (coach ou client) Description d\u00e9taill\u00e9e Application coach Le coach s'inscrit et s'authentifie avec un formulaire\u202f; Le coach peut modifier les informations propres \u00e0 son compte utilisateur (nom, pr\u00e9nom, birthdate, email, photo de profil, adresse et mot de passe)\u202f; Le coach peut ajouter un client en lui cr\u00e9ant un compte et en s\u00e9lectionnant le type d'abonnement que le client souhaite prendre\u202f; Le coach peut enregistrer une session qu'il pr\u00e9voit avec un de ses clients en renseignant : La date\u202f; L'heure\u202f; La dur\u00e9e\u202f; Le type d'entrainement pr\u00e9vu\u202f; Le coach peut voir une vue d'ensemble de la liste de tous les clients dont il a la charge, il voit \u00e9galement la prochaine session qu'il a enregistr\u00e9e avec un client avec un r\u00e9sum\u00e9\u202f; Le coach \u00e0 acc\u00e8s \u00e0 un calendrier pour visionner les sessions qu'il a enregistr\u00e9es (plusieurs affichages disponibles : mois, semaine, jour ou encore en liste)\u202f; Le coach peut effectuer un nouveau bilan/check-up pour le client Le coach \u00e0 acc\u00e8s aux profils des clients dont il a la charge o\u00f9 il peut : Renouveler/annuler l'abonnement du client\u202f; Changer la carte de membre du client\u202f; Importer un nouveau programme d'alimentation ou d'entrainement pour le client\u202f; Visionner les anciens bilans qu'il a effectu\u00e9s Visionner les reviews sur le coaching et les entrainements que le client a laiss\u00e9s\u202f; Visionner les statistiques du client : Nombre de types d'entrainement effectu\u00e9\u202f; Nombre d'entrainements chaque mois\u202f; Le poids du client sur l'ann\u00e9e\u202f; Le nombre de calories br\u00fbl\u00e9es dans la semaine\u202f; La moyenne des BPM cardiaques enregistr\u00e9s dans la semaine\u202f; Le total de temps pass\u00e9 \u00e0 s'entrainer dans la semaine\u202f; Application client Le client s'authentifie avec un formulaire \u00e0 l'aide des identifiants qui lui sont transmis par email (les identifiants peuvent \u00eatre modifi\u00e9 par le client plus tard)\u202f; Le client a un aper\u00e7u des prochaines sessions qu'il a avec son coach; Le client a un aper\u00e7u de tous les entrainements qu'il a effectu\u00e9s, en cliquant dessus il peut voir les d\u00e9tails de ce-dernier\u202f; Le client peut laisser un retour sur un entrainement qu'il a effectu\u00e9, il peut \u00e9galement laisser un retour sur le coaching de mani\u00e8re g\u00e9n\u00e9rale\u202f; Le client peut t\u00e9l\u00e9charger les programmes que son coach a import\u00e9s\u202f; Le client a acc\u00e8s \u00e0 un aper\u00e7u des bilans qu'il a effectu\u00e9s avec son coach; Le client peut visionner les statistiques enregistr\u00e9es pour lui : Nombre de types d'entrainement effectu\u00e9\u202f; Nombre d'entrainements chaque mois\u202f; Le poids du client sur l'ann\u00e9e\u202f; Le nombre de calories br\u00fbl\u00e9es dans la semaine\u202f; La moyenne des BPM cardiaques enregistr\u00e9s dans la semaine\u202f; Le total de temps pass\u00e9 \u00e0 s'entrainer dans la semaine\u202f; Lecture carte membre La lecture de carte membre est effectu\u00e9e \u00e0 l'aide d'un script ind\u00e9pendamment de l'application principale. Aucune interface n'est disponible pour le moment, seul un message est affich\u00e9 dans le terminal pour afficher si le client a \u00e9t\u00e9 reconnu ou non. Cette partie permet au client de : Scanner sa carte membre en arrivant \u00e0 la salle de sport, la carte est reconnue et le client est identifi\u00e9. Scanner sa carte de membre en sortant de la salle de sport, les donn\u00e9es de l'entrainement effectu\u00e9 sont alors r\u00e9cup\u00e9r\u00e9s et enregistr\u00e9s. Sitemap La sitemap de l'application poss\u00e8de 2 alternatives, 1 pour les clients et 1 pour les coachs. Sitemap Client Voici la sitemap client, on y retrouve tous les chemins utilisables en tant que client : Sitemap Coach Voici la sitemap coach, on y retrouve tous les chemins utilisables en tant que coach : Maquettage Pour pr\u00e9parer les interfaces, j'ai r\u00e9alis\u00e9 des maquettes avec l'outil Figma. Les maquettes m'ont permis de mettre \u00e0 plat les \u00e9l\u00e9ments n\u00e9cessaires pour les interfaces et ont \u00e9vit\u00e9 de perdre trop de temps lors de la cr\u00e9ation des interfaces. L'application FitJourney propose 2 niveaux d'acc\u00e8s : Client Coach En tant que client Le client doit se connecter pour avoir acc\u00e8s \u00e0 l'application, il ne peut pas se cr\u00e9er de compte tout seul. Page de connexion La page de connexion permet aux utilisateurs de se connecter. Un lien est disponible si le mot de passe a \u00e9t\u00e9 oubli\u00e9. Barre de navigation La barre de navigation disponible en tant que client verticalement \u00e0 gauche de l'\u00e9cran. 3 boutons de navigation suppl\u00e9mentaires sont disponibles : Profil Agenda Entrainement Page profil La page profil permet au client de modifier ses informations personnelles. Plusieurs boutons sont disponibles : 1 bouton \"Update\" pour appliquer les modifications effectu\u00e9es sur les informations du compte 1 bouton \"Change password\" en jaune pour modifier le mot de passe 1 bouton \"Change logo\" pour importer une photo de profil. Il a \u00e9galement acc\u00e8s \u00e0 des statistiques sur les donn\u00e9es des entrainements qu'il a effectu\u00e9s cette semaine (en rouge) et la liste des bilans g\u00e9n\u00e9raux et de session que l'utilisateur a post\u00e9s (en vert). Il a la possibilit\u00e9 d'ajouter un nouveau bilan g\u00e9n\u00e9ral en cliquant sur le bouton au-dessus. Page Ajout Bilan La page \"Ajout Bilan\" permet au client de noter, soit la qualit\u00e9 du suivi effectu\u00e9 par le coach, soit une session effectu\u00e9e. Dans la zone rouge, l'\u00e9l\u00e9ment qui est \u00e9valu\u00e9 (un coach ou une session). Dans la zone bleue, les diff\u00e9rents \u00e9l\u00e9ments \u00e0 noter ainsi qu'une zone pour ajouter un commentaire. Page Bilan La page \"Bilan\" permet de voir le bilan ajout\u00e9, soit un bilan sur le suivi de mani\u00e8re g\u00e9n\u00e9rale, soit un bilan sur une session effectu\u00e9e. Dans la zone rouge, on peut voir de quel type de bilan il s'agit (Bilan g\u00e9n\u00e9ral sur le coaching ou bilan d'une session). Dans la zone verte, on retrouve le client et la date \u00e0 laquelle le bilan a \u00e9t\u00e9 post\u00e9. Dans la zone bleue, on retrouve les \u00e9l\u00e9ments qui ont \u00e9t\u00e9 not\u00e9 par le client. Page liste entrainements Cette page affiche la liste de tous les entrainements effectu\u00e9s par le client. L'utilisateur peut cliquer sur chaque \u00e9l\u00e9ment de la liste pour avoir les d\u00e9tails de l'entrainement. Page d\u00e9tails entrainement Cette page affiche les d\u00e9tails d'un entrainement avec les donn\u00e9es r\u00e9cup\u00e9r\u00e9es \u00e0 l'aide de la smartwatch. On peut retrouver des informations comme : Le nombre de calories br\u00fbl\u00e9es Les pulsations cardiaques par minute avec un graphique montrant l'\u00e9volution durant l'entrainement La dur\u00e9e de l'entrainement Le type d'entrainement Le client peut ajouter un bilan en cliquant sur le bouton (encadr\u00e9 en rouge) pour donner son ressenti sur la s\u00e9ance. Page prochaine session Cette page affiche les prochaines sessions d'entrainements avec un coach du client En tant que coach Le coach peut se cr\u00e9er un compte et se connecter \u00e0 l'application, une fois connect\u00e9, il a acc\u00e8s \u00e0 toute l'application. Page d'enregistrement La page d'enregistrement permet aux coachs de s'enregistrer, une fois enregistr\u00e9 il peut se connecter avec la page de connexion Barre de navigation La barre de navigation disponible en tant que client verticalement \u00e0 gauche de l'\u00e9cran. 1 bouton suppl\u00e9mentaire est disponible : Dashboard Page tableau de bord La page tableau de bord permet au coach de voir la liste des clients (en rouge) dont il effectue le suivi. Le coach peut cliquer sur le nom d'un de ses clients pour afficher le profil du client concern\u00e9. Il a \u00e9galement acc\u00e8s \u00e0 un bouton pour ajouter un nouveau client (en bleu). Les informations de la prochaine session avec un client sont disponibles au-dessus de la liste des clients (en vert). Page Ajout de client La page ajout de client permet au coach d'effectuer la prise en charge d'un nouveau client. Si le client poss\u00e8de d\u00e9j\u00e0 un compte, le coach peut s\u00e9lectionner un compte d\u00e9j\u00e0 existant (en vert) ou cr\u00e9er un nouveau compte client. Si le coach s\u00e9lectionne un compte d\u00e9j\u00e0 existant, les champs se remplissent automatiquement. Il faudra uniquement s\u00e9lectionner le type d'abonnement souhait\u00e9 (en rouge) Page profil client La page profil client permet au coach de visionner le profil de ses clients (en bleu). Plusieurs boutons sont disponibles : 1 bouton pour le changement de la carte de membre (Bouton bleu) 1 bouton pour le renouvellement de l'abonnement (Bouton vert) 1 bouton pour l'annulation de l'abonnement (Bouton rouge) Il peut \u00e9galement voir les graphiques/statistiques disponibles sur le profil. Le coach peut ajouter les nouveaux programmes du client (en rouge) \u00e0 l'aide des boutons d'importation (1 bouton pour le programme d'entrainement et 1 bouton pour le programme de nutrition). Les anciens programmes sont disponibles en cliquant sur les boutons du programme souhait\u00e9 (bouton vert et orange), leurs dates d'importation sont affich\u00e9es \u00e0 c\u00f4t\u00e9. Dans la zone verte, on peut retrouver les diff\u00e9rents bilans de satisfaction que le client a ajout\u00e9s. En haut de cette zone, un bouton d'ajout de bilan est disponible. Il va permettre d'effectuer le bilan du client et d'ajouter les nouvelles informations (Poids, Masse graisseuse, etc) Page Bilan client La page Bilan client permet au coach d'ajouter le bilan d'un client. Dans la zone rouge, on retrouve les infos qui changent le moins, voire jamais (Nom, taille ou encore l'\u00e2ge). Dans la zone bleue, les informations importantes qui ont pu \u00eatre r\u00e9cup\u00e9r\u00e9es suite \u00e0 la pes\u00e9e. Dans la zone verte, il est possible d'ajouter des photos du physique du client pour pouvoir \u00e9ventuellement avoir des avants/apr\u00e8s en guise de comparaison. Page Abonnement La page abonnement permet de valider le paiement d'un client (Aucune transaction n'est effectu\u00e9 par l'application). Le coach peut s\u00e9lectionner le type d'abonnement que le client souhaite prendre, la date d'\u00e9ch\u00e9ance du nouvel abonnement s\u00e9lectionn\u00e9 ainsi que son co\u00fbt seront affich\u00e9s. Page Calendrier La page calendrier permet au coach d'avoir acc\u00e8s \u00e0 un calendrier et de visionner les rendez-vous enregistr\u00e9s \u00e0 la date s\u00e9lectionn\u00e9e. Les sessions enregistr\u00e9es sont affich\u00e9es dans la zone rouge, avec quelques d\u00e9tails sur la s\u00e9ance. Dans la zone verte, un bouton pour ajouter une nouvelle session avec un client est disponible. Le coach doit renseigner : Le nom du client (Liste d\u00e9roulante parmi ses clients) L'heure de la session La dur\u00e9e Le type de session Analyse Organique Mise en place / Environnement Visual Studio Code J'ai choisi d'utiliser Visual Studio code pour \u00e9diter mon code, il est directement reli\u00e9 \u00e0 mon repos sur Github. Je peux donc directement depuis Visual Studio Code commit tous les changements que j'effectue. Mkdocs Mkdocs permet de g\u00e9n\u00e9rer un site statique pour la documentation. Il prend en compte tous les fichiers Markdown (.md) dans le dossier docs/ , et un fichier de configuration YAML qui se trouve \u00e0 la racine du projet. Mkdocs me permet de visionner mes fichiers Markdown en direct et \u00e0 l'aide de l'extension with-pdf , de g\u00e9n\u00e9rer un fichier PDF de me tous mes fichiers Markdown. GitHub Pour pouvoir garder un suivi constant de mon projet, j'ai choisi d'utiliser GitHub comme outil de contr\u00f4le de version. Voici comment est structur\u00e9 le github : Le dossier docs/ contient les fichiers de documentation et de journal de bord Le dossier src/ contient tout le code source de l'application Trello Trello est un outil de gestion de projet en ligne, inspir\u00e9 par la m\u00e9thode Kanban. Il repose sur une organisation des projets en planches listant des cartes, chacune repr\u00e9sentant des t\u00e2ches. Afin de cr\u00e9er une roadmap pour mon projet, j'ai utilis\u00e9 Trello pour lister les diff\u00e9rentes \u00e9tapes de mon projet. J'ai ensuite pu d\u00e9finir les \u00e9ch\u00e9ances pour chaque t\u00e2che/\u00e9tapes avec mon planning pr\u00e9visionnel. J'ai cr\u00e9\u00e9 5 colonnes : Backlog (Liste de toutes les t\u00e2ches) To-Do (Les t\u00e2ches qui ont \u00e9t\u00e9 valid\u00e9es et qui sont \u00e0 faire) Doing (Les t\u00e2ches en cours) Testing (Les t\u00e2ches en cours de test) Done (Les t\u00e2ches termin\u00e9es) Guide d'installation FitJourney utilise la 3\u1d49 version de Python (donc python3 ) Windows Premi\u00e8rement, cela serait int\u00e9ressant de travailler sur un environnement WSL avec VSCode. Pour mettre en place WSL, j'ai suivi le guide disponible directement dans la documentation de VSCode : https://code.visualstudio.com/docs/remote/wsl MySQL Une fois l'environnement de d\u00e9veloppement install\u00e9 correctement, il faut installer MySQL (si cela n'est pas d\u00e9j\u00e0 fait) \u00e0 l'aide de la commande : sudo apt install mysql-server Puis lancer le service MySQL: sudo service mysql start et sudo mysql_secure_installation Pour se connecter \u00e0 la base de donn\u00e9es, utiliser un DBMS comme DBeaver ou MySQLWorkbench . pip3 Il faut s'assurer que pip3 a bien \u00e9t\u00e9 install\u00e9 afin de t\u00e9l\u00e9charger tous les paquets/librairies pour faire fonctionner l'application comme il faut. sudo apt install python3-pip Si une erreur survient, utiliser la commande : sudo apt update && sudo apt upgrade Sinon, vous pouvez v\u00e9rifier que pip3 a bien \u00e9t\u00e9 install\u00e9 en utilisant : pip3 --version Pyscard Pour pouvoir installer la librairie pyscard sur Windows, il faut au pr\u00e9alable installer SWIG depuis le lien suivant : https://www.swig.org/download.html Il faut ensuite l'ajouter directement au PATH en modifiant les variables d'environnement dans les propri\u00e9t\u00e9s syst\u00e8me. On peut ensuite ajouter simplement le chemin vers le dossier swig que l'on a t\u00e9l\u00e9charg\u00e9 : Une fois ajout\u00e9, il faut ensuite installer Visual C++ version 14.0 ou plus r\u00e9cente (directement installable depuis le Visual Studio Installer) ( https://visualstudio.microsoft.com/fr/downloads/ ) Requirements Une fois que swig a \u00e9t\u00e9 ajout\u00e9 au PATH et que pip3 a \u00e9t\u00e9 install\u00e9, il faut installer tous les paquets n\u00e9cessaires pour l'application. Un fichier requirements.txt contenant toutes les librairies n\u00e9cessaires est disponible dans le dossier src/ pip3 install -r requirements.txt /!\\ Ne pas toucher ce fichier. API L'API utilis\u00e9e est l'API Accesslink v3.144.0 de Polar https://www.polar.com/accesslink-api/#polar-accesslink-api . Pour pouvoir utiliser l'API, il faut disposer au pr\u00e9alable d'un compte Polar Flow https://flow.polar.com/ . Cr\u00e9ation d'un nouveau client pour l'API Aller sur https://admin.polaraccesslink.com/ . Il faut se connecter avec votre compte Polar Flow et ajouter un nouveau client. Il faut utiliser http://localhost:5000/oauth2_callback pour la callback d'autorisation. Configuration des identifiants Ajouter l' id et le secret client dans le fichier src/cardsChecker/config.yml comme ceci : client_id: 57a715f8-b7e8-11e7-abc4-cec278b6b50a client_secret: 62c54f4a-b7e8-11e7-abc4-cec278b6b50a Authentification Le compte utilisateur doit \u00eatre reli\u00e9 au client cr\u00e9\u00e9 avant de pouvoir acc\u00e9der aux donn\u00e9es. Pour le relier, il faut lancer le script src/cardsChecker/authorization.py python3 authorization.py puis aller sur la page ' https://flow.polar.com/oauth2/authorization?response_type=code&client_id=CLIENT_ID ' pour relier votre compte utilisateur. (' CLIENT_ID ' doit \u00eatre remplac\u00e9 par votre id client) Une fois ces \u00e9tapes effectu\u00e9es, votre compte aura acc\u00e8s aux donn\u00e9es Polar. Base de donn\u00e9es Pour la base de donn\u00e9es, il suffit de cr\u00e9er une base nomm\u00e9e fitjourney , (respecter le nom sinon l'application ne fonctionnera pas). Vous pouvez ensuite ex\u00e9cuter le script sql disponible \u00e0 src/apps/db.sql . Organisation / Gestion du temps Convention : en-t\u00eates Tous les fichiers d\u00e9velopp\u00e9s par moi-m\u00eame poss\u00e8dent l'ent\u00eate ci-dessous : Backlog Les backlogs ont \u00e9t\u00e9 identifi\u00e9s au lancement du projet (certains l'ont \u00e9t\u00e9 au fur et \u00e0 mesure que le projet avan\u00e7ait). Ils ont \u00e9t\u00e9 ajout\u00e9s au Trello qui est l'outil qui a \u00e9t\u00e9 choisi pour g\u00e9rer le projet. Avec les cartes Trello, j'ai d\u00e9fini la difficult\u00e9 et la priorit\u00e9 des t\u00e2ches. Il \u00e9tait donc plus simple pour moi de visualiser quelles t\u00e2ches devaient \u00eatre r\u00e9alis\u00e9 en priorit\u00e9s. Difficult\u00e9 La difficult\u00e9 est d\u00e9finie par une \u00e9tiquette de couleur selon la charte que j'ai d\u00e9finie : Priorit\u00e9 La priorit\u00e9 est d\u00e9finie \u00e9galement par une \u00e9tiquette qui provient de l'extension \"CardsPriority\" sur Trello. Les priorit\u00e9s assign\u00e9es suivent la charte : Planning Un planning pr\u00e9visionnel a \u00e9t\u00e9 r\u00e9alis\u00e9 au d\u00e9but du projet afin de lister les t\u00e2ches et d'estimer leurs dur\u00e9es. En regardant les graphiques, on peut directement apercevoir que les deux n'ont aucun point en commun. Planning pr\u00e9visionnel Planning effectif Lors de la r\u00e9alisation du projet, beaucoup de t\u00e2ches sont venues s'ajout\u00e9es. Toute la mise en place de la structure de l'application avec Python Flask m'a prise beaucoup plus de temps que pr\u00e9vu. Les besoins de la base de donn\u00e9es qui ont \u00e9t\u00e9 revu \u00e0 maintes reprises. Le planning initial n'a vraiment pas pu \u00eatre respect\u00e9 \u00e0 cause des diff\u00e9rentes t\u00e2ches qui ont \u00e9t\u00e9 identifi\u00e9es uniquement apr\u00e8s avoir commenc\u00e9 le projet. Technologies utilis\u00e9es NFC Reader ACR122U Le lecteur NFC ACR122U est un appareil permettant de lire et d'\u00e9crire sur des cartes sans contact. Il est bas\u00e9 sur la technologie Mifare 13,56 MHz (RFID) et suit les standards de la norme ISO 18092. L'ACR122U est d\u00e9velopp\u00e9 et vendu par ACS ltd. Pour pouvoir utiliser ce lecteur, j'ai utilis\u00e9 la librairie pyscard qui me permet de r\u00e9cup\u00e9rer les infos des cartes \u00e0 puces que le lecteur lit RFID Qu'est-ce que la technologie RFID ?? RFID (Radio Frequency Identification), est une technologie qui permet d'enregistrer des donn\u00e9es sur un support et de les r\u00e9cup\u00e9rer \u00e0 distance. Elle est apparue dans les ann\u00e9es 1940 et \u00e9tait utilis\u00e9e uniquement par l'arm\u00e9e pour l'identification des avions de guerre qui entrait dans l'espace a\u00e9rien du Royaume-Uni. Elle s'est ensuite r\u00e9pandue dans diff\u00e9rents secteurs industriels \u00e0 partir des ann\u00e9es 1980. Comment fonctionne la RFID ? Les \u00e9tiquettes RFID sont compos\u00e9es d'une puce RFID et d'une antenne et sont coll\u00e9es sur un produit. Elles enregistrent les donn\u00e9es et avec un lecteur \u00e9lectromagn\u00e9tique on peut ensuite lire les ondes radio pr\u00e9sentes sur la puce RFID gr\u00e2ce \u00e0 l'antenne. Pourquoi utiliser RFID RFID est un syst\u00e8me de tra\u00e7abilit\u00e9. \u00c0 l'aide d'une seule puce, il est possible de tracer les produits pendant tout le processus de production, de transport et de distribution, voire jusqu'\u00e0 leur fin de vie. Dans le cadre de mon projet, RFID est une solution ad\u00e9quate pour g\u00e9rer les entr\u00e9es/sorties des clients dans la salle d'entrainement. Diff\u00e9rences entre RFID et NFC Dans le cadre de mon projet, j'utilise parfois le terme NFC. La technologie NFC (Near Field Communication) est un d\u00e9riv\u00e9 de la RFID qui a commenc\u00e9 \u00e0 \u00eatre utilis\u00e9 d\u00e8s 2011. Le NFC repose sur le m\u00eame concept que la RFID. C'est une technologie qui fonctionne avec une puce permettant d'\u00e9changer des donn\u00e9es entre un lecteur et n'importe quel terminal avec un simple rapprochement ou contact entre les deux objets. La communication sans fil ne fonctionne qu'\u00e0 courte port\u00e9e et haute fr\u00e9quence, une distance d'environ 10\u2009cm. La technologie NFC se retrouve dans la plupart des smartphones, consoles de jeux ou cartes bancaires. Le lecteur de carte que j'utilise fonctionne \u00e0 l'aide de cette technologie \u00e9galement. Les principales diff\u00e9rences entre RFID et NFC r\u00e9sident dans la port\u00e9e plus courte et s\u00e9curis\u00e9e pour NFC (10\u2009cm) contre jusqu'\u00e0 10\u2009m pour RFID. La technologie NFC peut transmettre toute sorte de donn\u00e9es contre RFID qui ne transmet que l'ID. La lecture fait, quant \u00e0 elle, d\u00e9faut \u00e0 la technologie NFC qui ne peut lire qu'une puce \u00e0 la fois, ce qui peut limiter ses cas d'utilisation. Pyscard - Librairie Python Smart card Pyscard est un module python qui permet d'utiliser les cartes \u00e0 puce (PC/SC) avec python. Il donne acc\u00e8s \u00e0 plusieurs classes et fonctions donnant acc\u00e8s aux cartes et aux lecteurs. Architecture pyscard : smartcard.scard est un module d'extension enveloppant l'API WinSCard (Les composants de base smartcard) aussi connue sous le nom PC/SC (Personal computer / Smart Card) smartcard est un framework Python construit \u00e0 partir de l'API PC/SC SWIG SWIG est un outil logiciel open source qui permet de connecter des logiciels ou librairies \u00e9crites en C/C++ avec des langages de scripts tels que : Perl , Python , Ruby , PHP ou d'autres langages de programmation comme Java ou C# . Polar Accesslink API Accesslink est une API qui donne acc\u00e8s aux donn\u00e9es d'entrainement et d'activit\u00e9 journali\u00e8re enregistr\u00e9s par les appareils Polar. Pour pouvoir l'utiliser, il est n\u00e9cessaire de poss\u00e9der un compte Polar Flow afin de cr\u00e9er un client sur admin.polaraccesslink.com qui nous donnera acc\u00e8s \u00e0 l'API. Accesslink utilise OAuth2 comme protocole d'authentification. Les utilisateurs enregistr\u00e9s ont besoin de s'authentifier pour pouvoir avoir acc\u00e8s aux donn\u00e9es. Fonctionnalit\u00e9s de base d'Accesslink : Fonctionnalit\u00e9 Description Utilisateurs Permets d'enregistrer, supprimer et r\u00e9cup\u00e9rer les informations de base de l'utilisateur Pull Notification Permets de v\u00e9rifier si l'utilisateur \u00e0 des donn\u00e9es disponibles \u00e0 r\u00e9cup\u00e9rer Donn\u00e9e d'entrainement Permets d'acc\u00e9der aux donn\u00e9es d'entrainements de l'utilisateur Activit\u00e9 journali\u00e8re Permets d'acc\u00e9der aux donn\u00e9es de l'activit\u00e9 journali\u00e8re de l'utilisateur Info physique Permets d'acc\u00e9der aux informations physiques de l'utilisateur (Ex : Taille/Poids) Mod\u00e8le de donn\u00e9es D\u00e9crit tous les objets qui transportent les donn\u00e9es entre le serveur et le client Annexes Contient des exemples et des d\u00e9tails sur l'interface de l'application Choix dans le projet - FitJourney Je souhaitais utiliser les donn\u00e9es d'entrainements en provenance de montre connect\u00e9e et j'avais d\u00e9j\u00e0 en ma possession une montre Polar. Mon choix s'est donc naturellement orient\u00e9 vers Polar, lorsque j'ai pris connaissance de l'API d\u00e9velopp\u00e9e en Python qu'ils mettaient \u00e0 disposition. Python Python est un langage tr\u00e8s flexible qui propose une approche modulaire et orient\u00e9 objet de la programmation. Il est plac\u00e9 sous une licence libre et fonctionne sur la plupart des plates-formes informatiques. Il est con\u00e7u pour optimiser la productivit\u00e9 des programmeurs en offrant des outils de haut niveau et une syntaxe simple \u00e0 utiliser. Choix dans le projet - FitJourney Durant ma derni\u00e8re ann\u00e9e en tant que Technicien ES, j'ai beaucoup utilis\u00e9 python dans mes projets. En trouvant de plus en plus d'outils comme la librairie pyscard ou encore l'API Polar en Python, je me suis tr\u00e8s vite d\u00e9cid\u00e9 sur le langage que j'allais utiliser pour ce projet. Python Flask (backend) Flask est un micro-framework Python qui permet la cr\u00e9ation d'applications web \u00e9volutives. Flask d\u00e9pend de la boite \u00e0 outils WSGI (Web Server Gateway Interface) de Werkzeug et du moteur de templates Jinja . Le dossier app/ repr\u00e9sente une application Flask, elle est entre-autre homog\u00e8ne \u00e0 une fonction WGSI. Utilisation Flask Pour lancer une application Flask, il faut utiliser la m\u00e9thode de l'objet Flask : .run() ou lancer directement l'application \u00e0 l'aide de la commande : Flask run Micro framework Un micro framework est un framework qui tente de fournir uniquement les composants absolument n\u00e9cessaires \u00e0 un d\u00e9veloppeur pour la cr\u00e9ation d'une application. Par exemple, dans le cas d'une application Web, un micro framework peut \u00eatre sp\u00e9cifiquement con\u00e7u pour la construction d'API pour un autre service/application. Le terme micro dans le micro framework signifie que Flask vise \u00e0 garder le code de base simple, mais extensible. Flask ne prendra pas beaucoup de d\u00e9cisions, par exemple quelle base de donn\u00e9es utiliser. Les d\u00e9cisions qu'il prend, telles que le moteur de templates \u00e0 utiliser, sont faciles \u00e0 modifier. Tout le reste est libre, de sorte que Flask puisse r\u00e9pondre \u00e0 tous nos besoins et \u00e0 tous ce que vous ne voulez pas en m\u00eame temps. En d\u00e9finissant uniquement le moteur de templates et un syst\u00e8me de routes, Flask laisse le choix de personnaliser (en ajoutant des packages) pour la gestion des formulaires par exemple. Choix dans le projet FitJourney Dans le cadre de ce projet, j'ai pr\u00e9f\u00e9r\u00e9 utiliser Flask comme framework \u00e0 la place d'un autre, car j'utilise l'API Polar Accesslink qui est fait en Python. Je souhaitais garder le m\u00eame langage pour \u00e9viter de partir dans tous les sens. Architecture (Blueprint) Afin de bien structurer mon projet, j'ai d\u00e9cid\u00e9 d'utiliser les Flask Blueprint. Chaque Flask Blueprint est un objet et fonctionne de mani\u00e8re tr\u00e8s similaire \u00e0 une application Flask. Ils peuvent tous les deux avoir des ressources, comme des fichiers statiques, des templates et des vues qui sont associ\u00e9es aux routes. Malgr\u00e9 tout, un Flask Blueprint n'est pas exactement comme une application Flask car il a besoin d'\u00eatre enregistr\u00e9 dans l'application pour \u00eatre lanc\u00e9. Lorsqu'on enregistre un Blueprint \u00e0 l'application, on \u00e9tend l'application avec le contenu du Blueprint. Les Blueprints enregistrent toutes les op\u00e9rations \u00e0 ex\u00e9cuter et ne les ex\u00e9cutent qu'une fois enregistr\u00e9 dans l'application Les Blueprints m'ont permis de d\u00e9couper l'application principale en plusieurs parties et de structurer mon projet. Argon Design System Argon est un \"design system\" open source bas\u00e9 sur le framework CSS Bootstrap 4. Il propose plus de 100 composants individuels ce qui permet une certaine libert\u00e9. Argon m'a permis de ne pas perdre trop de temps sur le c\u00f4t\u00e9 \"design\" de l'application Chart.JS Chart.js est une librairie open source, elle permet la visualisation de donn\u00e9es en utilisant JavaScript. Elle est similaire \u00e0 Chartist ou Google Chart . Chart.js supporte 8 diff\u00e9rents types de graphique et sont tous responsive. Pour pouvoir utiliser Chart.js il faut : D\u00e9finir ou dessiner le graphique sur notre page D\u00e9finir quel type de graphique afficher D\u00e9finir les donn\u00e9es, labels et toutes les autres options Voici un exemple de graphique que peut g\u00e9n\u00e9rer chart.js : FullCalendar.io FullCalendar est une librairie JavaScript qui s'int\u00e8gre facilement avec des frameworks JavaScript populaires tels que Vue, React et Angular. Elle permet d'impl\u00e9menter un calendrier avec des \u00e9v\u00e9nements. Cette librairie est tr\u00e8s utile pour g\u00e9rer l'agenda du coach. Architecture du projet Voici l'architecture du projet Fitjourney : Arborescence application principale run.py | apps/ | |\u2500\u2500 __init__.py \u251c\u2500\u2500 config.py | \u251c\u2500\u2500 authentication/ | \u251c\u2500\u2500 __init__.py | \u251c\u2500\u2500 forms.py | \u251c\u2500\u2500 models.py | \u251c\u2500\u2500 routes.py | \u2514\u2500\u2500 util.py | \u251c\u2500\u2500 client/ | \u251c\u2500\u2500 __init__.py | \u251c\u2500\u2500 forms.py | \u251c\u2500\u2500 routes.py | \u2514\u2500\u2500 util.py | \u251c\u2500\u2500 coach/ | \u251c\u2500\u2500 __init__.py | \u251c\u2500\u2500 forms.py | \u251c\u2500\u2500 routes.py | \u2514\u2500\u2500 util.py | \u251c\u2500\u2500 static/assets/ | \u251c\u2500\u2500 css/ | \u251c\u2500\u2500 fonts/ | \u251c\u2500\u2500 img/ | \u251c\u2500\u2500 js/ | \u2514\u2500\u2500 vendor/.py | \u2514\u2500\u2500 templates/ \u251c\u2500\u2500 accounts/ \u251c\u2500\u2500 client/ \u251c\u2500\u2500 coach/ \u251c\u2500\u2500 includes/ \u2514\u2500\u2500 layout/ Fichier \"run.py\" Le fichier run.py est le seul fichier qui est en dehors du dossier principal de l'application. Il permet de cr\u00e9er et de lancer l'application Flask. On peut lancer directement l'application en ex\u00e9cutant ce script. python3 ./run.py Dossier \"Apps\" Le dossier Apps est le dossier principal de l'application. Il comprend l'ensemble du code source du projet except\u00e9 le fichier \"run.py\". Il comprend lui-m\u00eame plusieurs sous-dossiers expliqu\u00e9s dans les chapitres suivants. Dossier \"authentication\" Le dossier authentication repr\u00e9sente le Blueprint authentication_blueprint . On retrouve tous les fichiers utilis\u00e9s pour l'impl\u00e9mentation des fonctionnalit\u00e9s d'authentification. Avec Flask, j'impl\u00e9mente un ORM nomm\u00e9 SQL Alchemy qui impl\u00e9mente le design pattern Data Mapper pour lire les donn\u00e9es de la base de donn\u00e9es. Chacune des tables est repr\u00e9sent\u00e9e par un mod\u00e8le qui est utilis\u00e9 pour interagir avec la table en question. Sachant que l'application FitJourney n'a pas de fonctionnalit\u00e9s disponibles avant que l'utilisateur ne s'authentifie, le fichier \"models.py\" se trouve dans ce dossier, on y retrouve notamment tous les mod\u00e8les. Fichier \"authentication/routes.py\" Le fichier routes contient des fonctions python repr\u00e9sentant les vues de la partie authentification de l'application. Chaque fonction permet de g\u00e9n\u00e9rer une vue \u00e0 partir des templates Jinja2, \u00e0 l'aide de la fonction Flask render_template qui provient du package Flask.templating . Dossier \"client\" Le dossier client repr\u00e9sente le Blueprint client_blueprint . On retrouve tous les fichiers utilis\u00e9s pour l'impl\u00e9mentation des fonctionnalit\u00e9s client. Il contient un fichier de routes, avec toutes les routes disponibles en tant que client sur l'application et un fichier \"forms.py\" qui contient tous les formulaires qui peuvent \u00eatre disponible en tant que client. Dossier \"coach\" Le dossier coach repr\u00e9sente le Blueprint coach_blueprint . On retrouve tous les fichiers utilis\u00e9s pour l'impl\u00e9mentation des fonctionnalit\u00e9s coach. Comme le dossier \"client\" il contient \u00e9galement un fichier de routes et un fichier \"forms\" pour les formulaires. Dossier \"static/assets/css\" Le dossier \"css\" contient tous les fichiers CSS de l'application. Il contient \u00e9galement un dossier \"bootstrap\" contenant des fichiers de style de l'ensemble Bootstrap Dossier \"static/assets/fonts\" Le dossier \"fonts\" contient les fichiers de police d'\u00e9criture utilis\u00e9s dans l'application Dossier \"static/assets/img\" Le dossier \"img\" contient toutes les images de l'application, dont notamment les photos de profil des utilisateurs. Dossier \"static/assets/js\" Le dossier \"js\" contient tous les fichiers JavaScript n\u00e9cessaire pour l'application. Dossier \"static/assets/vendor\" Le dossier \"vendor\" contient toutes les biblioth\u00e8ques tierces qui sont n\u00e9cessaires au projet (ressources externes). C'est g\u00e9n\u00e9ralement dans ce dossier o\u00f9 sont stock\u00e9es les d\u00e9pendances \u00e0 t\u00e9l\u00e9charger avec un packet manager. Dossier \"templates\" Le dossier templates est structur\u00e9 en plusieurs parties. Il contient les fichiers .html de l'application. Chaque Blueprint de l'application poss\u00e8de son dossier ici qui contient les templates n\u00e9cessaire pour les vues. En plus des dossiers repr\u00e9sentant les Blueprints, un dossier includes est disponible. Il contient les parties \u00e0 inclure sur les diff\u00e9rentes pages de l'application comme la barre de navigation ou encore les importations de fichiers CSS ou JavaScript. Il y a \u00e9galement un dossier layout qui contient un fichier de base .html qui contient la structure HTML de l'application. Fichier \"__init.py\" Le fichier \"init\" est un fichier python contenant les m\u00e9thodes d'initialisation de l'application. C'est notamment ici que les blueprints sont enregistr\u00e9s dans l'application. Fichier \"config.py\" Le fichier \"config\" est un fichier python contenant la configuration de l'application. Il contient toutes les constantes n\u00e9cessaires au fonctionnement de l'application Arborescence lecture de carte cardsChecker/ | |\u2500\u2500 accesslink/ | \u251c\u2500\u2500 accesslink_polar.py | \u251c\u2500\u2500 authorization.py | \u251c\u2500\u2500 config.py | \u251c\u2500\u2500 config.yml | \u251c\u2500\u2500 db.py | \u251c\u2500\u2500 main.py | \u2514\u2500\u2500 utils.py Dossier \"accesslink/\" Le dossier \"accesslink\" contient tous les scripts python permettant l'authentification, l'ex\u00e9cution des diff\u00e9rentes transactions et r\u00e9cup\u00e9rer des donn\u00e9es avec l'API Polar Accesslink. La plupart des fichiers pr\u00e9sents dans ce dossier sont fournis par Polar. Fichier \"accesslink_polar.py\" Le fichier \"accesslink_polar\" contient un objet Python qui enveloppe toutes les fonctionnalit\u00e9s de l'API Polar \u00e0 l'aide des objets et m\u00e9thode disponible dans le dossier \"accesslink/\" Fichier \"authorization.py\" Le fichier \"authorization\" est un script python qui permet d'authentifier un compte Polar pour avoir acc\u00e8s \u00e0 l'API Fichier \"config.py\" Le fichier \"config.py\" contient toutes les constantes n\u00e9cessaires pour le bon fonctionnement de la lecture des cartes de membre. On y retrouve notamment la configuration pour se connecter \u00e0 la base de donn\u00e9es. Fichier \"config.yml\" Le fichier \"config.yml\" contient la configuration du client pour avoir acc\u00e8s aux donn\u00e9es avec l'API Polar. Il Contient : L'id de l'utilisateur L'id du client (Pour l'acc\u00e8s) Le secret du client Le token d'acc\u00e8s (Il est g\u00e9n\u00e9r\u00e9 avec le fichier authorization.py ) Fichier \"db.py\" Le fichier \"db.py\" est utilis\u00e9 pour se connecter \u00e0 la base de donn\u00e9es, on y retrouve \u00e9galement les fonctions effectuant des actions avec cette derni\u00e8re. Fichier \"main.py\" Le fichier \"main.py\" contient le script python principal qui permet la lecture des cartes et la r\u00e9cup\u00e9ration des donn\u00e9es avec l'API Polar. C'est ce script qu'il faut ex\u00e9cuter pour lancer le programme. Base de donn\u00e9es Pour permettre le stockage des donn\u00e9es, j'ai cr\u00e9\u00e9 une base de donn\u00e9es nomm\u00e9e \"fitjourney\". Cette base de donn\u00e9es me permet d'enregistrer et stocker toutes les donn\u00e9es requises pour le bon fonctionnement de l'application. MCD Au lieu de cr\u00e9er la base de donn\u00e9es directement, j'ai commenc\u00e9 par cr\u00e9er un MCD pour d\u00e9finir tous les besoins de l'application au niveau de la base de donn\u00e9es. Pour faire mon MCD, je suis all\u00e9 sur LucidChart qui est une plateforme de collaboration en ligne permettant la cr\u00e9ation de diagrammes et la visualisation de donn\u00e9es et autres sch\u00e9mas conceptuels. Mod\u00e8le physique Une fois les besoins identifi\u00e9s \u00e0 l'aide du MCD, j'ai pu utiliser SQL Alchemy pour cr\u00e9er ma base de donn\u00e9es directement. SQLAlchemy SQL Alchemy est un ORM (mapping objet-relationnel) \u00e9crit en Python, il utilise le pattern Data Mapper et me permet de cr\u00e9er directement mes tables. Exemple d'initialisation d'une table avec SQL Alchemy : Data Mapper Data Mapper est un pattern qui s\u00e9pare les objets en m\u00e9moire de la base de donn\u00e9es. Il consiste \u00e0 transf\u00e9rer les donn\u00e9es entre les deux et \u00e0 les isoler l'une de l'autre. Avec le pattern Data Mapper , les objets en m\u00e9moire ne doivent m\u00eame pas savoir qu'une base de donn\u00e9es est pr\u00e9sente, ils n'ont pas besoin de code d'interface SQL, et certainement pas de connaissance du sch\u00e9ma de la base de donn\u00e9es. (Le sch\u00e9ma de la base de donn\u00e9es ignore toujours les objets qui l'utilisent). Tables Table USER La table USER contient tous les utilisateurs de l'application, les coachs ainsi que les clients. les champs email et card_id sont uniques. Le champ card_id repr\u00e9sente l'ID de la carte de membre (RFID) qui est attribu\u00e9e \u00e0 l'utilisateur. Table PHYSICAL_INFO La table PHYSICAL_INFO contient toutes les informations physiques r\u00e9cup\u00e9r\u00e9es par le coach lors d'un bilan ou d'une prise en charge. La date permet de garder un historique pour visualiser la progression du client. La plupart des donn\u00e9es ins\u00e9r\u00e9es dans cette table peuvent \u00eatre r\u00e9cup\u00e9r\u00e9es \u00e0 l'aide d'une balance connect\u00e9e. Table COACHEDBY Cette table permet de diff\u00e9rencier un coach d'un client et permet de retrouver tous les clients d'un coach. Les dates de d\u00e9but et de fin permettent de retrouver des anciens coachs/clients si plusieurs coachs travaillent dans la salle de sport. Table PROGRAM La table PROGRAM contient les programmes d'entrainement et de nutrition ajout\u00e9 par un coach. Table ROLE La table ROLE contient tous les r\u00f4les de l'application. Elle permet de d\u00e9finir les acc\u00e8s que poss\u00e8dent les utilisateurs. Table PURCHASE La table PURCHASE contient l'historique de toutes les transactions effectu\u00e9es. Elle permet de retrouver le type d'abonnement que chaque client a souscrit. Table SUBSCRIPTION La table SUBSCRIPTION contient tous les diff\u00e9rents types d'abonnement disponible. Elle permet de conna\u00eetre la dur\u00e9e et le co\u00fbt des abonnements achet\u00e9s par les clients. Table SESSION La table SESSION contient l'historique de toutes les sessions effectu\u00e9es par les coachs avec la date et l'heure de la session ainsi que sa dur\u00e9e. Pour rappel, une session repr\u00e9sente un rendez-vous avec un coach. Cela peut \u00eatre pour un entrainement ou encore un bilan. Table WORKOUT_TYPE Cette table contient les diff\u00e9rents types d'entrainement. Elle permet d'identifier les entra\u00eenements effectu\u00e9s par les clients. Table WORKOUT La table WORKOUT contient toutes les donn\u00e9es d'entra\u00eenements des s\u00e9ances effectu\u00e9es. La majorit\u00e9 des donn\u00e9es sont obtenues \u00e0 l'aide des capteurs sur les montres connect\u00e9es. Les donn\u00e9es contenues dans cette table permettent de v\u00e9rifier l'efficacit\u00e9 et l'intensit\u00e9 de la s\u00e9ance et peuvent \u00eatre utilis\u00e9s pour des comparaisons. Table REVIEW La table REVIEW est la table \"m\u00e8re\" des 2 tables : COACHING_REVIEW et SESSION_REVIEW . Elle permet de relier les reviews aux clients. Table COACHING_REVIEW Cette table contient tous les retours client sur le coaching effectu\u00e9 par le coach. Les champs disponibles ont la satisfaction, le support le coach lui apporte, la disponibilit\u00e9 du coach en cas de besoin et si le client souhaite continuer son suivi. Table SESSION_REVIEW Cette table contient tous les retours client sur les sessions qu'il effectue avec un coach. Les champs disponibles sont la difficult\u00e9, le ressenti de la s\u00e9ance, le niveau de fatigue \u00e0 la fin de la s\u00e9ance et l'\u00e9nergie que le client avait en arrivant. FitJourney application D\u00e9veloppement avec Python Flask L'application web FitJourney est d\u00e9velopp\u00e9 avec Python flask qui utilise Jinja2 pour le templating et Werkzeug pour faire la communication entre serveur web et application web. Templating Jinja2 Le templating permet de cr\u00e9er des pages dynamiques en fonction des donn\u00e9es fournies \u00e0 la page. Dans le cas de l'application, cela permet d'afficher les donn\u00e9es de l'utilisateur connect\u00e9 ainsi qu'afficher certaines parties en fonction du niveau d'acc\u00e8s de l'utilisateur. Template de base Le concept tr\u00e8s utile qui est la possibilit\u00e9 de cr\u00e9er une template parent. Pour illustrer cela, j'ai un fichier add_program.html qui va utiliser tout le contenu du fichier base.html , mais qui va ajouter certaines parties en plus, selon les instructions. Voici un aper\u00e7u du fichier base.html et on peut y retrouver plusieurs instructions comme : {% block content %}{% endblock content%} Ces instructions permettent d'ins\u00e9rer du contenu depuis un fichier enfant. Pour cr\u00e9er un fichier enfant, il suffit d'ajouter l'instruction : {% extends 'base.html' %} pour \u00e9tendre le fichier de parent. Voici un exemple de fichier enfant avec le fichier add_program.html : La vue de cette page : Routes Les routes avec Python Flask sont reli\u00e9es directement \u00e0 des m\u00e9thodes. Ces m\u00e9thodes doivent forc\u00e9ment retourner quelque chose. L'instruction : @blueprint.route('/dashboard') permet de dire que la m\u00e9thode qui suit l'instruction sera li\u00e9e au blueprint et la route \"/dashboard\". (Il est possible de relier plusieurs routes \u00e0 la m\u00eame m\u00e9thode) Comme pr\u00e9ciser ci-dessus, il est obligatoire de retourner quelque chose. Pour utiliser du templating Jinja2, Flask propose une m\u00e9thode nomm\u00e9e render_template() . Le premier param\u00e8tre de cette m\u00e9thode est le fichier de template que l'on veut utiliser, puis les param\u00e8tres suivants sont des donn\u00e9es que l'on veut transmettre \u00e0 la vue. Dans le cas de la route /dashboard , je donne le prochain client qui a rendez-vous avec le coach, la date du dernier entrainement qu'il a effectu\u00e9 ainsi que la liste de tous les autres clients dont il a la charge. Comme on peut le voir sur l'image ci-dessus, il est possible d'ajouter l'instruction @login_required avant la m\u00e9thode pour pr\u00e9ciser que cette route n'est accessible que si un utilisateur est connect\u00e9. Cette instruction est utilisable \u00e0 l'aide la librairie Flask-Login . Les routes de l'application Comme mentionn\u00e9 plus haut dans l' architecture blueprint , dans mon application, chaque route est reli\u00e9e au blueprint correspondant. Voici les diff\u00e9rentes routes qui ont \u00e9t\u00e9 cr\u00e9\u00e9 pour l'application FitJourney . Endpoint public - Visiteur M\u00e9thodes Endpoint Description POST /login Permet de connecter un utilisateur --- --- --- Endpoint priv\u00e9 - Client M\u00e9thodes Endpoint Description GET /index R\u00e9cup\u00e8re les prochaines sessions que le client a planifi\u00e9es POST /profile R\u00e9cup\u00e8re toutes les donn\u00e9es du client, permets de modifier les informations personnelles du client GET /review R\u00e9cup\u00e8re les d\u00e9tails d'une review POST /add_review Permet d'ajouter une review GET /workouts R\u00e9cup\u00e8re tous les entrainements effectu\u00e9s par un client GET /workout R\u00e9cup\u00e8re les d\u00e9tails d'un entrainement GET /checkup R\u00e9cup\u00e8re les d\u00e9tails d'un bilan POST /change_password Permet de modifier le mot de passe de l'utilisateur GET /program Permet de t\u00e9l\u00e9charger le fichier pdf du programme --- --- --- Endpoint priv\u00e9 - Coach M\u00e9thodes Endpoint Description POST /register Permet d'inscrire un nouvel utilisateur coach GET /dashboard R\u00e9cup\u00e8re les informations de la prochaine session du coach et la liste de tous ses clients POST /calendar R\u00e9cup\u00e8re toutes les sessions d'un coach et permet d'ajouter une nouvelle session avec un client POST /client R\u00e9cup\u00e8re toutes les donn\u00e9es d'un client GET /review R\u00e9cup\u00e8re les d\u00e9tails d'une review POST /add_client Permet de cr\u00e9er un nouvel utilisateur client POST /add_program Permet d'ajouter un programme \u00e0 un client GET /program Permet de t\u00e9l\u00e9charger le fichier pdf du programme GET /checkup R\u00e9cup\u00e8re les d\u00e9tails d'un bilan POST /check_up Permet d'ajouter un bilan POST /new_subscription Permet de renouveler un abonnement POST /new_card Permet de mettre \u00e0 jour la carte membre d'un client POST /cancel_subscription Permet d'annuler l'abonnement d'un client --- --- --- Blueprints Avec l'utilisation des \" Flask Blueprints \", lors de l'initialisation de l'application, les modules sont ajout\u00e9s \u00e0 l'application \u00e0 l'aide de la m\u00e9thode register_blueprints . Dans le but de mettre en production l'application plus tard, cela va \u00eatre tr\u00e8s utile, car pour enlever toute la partie coach de l'application par exemple, il suffit de retirer le dossier 'coach' de la boucle for qui parcourt les modules. Client Prochaines sessions La page \"prochaines session\" de l'application a pour but d'afficher toutes les sessions \u00e0 venir pour le client. Cela permet au client d'avoir une vue d'ensemble sur les diff\u00e9rentes sessions qu'il a pr\u00e9vues avec son coach. Pour r\u00e9cup\u00e9rer toutes les prochaines sessions, j'utilise la m\u00e9thode get_next_session(userid) Elle se trouve, avec toutes les autres m\u00e9thodes utilis\u00e9es pour les routes client, dans le fichier client/utils.py . Je n'ai besoin que de l'id du client dont on veut r\u00e9cup\u00e9rer les sessions. Le tableau retourn\u00e9 contenant toutes les sessions est ensuite envoy\u00e9 \u00e0 la vue \u00e0 l'aide de la m\u00e9thode render_template() Profil La page \"profil\" est une page qui est utilis\u00e9 pour les 2 types d'utilisateurs, seulement plus d'informations sont affich\u00e9es lorsque c'est un client qui est connect\u00e9. Cette page sert essentiellement \u00e0 modifier ses informations personnelles \u00e0 l'aide d'un formulaire. Beaucoup de donn\u00e9es sont r\u00e9cup\u00e9r\u00e9es pour tout afficher sur cette page. La modification des donn\u00e9es de l'utilisateur se fait \u00e0 l'aide du model SQLAlchemy User . Ce qui rend la t\u00e2che beaucoup plus simple, en modifiant les propri\u00e9t\u00e9s correspondant aux champs modifi\u00e9s on peut mettre \u00e0 jour toutes les valeurs. Il suffit d'effectuer un commit \u00e0 la fin pour valider les changements. Si l'utilisateur importe une nouvelle photo de profil, l'image est sauvegard\u00e9e localement avec un nom unique et ce nom est enregistr\u00e9 dans la base de donn\u00e9es. On peut voir ici que j'essaye de commit les changements effectu\u00e9s, je sauvegarde l'image import\u00e9e et si cela fonctionne le fichier \"profile.html\" est retourn\u00e9 avec la m\u00e9thode render_template() . Avec la m\u00e9thode flash() , je peux afficher un message pour confirmer \u00e0 l'utilisateur que la mise \u00e0 jour a fonctionn\u00e9 ou pas. Changement de mot de passe La page \"changement de mot de passe\" est \u00e9galement accessible par les 2 types d'utilisateurs, elle est directement reli\u00e9e \u00e0 la page profil. En pr\u00e9cisant l'instruction suivante dans le lien de r\u00e9f\u00e9rence d'un bouton ou d'un lien, on peut arriver directement sur cette page : {{ url_for('client_blueprint.change_password') }}` la m\u00e9thode url_for() permet d'obtenir l'URL qui redirige vers une route ou un blueprint en l'occurrence. Le changement de mot de passe s'effectue en pr\u00e9cisant son ancien mot de passe, le nouveau ainsi qu'une confirmation pour \u00e9viter les fautes de frappe. L'ancien mot de passe est ensuite v\u00e9rifi\u00e9 \u00e0 l'aide de la m\u00e9thode verify_pass() qui permet de comparer le mot de passe saisit avec celui hash\u00e9 en base de donn\u00e9es. Pour effectuer la v\u00e9rification, je prends les 64 premiers caract\u00e8res qui correspondent aux salt. Je hash ensuite le mot de passe saisit avec le m\u00eame salt puis je compare avec celui enregistr\u00e9 en base. Si l'ancien mot de passe est correctement renseign\u00e9, alors la propri\u00e9t\u00e9 password du model User est modifi\u00e9e en hashant le mot de passe \u00e0 l'aide de la m\u00e9thode hash_pass() . Pour hash\u00e9 le mot de passe, j'utilise l'algorithme \"SHA-512\" sur le mot de passe ainsi que le salt qui est g\u00e9n\u00e9r\u00e9. Un message est ensuite affich\u00e9 en fonction de la r\u00e9ussite de l'op\u00e9ration \u00e0 l'aide de la m\u00e9thode flash() Entrainements La page entrainements est la page qui permet au client de visionner l'ensemble des entrainements qu'il a effectu\u00e9s depuis son inscription. J'utilise la m\u00e9thode get_workouts() qui permet de r\u00e9cup\u00e9rer tous les entrainements d'un client et je les passe ensuite \u00e0 la vue avec la m\u00e9thode render_template() Les entrainements sont r\u00e9cup\u00e9r\u00e9s dans l'ordre par date d\u00e9croissante (le plus r\u00e9cent en premier). Entrainement La page \"entrainement\" est utilis\u00e9 uniquement pour afficher les d\u00e9tails d'un entrainement depuis la page \"entrainements\" d'un client. Les liens disponibles sur la page \"entrainements\" qui permettent la redirection sur la page \"entrainement\" affichant les d\u00e9tails de ce dernier sont g\u00e9n\u00e9r\u00e9s avec l'instruction : {{ url_for('client_blueprint.workout', Id=workout.id) }} En passant, un param\u00e8tre suppl\u00e9mentaire \u00e0 la m\u00e9thode url_for je peux passer des valeurs en param\u00e8tre. Je fais donc passer l'id de l'entrainement que je r\u00e9cup\u00e8re ensuite sur cette page entrainement pour aller chercher les donn\u00e9es correspondantes. J'utilise la m\u00e9thode get_workout_details() qui me permet d'aller chercher toutes les informations n\u00e9cessaires pour afficher les d\u00e9tails de l'entrainement en question. Les donn\u00e9es des entrainements sont r\u00e9cup\u00e9r\u00e9es avec l' API Polar Accesslink qui donne acc\u00e8s aux enregistrements des montres connect\u00e9s Polar. Ajout de review La page \"Ajout de review\" est un simple formulaire qui permet d'ajouter une review sur le coaching de mani\u00e8re g\u00e9n\u00e9rale ou sur un entrainement effectu\u00e9. Le type de review ajout\u00e9 est d\u00e9fini en fonction d'o\u00f9 le client va cliquer sur l'application. Les boutons redirigeant sur cette page poss\u00e8dent un param\u00e8tre type qui permet d'identifier les champs \u00e0 afficher ainsi que le type de review qui va \u00eatre ajout\u00e9. Il y a \u00e9galement un param\u00e8tre target qui est ensuite ins\u00e9r\u00e9 dans un input hidden repr\u00e9sentant l'id de la \"cible\" de cette review. Les reviews sur le coaching peuvent \u00eatre ajout\u00e9 n'importe quand, par contre, un entrainement ne peut poss\u00e9der qu'une seule review. Pour ajouter une review, j'utilise le model SQL Alchemy WorkoutReview pour les reviews d'entrainements et CoachingReview pour les reviews de coaching. Il suffit de renseigner les propri\u00e9t\u00e9s avec les champs renseigner, et d'effectuer un commit pour valider l'insertion. Exemple avec une review d'entrainement : Review La page \"Review\" permet l'affichage d'une review que le client a ajout\u00e9. Les reviews ajout\u00e9s par le client sont list\u00e9s sur son profil, il peut donc acc\u00e9der aux d\u00e9tails de ces derni\u00e8res en cliquant dessus. \u00c0 nouveau, \u00e0 l'aide de la m\u00e9thode url_for je fais passer en param\u00e8tre l'id et le type de la review s\u00e9lectionn\u00e9. Cela permet la r\u00e9cup\u00e9ration des infos une fois sur cette page. Les d\u00e9tails sont r\u00e9cup\u00e9r\u00e9s \u00e0 l'aide de la m\u00e9thode get_review_details() et sont ensuite pass\u00e9s en param\u00e8tre \u00e0 la m\u00e9thode render_template() . Bilan La page \"Bilan\" ressemble aux pages \"Review\" et \"Entrainement\" car elle ne sert qu'\u00e0 afficher les valeurs qui ont \u00e9t\u00e9 renseign\u00e9 lors d'un Bilan avec le coach. L'id du bilan est pass\u00e9 en param\u00e8tre GET comme pour les deux autres pages (Review et Entrainement). Une fois r\u00e9cup\u00e9r\u00e9, j'utilise la m\u00e9thode get_check_up() en donnant l'id du bilan en param\u00e8tre pour avoir toutes les donn\u00e9es et les passer ensuite en param\u00e8tre \u00e0 la m\u00e9thode render_template() qui les fera passer \u00e0 la vue Coach Tableau de bord La page \"Tableau de bord\" permet d'afficher la prochaine session du coach ainsi que la liste de tous ses clients. Une v\u00e9rification est effectu\u00e9e au d\u00e9but de la route pour \u00e9viter qu'un client se retrouve sur cette page. La v\u00e9rification est effectu\u00e9e avec la m\u00e9thode is_coach() de l'objet User qui permet de v\u00e9rifier si l'utilisateur connect\u00e9 poss\u00e8de le role de coach. Si l'utilisateur est un coach, alors les infos du prochain client, la date de son dernier entrainement ainsi que la liste de tous les clients dont le coach a la charge sont r\u00e9cup\u00e9r\u00e9s et donn\u00e9s en param\u00e8tres \u00e0 la vue. Calendrier La page \"Calendrier\" permet d'afficher un agenda affichant toutes les sessions que le coach a enregistr\u00e9es. Il peut \u00e9galement en ajouter une avec le formulaire qui est disponible juste \u00e0 c\u00f4t\u00e9. Le calendrier est affich\u00e9 \u00e0 l'aide de la librairie JavaScript FullCalendar.io , il est initialis\u00e9 en JavaScript. Les \u00e9v\u00e9nements \u00e0 inscrire dans le calendrier doivent \u00eatre assign\u00e9 \u00e0 la propri\u00e9t\u00e9 events: de l'objet JavaScript FullCalendar.Calendar() . La m\u00e9thode get_session() est donc utilis\u00e9 pour r\u00e9cup\u00e9rer toutes les sessions enregistr\u00e9es pour le coach connect\u00e9 dans le bon format pour que les sessions soient interpr\u00e9t\u00e9s comme un \u00e9v\u00e9nement pour le calendrier. La m\u00e9thode r\u00e9cup\u00e8re toutes les sessions \u00e0 venir et les ajoutent dans un tableau sous la forme d'objets avec 3 propri\u00e9t\u00e9s { 'title': 'start': 'end': } Si le coach ajoute une session \u00e0 l'aide du formulaire, les valeurs des champs sont r\u00e9cup\u00e9r\u00e9s et utilis\u00e9s pour avoir le format d\u00e9sir\u00e9. Si le coach n'a pas de client \u00e0 charge, il ne sera pas en mesure de s\u00e9lectionner un client pour la session qu'il souhaite ajouter. S'il essaye, une erreur sera affich\u00e9e \u00e0 l'aide de la m\u00e9thode flash() . Le DateTime de fin est g\u00e9n\u00e9r\u00e9 automatiquement \u00e0 l'aide de la date et l'heure de d\u00e9but s\u00e9lectionn\u00e9 ainsi que la dur\u00e9e. Pour enregistrer sous le format DateTime , l'heure de la session est ajout\u00e9 \u00e0 la date. La session est ajout\u00e9e \u00e0 l'aide du model SQLAlchemy Session , l'ajout est valid\u00e9 avec un commit. Une fois la session ajout\u00e9e, un mail est envoy\u00e9 au client avec les informations de la session. Ajout client La page \"Ajout client\" permet de cr\u00e9er un nouveau compte client et d'assigner son suivi au coach qui cr\u00e9er son compte. Cette page contient \u00e9galement une v\u00e9rification avec la m\u00e9thode is_coach() pour v\u00e9rifier que l'utilisateur sur cette page est bien un coach. L'input de type select pour s\u00e9lectionner le type d'abonnement souhait\u00e9 est g\u00e9n\u00e9r\u00e9 automatiquement, les diff\u00e9rents abonnements sont r\u00e9cup\u00e9r\u00e9s depuis la base de donn\u00e9es avec la m\u00e9thode get_all_subscription() . Pour ajouter le client dans la base de donn\u00e9es, j'utilise \u00e0 nouveau les mod\u00e8les SQLAlchemy , cette fois-ci plusieurs sont n\u00e9cessaires ( User , CoachedBy et Purchase ). Pour pouvoir effectuer l'insertion comme il faut, je commence par l'utilisateur puis j'utilise l'instruction : db.session.flush() qui me permet d'obtenir l'id de l'utilisateur qui va \u00eatre ins\u00e9r\u00e9 (utilis\u00e9 pour l'insertion avec les 2 autres mod\u00e8les). Une fois les 3 mod\u00e8les remplis et ajout\u00e9, j'effectue un commit pour valider les insertions. Une fois le commit effectu\u00e9, un mail est envoy\u00e9 au client pour l'informer de ses identifiants de connexion \u00e0 l'application. Le mot de passe est g\u00e9n\u00e9r\u00e9 automatiquement. Client La page \"Client\" permet aux coachs de visionner le profil d'un de leurs clients. Toutes les donn\u00e9es n\u00e9cessaires sont r\u00e9cup\u00e9r\u00e9s depuis la base de donn\u00e9es et envoyer \u00e0 la vue. On y retrouve \u00e9norm\u00e9ment de donn\u00e9es comme sur la page profil du client. Sur la template Jinja2, on retrouve \u00e9norm\u00e9ment de condition comme par exemple pour les programmes d'entrainements qui peuvent ne pas avoir \u00e9t\u00e9 import\u00e9 par le coach : {% if workoutProgram != None %} Cela permet d'afficher quand m\u00eame quelque chose m\u00eame s'il n'y a pas encore de valeurs qui a \u00e9t\u00e9 ajout\u00e9 en base. Ajout programme La page \"Ajout programme\" est \u00e9galement soumise \u00e0 une v\u00e9rification, pour \u00e9viter qu'un client arrive sur cette page. Pour ajouter un programme, il suffit de s\u00e9lectionner le type et d'ajouter le pdf que l'on souhaite importer. Le pdf est lu avec la m\u00e9thode python read() qui permet de retourner les bytes du fichier. Ils sont ensuite enregistr\u00e9s dans la base de donn\u00e9es dans un champ LONGBLOB . Une fois le programme enregistr\u00e9, un mail est envoy\u00e9 au client pour le notifier que son nouveau programme est disponible. Pour t\u00e9l\u00e9charger le programme, j'utilise la route \"/program\" et je passe en param\u00e8tre GET l'id du programme. La route retourne la m\u00e9thode python send_file() qui permet de t\u00e9l\u00e9charger un fichier. J'utilise \u00e9galement l'objet BytesIO qui permet d'\u00e9crire le fichier \u00e0 partir des bytes qui ont \u00e9t\u00e9 enregistr\u00e9 en base. L'ajout de programme devait se faire par import de fichier Excel sous format uniformis\u00e9 \u00e0 la base. Apr\u00e8s plusieurs r\u00e9flexions, j'ai d\u00e9cid\u00e9 de changer cela en acceptant uniquement les pdf. Cela permet plus de libert\u00e9 aux coachs et \u00e9vitera de \"casser\" leurs habitudes s'ils utilisent l'application. Les coachs peuvent garder leurs m\u00e9thodes de rendu pour leurs programmes et simplement importer les pdfs sur l'application. Ajout Bilan La page \"Ajout bilan\" ne contient qu'un formulaire pour ajouter les valeurs du bilan. Les valeurs demand\u00e9es sont toutes r\u00e9cup\u00e9rables \u00e0 l'aide d'une balance connect\u00e9e. L'id, le nom, pr\u00e9nom et l'\u00e2ge du client sont r\u00e9cup\u00e9r\u00e9s et ins\u00e9r\u00e9s automatiquement et sont statiques, le coach ne peut pas modifier ses informations. L'\u00e2ge du client est calcul\u00e9 en fonction de sa date de naissance et la date d'aujourd'hui. Modification de carte La modification de carte de membre s'effectue depuis la page client . Une fois le bouton cliqu\u00e9, la m\u00e9thode get_card_id() est appel\u00e9e. Elle va lire \u00e0 l'aide du Lecteur NFC une carte que le coach va scanner. Un timeout de 30 secondes est d\u00e9fini pour \u00e9viter d'attendre trop longtemps, si les 30 secondes sont \u00e9coul\u00e9es et que le coach n'a pas pr\u00e9sent\u00e9 de carte alors une erreur flash() est affich\u00e9e. La m\u00e9thode get_card_id() utilise la librairie python smartcard qui permet d'utiliser le lecteur. Si le lecteur d\u00e9tecte une carte, alors une connexion est \u00e9tablie. \u00c0 l'aide de la transmission, je peux r\u00e9cup\u00e9rer l'UID de la carte sous le format : [12, 123, 89, 09] Je n'ai plus qu'\u00e0 modifier ce format en string pour pouvoir l'ins\u00e9rer en base plus tard. FitJourney cards checker Authentification \u00e0 l'API Comme expliqu\u00e9 plus haut dans la section Entrainement , les entrainements sont r\u00e9cup\u00e9r\u00e9s \u00e0 l'aide de l'API Polar. Pour s'authentifier envers l'API, j'utilise l'objet Accesslink qui utilise l'objet OAuth2Client qui est fourni par Polar afin de s'authentifier en utilisant le protocole OAuth2. Les identifiants sont quant \u00e0 eux r\u00e9cup\u00e9r\u00e9s du fichier config.yml . Si les identifiants ne sont pas dans ce fichier, il faut alors ex\u00e9cuter le script authorization.py qui va se charger de g\u00e9n\u00e9rer et d'\u00e9crire les identifiants et le token d'acc\u00e8s dans le fichier config.yml . Utilisation de l'API Dans le dossier endpoints/ on retrouve les objets python qui permettent d'effectuer les requ\u00eates \u00e0 l'API. La principale requ\u00eate que j'utilise est celle des \"training data\". C'est cette requ\u00eate qui permet de r\u00e9cup\u00e9rer les informations de l'entrainement enregistr\u00e9 avec les montres connect\u00e9es. Les donn\u00e9es sont r\u00e9cup\u00e9r\u00e9s en format JSON, voici un exemple de retour de cette requ\u00eate : Les donn\u00e9es r\u00e9cup\u00e9r\u00e9es sont pour la plupart dans le bon format, la dur\u00e9e de l'entrainement est malheureusement dans un format tr\u00e8s sp\u00e9cial. La dur\u00e9e est repr\u00e9sent\u00e9e par un string commen\u00e7ant par \"PT\" et est suivie par les valeurs (heures, minutes, secondes). Chaque valeur est suivie d'une lettre pour les s\u00e9parer : La valeur pour les heures est suivie du caract\u00e8re 'H' La valeur pour les minutes est suivie du caract\u00e8re 'M' La valeur pour les secondes est suivie du caract\u00e8re 'S' Mais s'il n'y a pas de valeur pour les heures par exemple, alors le caract\u00e8re 'H' ne figurera pas dans le string. J'ai donc effectu\u00e9 3 conditions pour pouvoir bien formater dans chaque cas le string avec la m\u00e9thode strptime de la librairie datetime J'ins\u00e8re ensuite les donn\u00e9es voulues dans la base avec la librairie mysql.connector . Tests Tests unitaires Aucun test unitaire n'a \u00e9t\u00e9 r\u00e9alis\u00e9 pour l'application. Cependant, toutes les fonctionnalit\u00e9s de l'application ont \u00e9t\u00e9 test\u00e9es \"manuellement\" avec une partie de d\u00e9bogage. Les 2 parties de mon projet \u00e9tant d\u00e9velopp\u00e9 majoritairement en Python, il serait int\u00e9ressant d'ajouter des tests unitaires \u00e0 l'aide du framework Pytest par exemple. Cela serait tr\u00e8s utile d'avoir des tests unitaires dans le but de mettre en production l'application. Tests utilisateurs FitJourney Web application En tant que coach : Action Valeur(s) Attente(s) R\u00e9sultat Cr\u00e9ation d'un compte avec 2 mots de passes diff\u00e9rents Name : \"Thomas\"; Surname : \"Fujise\" ; Email : \"thomas.fjs@eduge.ch\"; Birthdate : 15.09.2000; Password : \"Super2012\"; Confirm Password : \"Super\"; Un message d'erreur \"Passwords Must Match!\" s'affiche. OK Cr\u00e9ation d'un compte coach Name : \"Thomas\"; Surname : \"Fujise\" ; Email : \"thomas.fjs@eduge.ch\"; Birthdate : 15.09.2000; Password : \"Super2012\"; Confirm Password : \"Super2012\"; Redirection sur la page \"login\" et un message apparait pour confirmer la cr\u00e9ation OK Cr\u00e9ation d'un compte avec un email existant Name : \"Thomas\"; Surname : \"Fujise\" ; Email : \"thomas.fjs@eduge.ch\"; Birthdate : 15.09.2000; Password : \"Super2012\"; Confirm Password : \"Super2012\"; Message d'erreur \"Email already registered\" OK Connexion avec le compte et un mot de passe erron\u00e9 Email : \"thomas.fjs@eduge.ch\"; Password : \"Super\"; Un message d'erreur apparait OK Connexion avec le compte Email : \"thomas.fjs@eduge.ch\"; Password : \"Super2012\"; Redirection sur la page tableau de bord OK Clique sur le bouton \"Add new client\" / Redirection sur le formulaire d'ajout d'un nouveau client OK Ajout d'un nouveau client Name : \"John\"; Surname : \"Doe\" ; Email : \"thomasfjs@gmail.com\"; Birthdate : 12.10.2001; Height : 178; Starting date : 08.06.2022 Subscription type : \"1 Month\" Un message de confirmation est affich\u00e9, le client est ajout\u00e9 \u00e0 la liste des clients et un email est envoy\u00e9 \u00e0 l'email renseign\u00e9 contenant les identifiants du compte client OK Clique sur le nom d'un client dans la liste / Redirection sur la page profil du client s\u00e9l\u00e9ctionn\u00e9 OK Ajout d'une carte de membre Carte utilis\u00e9 : 832141011 Une fois la carte scann\u00e9, un message de confirmation est affich\u00e9 et le num\u00e9ro 832141011 figure dans le champ \"Card ID\" OK Pas de carte scann\u00e9e pendant >30s / Un message d'erreur \"No card detected\" apparait OK Clique sur le bouton \"Upload new program\" / Redirection vers le formulaire d'ajout de programme OK Ajout d'un programme Type : \"Workout\" File : \"workout.pdf Un message de confirmation apparait, on peut voir un bouton \"Workout\" dans la section \"Programs\" apparaitre et un mail est envoy\u00e9 \u00e0 l'email du client pour le notifier. OK Clique sur le bouton \"Check up\" / Redirection vers la page d'ajout d'un nouveau bilan OK Ajout d'un bilan Weight : 80.2 Height : 178 Water : 41.6 Protein : 10 Muscle Mass % : 55 Body Fat % : 41.7 Bone mass % : 3.3 BMR : 1336.0 Muscle Mass (kg) : 45.9 Body fat (kg) : 34.8 Visceral fat (kg) : 10 Bone mass (kg) : 2.8 Lean body mass (kg) : 48.7 Body age : 43 BMI : 31.4 Un message confirmation est affich\u00e9, on peut voir le bilan s'ajouter sur la droite dans la section \"Check up\" OK Clique sur le bouton \"Details\" \u00e0 c\u00f4t\u00e9 d'un bilan / Redirection sur la page de d\u00e9tails du bilan OK Renouvellement d'abonnement Starting date : 10.06.2022 Subscription type : \"3 Months\" Un message de confirmation est affich\u00e9, la date de fin d'abonnement a \u00e9t\u00e9 modifier dans le champ \"Subscription Until\" OK Annulation d'un abonnement / Le dernier abonnement souscrit est supprim\u00e9, la date de fin d'abonnement redevient celle du pr\u00e9c\u00e9dent abonnement OK Clique sur le bouton \"Profile\" dans la barre de navigation / Redirection sur la page profil du coach OK Modification profil coach Last name : \"Fuji\" Address : \"Chemin des curiades 35\" City : \"Bernex\" Country : \"Switzerland\" Postal code : \"1233\" Les modifications sont effectu\u00e9es et un message de confirmation apparait. OK Clique sur le bouton \"Calendar\" dans la barre de navigation / Redirection vers l'agenda du coach ainsi que le formulaire d'ajout d'une nouvelle session OK Inscription d'une session avec un client Client : \"John Doe\" Date : 10.06.2022 Time for the session : 10:00 Type : \"Weightlifting\" Duration (h) : 1 Un message de confirmation apparait, la session a \u00e9t\u00e9 ajout\u00e9e au calendrier OK / / La prochaine session est visible sur le tableau de bord avec les d\u00e9tails de la session OK En tant que client Action Valeur(s) Attente(s) R\u00e9sultat Connexion avec les identifiants fournit par mail Email : \"thomas.fjs@eduge.ch\"; Password : \"John123\"; Redirection sur la page d'accueil client OK / / Les prochaines sessions sont affich\u00e9es sur la page d'accueil client OK Clique sur le bouton \"Profile\" dans la barre de navigation / Redirection sur la page profil OK Modification du profil Birthdate : 13.10.2001 Profile picture : \"logo.jpg\" Country : Switzerland Un message de confirmation apparait, la photo de profil et les informations sont modifi\u00e9s OK Clique sur le bouton \"change password\" / Redirection vers le formulaire de changement de mot de passe OK Changement de mot de passe avec 2 mots de passe diff\u00e9rents Old password : \"John123\" New password : \"Super\" Confirm new password : \"Super2012\" Un message d'erreur \"Passwords must match\" apparait OK Changement de mot de passe Old password : \"John123\" New password : \"Super2012\" Confirm new password : \"Super2012\" Redirection sur la page profil et message de confirmation apparait OK T\u00e9l\u00e9chargement du programme / En cliquant sur le bouton \"Workout program\" le pdf est t\u00e9l\u00e9charg\u00e9 OK Clique sur le bouton \"Add new review\" / Redirection vers le formulaire d'ajout de review sur le coaching OK Ajout d'une review coaching Satisfaction : 8 Support : 8 Disponibility : 10 Advice : 9 Comment : \"This coach is super !\" Redirection vers la page profil, un message de confirmation d'ajout apparait et on peut voir la review dans la section \"Reports\" en bas \u00e0 droite OK Clique sur le bouton \"Details\" \u00e0 c\u00f4t\u00e9 d'une review / Redirection sur la page de d\u00e9tails de la review OK Clique sur le bouton \"Workouts\" dans la barre de navigation / Redirection sur la page affichant tous les entrainements effectu\u00e9s OK Clique sur le bouton \"Details\" \u00e0 c\u00f4t\u00e9 d'un entrainement / Redirection sur la page de d\u00e9tail de l'entrainement OK Clique sur le bouton \"Add review\" sur la page de l'entrainement / Redirection sur la page pour ajouter une review sur l'entrainement OK Ajout d'une review d'entrainement Difficulty : 7 Feel : 8 Fatigue : 6 Energy: 8 Comment : \"This was a great workout\" Redirection sur la page listant tous les entrainements effectu\u00e9s OK Rajout d'une review sur le m\u00eame entrainement Difficulty : 7 Feel : 8 Fatigue : 6 Energy: 8 Comment : \"This was a great workout\" Redirection sur la page listant tous les entrainements avec un message d'erreur \"Workout already reviewed\" OK Clique sur le bouton \"Logout\" dans la barre de navigation / L'utilisateur est d\u00e9connect\u00e9 et redirig\u00e9 vers la page de connexion OK FitJourney card checker Action Valeur(s) Attente(s) R\u00e9sultat Scan d'une carte inconnue Carte utilis\u00e9e : 5874146165 Message s'affiche dans la console : \"Unrecognized card\" OK Scan d'une carte de membre assign\u00e9e en arrivant Carte utilis\u00e9e : 832141011 La carte est reconnue et un message de bienvenue avec le nom du client est affich\u00e9 dans la console : \"Welcome John Doe\" OK Scan de la m\u00eame carte de membre pour la sortie Carte utilis\u00e9e : 832141011 La carte est reconnue et un message est affich\u00e9 en console : \"Goodbye John Doe\" OK Conclusion Points positifs Globalement, j'ai pu tirer pas mal de points positifs concernant ce travail de dipl\u00f4me. Premi\u00e8rement, le fait de travailler sur un projet de cette ampleur. Lors de ma formation en tant que Technicien ES, j'ai que tr\u00e8s rarement eu l'occasion de travailler sur des projets similaires. L'exp\u00e9rience acquise lors d'un projet comme ceci ne peut \u00eatre que positif pour le futur. Deuxi\u00e8mement, le fait d'apprendre et d'am\u00e9liorer ses connaissances sur des nouvelles technologies est un point tr\u00e8s positif. Je suis beaucoup plus \u00e0 l'aise avec Python Flask par exemple, ce qui n'\u00e9tait pas forc\u00e9ment le cas au d\u00e9but du projet. Pour terminer, je ressors beaucoup de positif des \u00e9tapes suivies tout le long du projet. J'ai tr\u00e8s rarement suivi toutes les \u00e9tapes dans l'ordre comme je l'ai fait pour ce projet, par exemple le fait de commencer par effectuer des maquettes d'interfaces ou encore faire un MCD au pr\u00e9alable. Ce sont tous des longs points a effectu\u00e9 au d\u00e9but, mais s'ils sont bien faits, cela permet un gain de temps cons\u00e9quent. Il y a \u00e9galement le fait de poser mes r\u00e9flexions dans le journal de bord, cela m'a permis d'identifier des probl\u00e8mes avant de tomber dessus. Probl\u00e8mes rencontr\u00e9s Mise en place de la structure du projet La mise en place de la structure du projet n'\u00e9tait pas r\u00e9ellement un gros probl\u00e8me, mais j'ai vraiment pris beaucoup de temps pour l'effectuer comme il faut. N'\u00e9tant pas parfaitement \u00e0 l'aise avec Python Flask, je souhaitais vraiment avoir une tr\u00e8s bonne structure de projet. J'ai d\u00e9couvert les \"Flask Blueprint\" qui m'ont beaucoup aid\u00e9 \u00e0 effectuer une structure propre et d\u00e9coup\u00e9e. Oublie de certains points tr\u00e8s importants Un des gros probl\u00e8mes que j'ai pu rencontrer est que je suis malheureusement pass\u00e9 \u00e0 c\u00f4t\u00e9 de plusieurs parties tr\u00e8s importantes dans le m\u00e9tier de coach sportif. Cela a engendr\u00e9 de longues r\u00e9flexions pour l'impl\u00e9mentation ainsi que l'ajout de nombreuses t\u00e2ches \"n\u00e9cessaires\" ainsi que de nombreux ajustements de la base de donn\u00e9es. C'est pour cela que dans le planning effectif , on peut retrouver beaucoup plus de t\u00e2ches que dans le planning pr\u00e9visionnel . Compte Google Un autre probl\u00e8me que j'ai rencontr\u00e9 sur la fin de ce travail de dipl\u00f4me est que Google ne prend plus en charge les applications \"moins s\u00e9curis\u00e9es\" depuis le 30 mai. Cette d\u00e9cision a \u00e9t\u00e9 prise pour am\u00e9liorer leurs normes de s\u00e9curit\u00e9. Le probl\u00e8me est que j'utilisais cette fonctionnalit\u00e9 pour utiliser le compte Google fitjourney pour envoyer les mails. D\u00e9sormais, pour utiliser un compte Google pour envoyer des mails, il faut utiliser leurs API pour r\u00e9cup\u00e9rer une cl\u00e9 qui permet l'acc\u00e8s. Je n'avais malheureusement pas le temps d'impl\u00e9menter cette solution avec le temps qu'il me restait. C'est pour cela que j'ai utilis\u00e9 MailTrap un service 'sandbox' pour email comme solution temporaire. Am\u00e9liorations possibles J'ai retenu plusieurs points au niveau des am\u00e9liorations possibles et envisageables pour la suite du projet. Premi\u00e8rement, cela serait utile d'ajouter la possibilit\u00e9 de transf\u00e9rer la prise en charge d'un client \u00e0 un autre coach. Cette fonctionnalit\u00e9 peut \u00eatre n\u00e9cessaire dans plusieurs cas, comme par exemple si plusieurs coachs travaillent dans la m\u00eame salle et qu'un coach est d\u00e9bord\u00e9, il pourrait assigner des clients \u00e0 son coll\u00e8gue. Dans le cas o\u00f9 un client change d'objectif et qu'un autre coach est plus adapt\u00e9 \u00e0 ses besoins aussi. Un deuxi\u00e8me point qui me parait tr\u00e8s int\u00e9ressant serait d'ajouter la possibilit\u00e9 de modifier ou supprimer une session. En cas d'impr\u00e9vu, le coach ne peut pas supprimer ou modifier la date d'une session qu'il a enregistr\u00e9 avec un client. Un autre point qu'il faudrait rajouter serait l'ajout des photos du client lors de bilan. Les champs sont d\u00e9j\u00e0 pr\u00e9vus dans la base de donn\u00e9es, il ne manque que les inputs dans le formulaire de bilan. Il y a \u00e9galement les donn\u00e9es d'entrainements qui sont actuellement r\u00e9cup\u00e9r\u00e9es avec l'API Polar, cela serait int\u00e9ressant d'ajouter d'autre montre connect\u00e9e (Apple Watch, FitBit, Garmin, etc.). M\u00eame si Polar est une marque tr\u00e8s utilis\u00e9e dans le milieu, cela reste limitant pour les utilisateurs qui ne poss\u00e8dent pas d'appareils Polar. Dans le but de mettre en production l'application, cela serait tr\u00e8s int\u00e9ressant de l'adapter pour t\u00e9l\u00e9phone mobile. Il faudrait \u00e9galement s\u00e9parer les 2 versions de l'application (Coach/Client) qui n'en font qu'une pour l'instant. Comme mentionn\u00e9 plus haut, les blueprints Flask permettent d'effectuer cela sans trop de soucis. La derni\u00e8re am\u00e9lioration serait de pouvoir s\u00e9lectionner les valeurs utilis\u00e9es dans les graphiques montrant l'\u00e9volution du poids sur la page profil du client. Cela serait tr\u00e8s utile pour le coach et m\u00eame pour le client d'avoir acc\u00e8s \u00e0 une courbe montrant l'\u00e9volution d'autres donn\u00e9es comme la masse graisseuse ou musculaire. Bilan personnel Globalement, je suis tr\u00e8s satisfait du travail rendu au bout de ces 9 semaines. Ce projet me tenait particuli\u00e8rement \u00e0 c\u0153ur et je suis content de l'avancement de ce dernier. En travaillant pendant 9 semaines le projet a bien \u00e9volu\u00e9, beaucoup de fonctionnalit\u00e9s sont venus renforcer l'id\u00e9e de d\u00e9part et rendre cette application de plus en plus compl\u00e8te. J'ai pu prendre en main de nouvelles technologies comme Python Flask que j'ai vraiment appr\u00e9ci\u00e9. J'ai \u00e9galement appris \u00e0 utiliser les lecteurs RFID ce que j'ai trouv\u00e9 tr\u00e8s int\u00e9ressant, malgr\u00e9 une documentation tr\u00e8s archa\u00efque de la librairie pyscard qui me permet d'utiliser les lecteurs en Python. Sources Polar Flow : https://flow.polar.com/ Polar API : https://www.polar.com/accesslink-api/ Python Flask : https://flask.palletsprojects.com/en/2.1.x/ FullCalendar : https://fullcalendar.io/ Flask-Mail : https://pythonhosted.org/Flask-Mail/ Flask-Login : https://flask-login.readthedocs.io/en/latest/ SQLAlchemy : https://www.sqlalchemy.org/ Chart.js : https://www.chartjs.org/ LucidCharts : https://www.lucidchart.com/ Figma : https://www.figma.com/ Pyscard : https://pyscard.sourceforge.io/ Argon Design System : https://demos.creative-tim.com/argon-design-system/docs/getting-started/overview.html Python : https://www.python.org/ MailTrap : https://mailtrap.io/ Ray.so : https://ray.so/","title":"Documentation technique"},{"location":"documentation/#documentation-technique","text":"","title":"Documentation technique"},{"location":"documentation/#resume","text":"FitJourney est une application permettant, d'une part, \u00e0 un coach sportif de g\u00e9rer et effectuer le suivi de tous ses clients avec des donn\u00e9es d'entrainements r\u00e9cup\u00e9r\u00e9es \u00e0 l'aide de montres connect\u00e9s Polar. D'autre part, elle permet aux clients d'acc\u00e9der \u00e0 leurs programmes d'entrainements et de nutrition. L'application permet \u00e9galement aux clients de visionner le d\u00e9tail de chacune de leurs s\u00e9ances. FitJourney est une application WEB r\u00e9alis\u00e9e avec le framework Flask du langage Python, elle repose principalement sur l'API Polar Accesslink qui permet l'utilisation des donn\u00e9es des montres connect\u00e9es Ce document reprend toutes les \u00e9tapes du projet qui a \u00e9t\u00e9 r\u00e9alis\u00e9 dans le cadre du travail de dipl\u00f4me de la formation Technicien ES en informatique de Thomas Fujise.","title":"R\u00e9sum\u00e9"},{"location":"documentation/#abstract","text":"FitJourney is an application that allows personal trainers to follow up all their clients training data that is retrieved using Polar connected watches. It also allows clients to access their training and diet plan. The application allows clients to look at the details of each of their workouts. FitJourney is a WEB application made with Flask Python framework. It relies mainly on the Polar Accesslink API which allows the use of data from connected watches. This document contains all the steps of the project, which was carried out within the diploma project of the IT Technician formation of Thomas Fujise","title":"Abstract"},{"location":"documentation/#introduction","text":"Dans le cadre de notre deuxi\u00e8me et derni\u00e8re ann\u00e9e au CFPT Informatique en tant que Technicien ES, il nous est demand\u00e9 de r\u00e9aliser un travail de dipl\u00f4me dans le but de valider les comp\u00e9tences acquises tout au long de cette formation. J'ai fait le choix de d\u00e9velopper \"FitJourney\", une application web qui facilite la pratique du m\u00e9tier de coach sportif. Cette application permet de g\u00e9rer le suivi des clients allant de l'importation des programmes individuels des clients \u00e0 la r\u00e9colte des donn\u00e9es d'entrainements \u00e0 l'aide de montre connect\u00e9 Polar. Elle permet \u00e9galement de g\u00e9rer une salle de sport avec les cartes de membres qui permettent l'acc\u00e8s \u00e0 la salle. Ayant pass\u00e9 un dipl\u00f4me de coach sportif l'ann\u00e9e pass\u00e9e, j'\u00e9tais \u00e0 l'aise avec les besoins qu'un professionnel aurait en cas d'utilisation de l'application.","title":"Introduction"},{"location":"documentation/#cahier-des-charges","text":"","title":"Cahier des charges"},{"location":"documentation/#contexte","text":"D\u00e9velopper une application web regroupant des clients et des coachs de sport. L'application permet le suivi des clients et peut r\u00e9cup\u00e9rer des donn\u00e9es d'entrainements directement depuis un appareil connect\u00e9 Polar. Il existe aujourd'hui, tr\u00e8s peu d'outil qui permet \u00e0 un coach sportif de g\u00e9rer sa salle de sport avec le suivi de tous ses clients. C'est pourquoi, j'ai d\u00e9cid\u00e9 de d\u00e9velopper une application qui permettrait de g\u00e9rer une salle de sports ainsi que le suivi des clients et de l'utiliser en tant que sujet pour mon travail de dipl\u00f4me.","title":"Contexte"},{"location":"documentation/#but-du-projet","text":"Le but du projet est de cr\u00e9er une plateforme web regroupant clients et coachs afin de g\u00e9rer une salle de sport et le suivi des clients. Les donn\u00e9es d'entrainements suivantes sont r\u00e9cup\u00e9r\u00e9es depuis une smartwatch Polar: Pulsation cardiaque (Repos/Actif/Apr\u00e8s effort) Le type d'exercice effectu\u00e9 Date et dur\u00e9e de l'entrainement Nombre de total de calories brul\u00e9es Nombre de calories active (Optionnel) Les donn\u00e9es relatives au sommeil Pulsation cardiaque Cycles de sommeil Interruption Hypnogramme Il y a \u00e9galement un syst\u00e8me de badging pour savoir quand le client rentre et sors de la salle de sport \u00e0 la fin de son entrainement.","title":"But du projet"},{"location":"documentation/#cas-dutilisations","text":"2 cas d'utilisations sont possibles avec l'application.","title":"Cas d'utilisations"},{"location":"documentation/#client","text":"Le cas d'utilisation pour client : Le client doit se connecter pour avoir acc\u00e8s \u00e0 l'application, il ne peut pas se cr\u00e9er de compte lui-m\u00eame. Si le client se connecte \u00e0 l'application, il a alors acc\u00e8s \u00e0 plusieurs fonctionnalit\u00e9s : Visualiser/T\u00e9l\u00e9charger ses programmes (Entrainement et Nutrition) Laisser un retour sur une session effectu\u00e9 Laisser un retour sur le coaching de mani\u00e8re g\u00e9n\u00e9rale G\u00e9rer son profil","title":"Client"},{"location":"documentation/#coach","text":"Le cas d'utilisation pour coach : Le coach \u00e0 lui \u00e9galement 2 possibilit\u00e9s en arrivant sur l'application (Enregistrement et connexion). Une fois connect\u00e9, le coach \u00e0 acc\u00e8s \u00e0 une multitude de fonctionnalit\u00e9s : Ajout d'un nouveau client (cr\u00e9ation du compte client) Ajouter une session avec un client (Prise de rendez-vous) G\u00e9rer son profil Il a \u00e9galement acc\u00e8s \u00e0 des fonctionnalit\u00e9s pour g\u00e9rer ses clients : Importation des programmes (entrainement et nutrition) Renouveler l'abonnement souscrit par le client Effectuer un bilan avec un client Changer la carte membre du client","title":"Coach"},{"location":"documentation/#specifications","text":"Les donn\u00e9es d'entrainements sont r\u00e9cup\u00e9r\u00e9es avec l'API Accesslink de Polar en Python sous forme d'objet, elles sont v\u00e9rifi\u00e9es et stock\u00e9es directement dans la base de donn\u00e9es Le syst\u00e8me de badge fonctionne \u00e0 l'aide de cartes RFID et un lecteur NFC (ACS ACR 122u) Les graphiques li\u00e9s aux stats sont effectu\u00e9s avec la librairie JavaScript Chart.js Les programmes d'entrainements et de nutritions doivent respecter le format propos\u00e9 (Lors de l'upload une v\u00e9rification est effectu\u00e9e) Un syst\u00e8me de notification est mis en place pour avertir les utilisateurs des diff\u00e9rents \u00e9v\u00e9nements","title":"Sp\u00e9cifications"},{"location":"documentation/#restrictions","text":"Pour l'instant, il est uniquement possible d'utiliser des appareils Polar pour les donn\u00e9es d'entrainement. Le syst\u00e8me de badge est utilis\u00e9 au d\u00e9but et \u00e0 la fin et non pendant l'entrainement. L'API accepte au maximum 500 requ\u00eate pour 20 utilisateurs diff\u00e9rents en 15 min et 5000 pour 100 utilisateurs en 24h Les montres utilis\u00e9es lors des entrainements sont celles du coach (montres d\u00e9j\u00e0 enregistr\u00e9es sur le compte client qui acc\u00e8de \u00e0 l'API)","title":"Restrictions"},{"location":"documentation/#environnement","text":"Les technologies \u00e0 utiliser : HTML5 CSS3 JavaScript SQL Python Flask (Micro Framework Python) Lecteur NFC (ACS ACR122U) API AccessLink Polar Chart.js Syst\u00e8me d'exploitation : D\u00e9veloppement sur Windows Versionning / Documentation : GitHub MarkDown (Mkdocs)","title":"Environnement"},{"location":"documentation/#contact","text":"","title":"Contact"},{"location":"documentation/#etudiant","text":"Pr\u00e9nom : Thomas Nom : Fujise Email : thomas.fjs@eduge.ch T\u00e9l\u00e9phone : +41 (0) 77 463 89 68","title":"\u00c9tudiant"},{"location":"documentation/#enseignant","text":"Pr\u00e9nom : S\u00e9bastien Nom : Jossi Email : edu-jossis@eduge.ch T\u00e9l\u00e9phone : /","title":"Enseignant"},{"location":"documentation/#dates-importantes","text":"Date T\u00e2ches Lundi, 04 avril 2022 D\u00e9but du travail de dipl\u00f4me Mardi, 26 avril 2022 \u00c9valuation interm\u00e9diaire 01 Lundi, 09 mai 2022 Rendu du rapport interm\u00e9diaire + poster & Rendu du r\u00e9sum\u00e9 et de l'abstract Mardi, 10 mai 2022 \u00c9valuation interm\u00e9diaire 02 Jeudi, 12 mai 2022 Apr\u00e8s-midi/Soir\u00e9e poster Mardi, 24 mai 2022 \u00c9valuation interm\u00e9diaire 03 Vendredi, 10 juin 2022 Rendu du travail avant 12:00","title":"Dates importantes"},{"location":"documentation/#livrable","text":"Documentation technique + journal de bord Manuel utilisateur Poster Code source","title":"Livrable"},{"location":"documentation/#analyse-de-lexistant","text":"","title":"Analyse de l'existant"},{"location":"documentation/#inithy","text":"Inithy est une application de coaching \"tout-en-un\" qui propose \u00e9norm\u00e9ment de fonctionnalit\u00e9s. Elle permet le suivi des clients, le planning de sessions, l'importation de programmes ou encore l'interaction entre utilisateurs de l'application. Elle poss\u00e8de une fonctionnalit\u00e9 de synchronisation avec les applications de sports comme GoogleFit, Apple Sant\u00e9 ou encore Fitbit. La synchronisation avec Polar et Garmin n'est pas disponible avec leur application. Il y a \u00e9galement la possibilit\u00e9 d'effectuer des paiements sur l'application pour acheter un abonnement. C'est une application tr\u00e8s compl\u00e8te qui r\u00e9pond \u00e0 beaucoup de besoins que j'ai identifi\u00e9 pr\u00e9c\u00e9demment. Le principal point qui me diff\u00e9rencie de cette application, est que FitJourney est plus ax\u00e9 pour g\u00e9rer une salle de sport et les clients membres (pour un coach sportif qui aurait son studio de coaching par exemple) que pour le coaching en ligne comme l'est Inithy .","title":"Inithy"},{"location":"documentation/#analyse-fonctionnelle","text":"","title":"Analyse fonctionnelle"},{"location":"documentation/#fonctionnalites","text":"","title":"Fonctionnalit\u00e9s"},{"location":"documentation/#description-generale","text":"L'application est accessible par n'importe qui poss\u00e9dant un compte. Seuls les coachs ont acc\u00e8s \u00e0 la page d'enregistrement pour se cr\u00e9er un nouveau compte et c'est \u00e9galement que les coachs qui peuvent cr\u00e9er un compte pour un client. Une fois connect\u00e9, l'utilisateur \u00e0 acc\u00e8s \u00e0 plusieurs fonctionnalit\u00e9s en fonction de son r\u00f4le (coach ou client)","title":"Description g\u00e9n\u00e9rale"},{"location":"documentation/#description-detaillee","text":"","title":"Description d\u00e9taill\u00e9e"},{"location":"documentation/#application-coach","text":"Le coach s'inscrit et s'authentifie avec un formulaire\u202f; Le coach peut modifier les informations propres \u00e0 son compte utilisateur (nom, pr\u00e9nom, birthdate, email, photo de profil, adresse et mot de passe)\u202f; Le coach peut ajouter un client en lui cr\u00e9ant un compte et en s\u00e9lectionnant le type d'abonnement que le client souhaite prendre\u202f; Le coach peut enregistrer une session qu'il pr\u00e9voit avec un de ses clients en renseignant : La date\u202f; L'heure\u202f; La dur\u00e9e\u202f; Le type d'entrainement pr\u00e9vu\u202f; Le coach peut voir une vue d'ensemble de la liste de tous les clients dont il a la charge, il voit \u00e9galement la prochaine session qu'il a enregistr\u00e9e avec un client avec un r\u00e9sum\u00e9\u202f; Le coach \u00e0 acc\u00e8s \u00e0 un calendrier pour visionner les sessions qu'il a enregistr\u00e9es (plusieurs affichages disponibles : mois, semaine, jour ou encore en liste)\u202f; Le coach peut effectuer un nouveau bilan/check-up pour le client Le coach \u00e0 acc\u00e8s aux profils des clients dont il a la charge o\u00f9 il peut : Renouveler/annuler l'abonnement du client\u202f; Changer la carte de membre du client\u202f; Importer un nouveau programme d'alimentation ou d'entrainement pour le client\u202f; Visionner les anciens bilans qu'il a effectu\u00e9s Visionner les reviews sur le coaching et les entrainements que le client a laiss\u00e9s\u202f; Visionner les statistiques du client : Nombre de types d'entrainement effectu\u00e9\u202f; Nombre d'entrainements chaque mois\u202f; Le poids du client sur l'ann\u00e9e\u202f; Le nombre de calories br\u00fbl\u00e9es dans la semaine\u202f; La moyenne des BPM cardiaques enregistr\u00e9s dans la semaine\u202f; Le total de temps pass\u00e9 \u00e0 s'entrainer dans la semaine\u202f;","title":"Application coach"},{"location":"documentation/#application-client","text":"Le client s'authentifie avec un formulaire \u00e0 l'aide des identifiants qui lui sont transmis par email (les identifiants peuvent \u00eatre modifi\u00e9 par le client plus tard)\u202f; Le client a un aper\u00e7u des prochaines sessions qu'il a avec son coach; Le client a un aper\u00e7u de tous les entrainements qu'il a effectu\u00e9s, en cliquant dessus il peut voir les d\u00e9tails de ce-dernier\u202f; Le client peut laisser un retour sur un entrainement qu'il a effectu\u00e9, il peut \u00e9galement laisser un retour sur le coaching de mani\u00e8re g\u00e9n\u00e9rale\u202f; Le client peut t\u00e9l\u00e9charger les programmes que son coach a import\u00e9s\u202f; Le client a acc\u00e8s \u00e0 un aper\u00e7u des bilans qu'il a effectu\u00e9s avec son coach; Le client peut visionner les statistiques enregistr\u00e9es pour lui : Nombre de types d'entrainement effectu\u00e9\u202f; Nombre d'entrainements chaque mois\u202f; Le poids du client sur l'ann\u00e9e\u202f; Le nombre de calories br\u00fbl\u00e9es dans la semaine\u202f; La moyenne des BPM cardiaques enregistr\u00e9s dans la semaine\u202f; Le total de temps pass\u00e9 \u00e0 s'entrainer dans la semaine\u202f;","title":"Application client"},{"location":"documentation/#lecture-carte-membre","text":"La lecture de carte membre est effectu\u00e9e \u00e0 l'aide d'un script ind\u00e9pendamment de l'application principale. Aucune interface n'est disponible pour le moment, seul un message est affich\u00e9 dans le terminal pour afficher si le client a \u00e9t\u00e9 reconnu ou non. Cette partie permet au client de : Scanner sa carte membre en arrivant \u00e0 la salle de sport, la carte est reconnue et le client est identifi\u00e9. Scanner sa carte de membre en sortant de la salle de sport, les donn\u00e9es de l'entrainement effectu\u00e9 sont alors r\u00e9cup\u00e9r\u00e9s et enregistr\u00e9s.","title":"Lecture carte membre"},{"location":"documentation/#sitemap","text":"La sitemap de l'application poss\u00e8de 2 alternatives, 1 pour les clients et 1 pour les coachs.","title":"Sitemap"},{"location":"documentation/#sitemap-client","text":"Voici la sitemap client, on y retrouve tous les chemins utilisables en tant que client :","title":"Sitemap Client"},{"location":"documentation/#sitemap-coach","text":"Voici la sitemap coach, on y retrouve tous les chemins utilisables en tant que coach :","title":"Sitemap Coach"},{"location":"documentation/#maquettage","text":"Pour pr\u00e9parer les interfaces, j'ai r\u00e9alis\u00e9 des maquettes avec l'outil Figma. Les maquettes m'ont permis de mettre \u00e0 plat les \u00e9l\u00e9ments n\u00e9cessaires pour les interfaces et ont \u00e9vit\u00e9 de perdre trop de temps lors de la cr\u00e9ation des interfaces. L'application FitJourney propose 2 niveaux d'acc\u00e8s : Client Coach","title":"Maquettage"},{"location":"documentation/#en-tant-que-client","text":"Le client doit se connecter pour avoir acc\u00e8s \u00e0 l'application, il ne peut pas se cr\u00e9er de compte tout seul.","title":"En tant que client"},{"location":"documentation/#page-de-connexion","text":"La page de connexion permet aux utilisateurs de se connecter. Un lien est disponible si le mot de passe a \u00e9t\u00e9 oubli\u00e9.","title":"Page de connexion"},{"location":"documentation/#barre-de-navigation","text":"La barre de navigation disponible en tant que client verticalement \u00e0 gauche de l'\u00e9cran. 3 boutons de navigation suppl\u00e9mentaires sont disponibles : Profil Agenda Entrainement","title":"Barre de navigation"},{"location":"documentation/#page-profil","text":"La page profil permet au client de modifier ses informations personnelles. Plusieurs boutons sont disponibles : 1 bouton \"Update\" pour appliquer les modifications effectu\u00e9es sur les informations du compte 1 bouton \"Change password\" en jaune pour modifier le mot de passe 1 bouton \"Change logo\" pour importer une photo de profil. Il a \u00e9galement acc\u00e8s \u00e0 des statistiques sur les donn\u00e9es des entrainements qu'il a effectu\u00e9s cette semaine (en rouge) et la liste des bilans g\u00e9n\u00e9raux et de session que l'utilisateur a post\u00e9s (en vert). Il a la possibilit\u00e9 d'ajouter un nouveau bilan g\u00e9n\u00e9ral en cliquant sur le bouton au-dessus.","title":"Page profil"},{"location":"documentation/#page-ajout-bilan","text":"La page \"Ajout Bilan\" permet au client de noter, soit la qualit\u00e9 du suivi effectu\u00e9 par le coach, soit une session effectu\u00e9e. Dans la zone rouge, l'\u00e9l\u00e9ment qui est \u00e9valu\u00e9 (un coach ou une session). Dans la zone bleue, les diff\u00e9rents \u00e9l\u00e9ments \u00e0 noter ainsi qu'une zone pour ajouter un commentaire.","title":"Page Ajout Bilan"},{"location":"documentation/#page-bilan","text":"La page \"Bilan\" permet de voir le bilan ajout\u00e9, soit un bilan sur le suivi de mani\u00e8re g\u00e9n\u00e9rale, soit un bilan sur une session effectu\u00e9e. Dans la zone rouge, on peut voir de quel type de bilan il s'agit (Bilan g\u00e9n\u00e9ral sur le coaching ou bilan d'une session). Dans la zone verte, on retrouve le client et la date \u00e0 laquelle le bilan a \u00e9t\u00e9 post\u00e9. Dans la zone bleue, on retrouve les \u00e9l\u00e9ments qui ont \u00e9t\u00e9 not\u00e9 par le client.","title":"Page Bilan"},{"location":"documentation/#page-liste-entrainements","text":"Cette page affiche la liste de tous les entrainements effectu\u00e9s par le client. L'utilisateur peut cliquer sur chaque \u00e9l\u00e9ment de la liste pour avoir les d\u00e9tails de l'entrainement.","title":"Page liste entrainements"},{"location":"documentation/#page-details-entrainement","text":"Cette page affiche les d\u00e9tails d'un entrainement avec les donn\u00e9es r\u00e9cup\u00e9r\u00e9es \u00e0 l'aide de la smartwatch. On peut retrouver des informations comme : Le nombre de calories br\u00fbl\u00e9es Les pulsations cardiaques par minute avec un graphique montrant l'\u00e9volution durant l'entrainement La dur\u00e9e de l'entrainement Le type d'entrainement Le client peut ajouter un bilan en cliquant sur le bouton (encadr\u00e9 en rouge) pour donner son ressenti sur la s\u00e9ance.","title":"Page d\u00e9tails entrainement"},{"location":"documentation/#page-prochaine-session","text":"Cette page affiche les prochaines sessions d'entrainements avec un coach du client","title":"Page prochaine session"},{"location":"documentation/#en-tant-que-coach","text":"Le coach peut se cr\u00e9er un compte et se connecter \u00e0 l'application, une fois connect\u00e9, il a acc\u00e8s \u00e0 toute l'application.","title":"En tant que coach"},{"location":"documentation/#page-denregistrement","text":"La page d'enregistrement permet aux coachs de s'enregistrer, une fois enregistr\u00e9 il peut se connecter avec la page de connexion","title":"Page d'enregistrement"},{"location":"documentation/#barre-de-navigation_1","text":"La barre de navigation disponible en tant que client verticalement \u00e0 gauche de l'\u00e9cran. 1 bouton suppl\u00e9mentaire est disponible : Dashboard","title":"Barre de navigation"},{"location":"documentation/#page-tableau-de-bord","text":"La page tableau de bord permet au coach de voir la liste des clients (en rouge) dont il effectue le suivi. Le coach peut cliquer sur le nom d'un de ses clients pour afficher le profil du client concern\u00e9. Il a \u00e9galement acc\u00e8s \u00e0 un bouton pour ajouter un nouveau client (en bleu). Les informations de la prochaine session avec un client sont disponibles au-dessus de la liste des clients (en vert).","title":"Page tableau de bord"},{"location":"documentation/#page-ajout-de-client","text":"La page ajout de client permet au coach d'effectuer la prise en charge d'un nouveau client. Si le client poss\u00e8de d\u00e9j\u00e0 un compte, le coach peut s\u00e9lectionner un compte d\u00e9j\u00e0 existant (en vert) ou cr\u00e9er un nouveau compte client. Si le coach s\u00e9lectionne un compte d\u00e9j\u00e0 existant, les champs se remplissent automatiquement. Il faudra uniquement s\u00e9lectionner le type d'abonnement souhait\u00e9 (en rouge)","title":"Page Ajout de client"},{"location":"documentation/#page-profil-client","text":"La page profil client permet au coach de visionner le profil de ses clients (en bleu). Plusieurs boutons sont disponibles : 1 bouton pour le changement de la carte de membre (Bouton bleu) 1 bouton pour le renouvellement de l'abonnement (Bouton vert) 1 bouton pour l'annulation de l'abonnement (Bouton rouge) Il peut \u00e9galement voir les graphiques/statistiques disponibles sur le profil. Le coach peut ajouter les nouveaux programmes du client (en rouge) \u00e0 l'aide des boutons d'importation (1 bouton pour le programme d'entrainement et 1 bouton pour le programme de nutrition). Les anciens programmes sont disponibles en cliquant sur les boutons du programme souhait\u00e9 (bouton vert et orange), leurs dates d'importation sont affich\u00e9es \u00e0 c\u00f4t\u00e9. Dans la zone verte, on peut retrouver les diff\u00e9rents bilans de satisfaction que le client a ajout\u00e9s. En haut de cette zone, un bouton d'ajout de bilan est disponible. Il va permettre d'effectuer le bilan du client et d'ajouter les nouvelles informations (Poids, Masse graisseuse, etc)","title":"Page profil client"},{"location":"documentation/#page-bilan-client","text":"La page Bilan client permet au coach d'ajouter le bilan d'un client. Dans la zone rouge, on retrouve les infos qui changent le moins, voire jamais (Nom, taille ou encore l'\u00e2ge). Dans la zone bleue, les informations importantes qui ont pu \u00eatre r\u00e9cup\u00e9r\u00e9es suite \u00e0 la pes\u00e9e. Dans la zone verte, il est possible d'ajouter des photos du physique du client pour pouvoir \u00e9ventuellement avoir des avants/apr\u00e8s en guise de comparaison.","title":"Page Bilan client"},{"location":"documentation/#page-abonnement","text":"La page abonnement permet de valider le paiement d'un client (Aucune transaction n'est effectu\u00e9 par l'application). Le coach peut s\u00e9lectionner le type d'abonnement que le client souhaite prendre, la date d'\u00e9ch\u00e9ance du nouvel abonnement s\u00e9lectionn\u00e9 ainsi que son co\u00fbt seront affich\u00e9s.","title":"Page Abonnement"},{"location":"documentation/#page-calendrier","text":"La page calendrier permet au coach d'avoir acc\u00e8s \u00e0 un calendrier et de visionner les rendez-vous enregistr\u00e9s \u00e0 la date s\u00e9lectionn\u00e9e. Les sessions enregistr\u00e9es sont affich\u00e9es dans la zone rouge, avec quelques d\u00e9tails sur la s\u00e9ance. Dans la zone verte, un bouton pour ajouter une nouvelle session avec un client est disponible. Le coach doit renseigner : Le nom du client (Liste d\u00e9roulante parmi ses clients) L'heure de la session La dur\u00e9e Le type de session","title":"Page Calendrier"},{"location":"documentation/#analyse-organique","text":"","title":"Analyse Organique"},{"location":"documentation/#mise-en-place-environnement","text":"","title":"Mise en place / Environnement"},{"location":"documentation/#visual-studio-code","text":"J'ai choisi d'utiliser Visual Studio code pour \u00e9diter mon code, il est directement reli\u00e9 \u00e0 mon repos sur Github. Je peux donc directement depuis Visual Studio Code commit tous les changements que j'effectue.","title":"Visual Studio Code"},{"location":"documentation/#mkdocs","text":"Mkdocs permet de g\u00e9n\u00e9rer un site statique pour la documentation. Il prend en compte tous les fichiers Markdown (.md) dans le dossier docs/ , et un fichier de configuration YAML qui se trouve \u00e0 la racine du projet. Mkdocs me permet de visionner mes fichiers Markdown en direct et \u00e0 l'aide de l'extension with-pdf , de g\u00e9n\u00e9rer un fichier PDF de me tous mes fichiers Markdown.","title":"Mkdocs"},{"location":"documentation/#github","text":"Pour pouvoir garder un suivi constant de mon projet, j'ai choisi d'utiliser GitHub comme outil de contr\u00f4le de version. Voici comment est structur\u00e9 le github : Le dossier docs/ contient les fichiers de documentation et de journal de bord Le dossier src/ contient tout le code source de l'application","title":"GitHub"},{"location":"documentation/#trello","text":"Trello est un outil de gestion de projet en ligne, inspir\u00e9 par la m\u00e9thode Kanban. Il repose sur une organisation des projets en planches listant des cartes, chacune repr\u00e9sentant des t\u00e2ches. Afin de cr\u00e9er une roadmap pour mon projet, j'ai utilis\u00e9 Trello pour lister les diff\u00e9rentes \u00e9tapes de mon projet. J'ai ensuite pu d\u00e9finir les \u00e9ch\u00e9ances pour chaque t\u00e2che/\u00e9tapes avec mon planning pr\u00e9visionnel. J'ai cr\u00e9\u00e9 5 colonnes : Backlog (Liste de toutes les t\u00e2ches) To-Do (Les t\u00e2ches qui ont \u00e9t\u00e9 valid\u00e9es et qui sont \u00e0 faire) Doing (Les t\u00e2ches en cours) Testing (Les t\u00e2ches en cours de test) Done (Les t\u00e2ches termin\u00e9es)","title":"Trello"},{"location":"documentation/#guide-dinstallation","text":"FitJourney utilise la 3\u1d49 version de Python (donc python3 )","title":"Guide d'installation"},{"location":"documentation/#windows","text":"Premi\u00e8rement, cela serait int\u00e9ressant de travailler sur un environnement WSL avec VSCode. Pour mettre en place WSL, j'ai suivi le guide disponible directement dans la documentation de VSCode : https://code.visualstudio.com/docs/remote/wsl","title":"Windows"},{"location":"documentation/#mysql","text":"Une fois l'environnement de d\u00e9veloppement install\u00e9 correctement, il faut installer MySQL (si cela n'est pas d\u00e9j\u00e0 fait) \u00e0 l'aide de la commande : sudo apt install mysql-server Puis lancer le service MySQL: sudo service mysql start et sudo mysql_secure_installation Pour se connecter \u00e0 la base de donn\u00e9es, utiliser un DBMS comme DBeaver ou MySQLWorkbench .","title":"MySQL"},{"location":"documentation/#pip3","text":"Il faut s'assurer que pip3 a bien \u00e9t\u00e9 install\u00e9 afin de t\u00e9l\u00e9charger tous les paquets/librairies pour faire fonctionner l'application comme il faut. sudo apt install python3-pip Si une erreur survient, utiliser la commande : sudo apt update && sudo apt upgrade Sinon, vous pouvez v\u00e9rifier que pip3 a bien \u00e9t\u00e9 install\u00e9 en utilisant : pip3 --version","title":"pip3"},{"location":"documentation/#pyscard","text":"Pour pouvoir installer la librairie pyscard sur Windows, il faut au pr\u00e9alable installer SWIG depuis le lien suivant : https://www.swig.org/download.html Il faut ensuite l'ajouter directement au PATH en modifiant les variables d'environnement dans les propri\u00e9t\u00e9s syst\u00e8me. On peut ensuite ajouter simplement le chemin vers le dossier swig que l'on a t\u00e9l\u00e9charg\u00e9 : Une fois ajout\u00e9, il faut ensuite installer Visual C++ version 14.0 ou plus r\u00e9cente (directement installable depuis le Visual Studio Installer) ( https://visualstudio.microsoft.com/fr/downloads/ )","title":"Pyscard"},{"location":"documentation/#requirements","text":"Une fois que swig a \u00e9t\u00e9 ajout\u00e9 au PATH et que pip3 a \u00e9t\u00e9 install\u00e9, il faut installer tous les paquets n\u00e9cessaires pour l'application. Un fichier requirements.txt contenant toutes les librairies n\u00e9cessaires est disponible dans le dossier src/ pip3 install -r requirements.txt /!\\ Ne pas toucher ce fichier.","title":"Requirements"},{"location":"documentation/#api","text":"L'API utilis\u00e9e est l'API Accesslink v3.144.0 de Polar https://www.polar.com/accesslink-api/#polar-accesslink-api . Pour pouvoir utiliser l'API, il faut disposer au pr\u00e9alable d'un compte Polar Flow https://flow.polar.com/ .","title":"API"},{"location":"documentation/#creation-dun-nouveau-client-pour-lapi","text":"Aller sur https://admin.polaraccesslink.com/ . Il faut se connecter avec votre compte Polar Flow et ajouter un nouveau client. Il faut utiliser http://localhost:5000/oauth2_callback pour la callback d'autorisation.","title":"Cr\u00e9ation d'un nouveau client pour l'API"},{"location":"documentation/#configuration-des-identifiants","text":"Ajouter l' id et le secret client dans le fichier src/cardsChecker/config.yml comme ceci : client_id: 57a715f8-b7e8-11e7-abc4-cec278b6b50a client_secret: 62c54f4a-b7e8-11e7-abc4-cec278b6b50a","title":"Configuration des identifiants"},{"location":"documentation/#authentification","text":"Le compte utilisateur doit \u00eatre reli\u00e9 au client cr\u00e9\u00e9 avant de pouvoir acc\u00e9der aux donn\u00e9es. Pour le relier, il faut lancer le script src/cardsChecker/authorization.py python3 authorization.py puis aller sur la page ' https://flow.polar.com/oauth2/authorization?response_type=code&client_id=CLIENT_ID ' pour relier votre compte utilisateur. (' CLIENT_ID ' doit \u00eatre remplac\u00e9 par votre id client) Une fois ces \u00e9tapes effectu\u00e9es, votre compte aura acc\u00e8s aux donn\u00e9es Polar.","title":"Authentification"},{"location":"documentation/#base-de-donnees","text":"Pour la base de donn\u00e9es, il suffit de cr\u00e9er une base nomm\u00e9e fitjourney , (respecter le nom sinon l'application ne fonctionnera pas). Vous pouvez ensuite ex\u00e9cuter le script sql disponible \u00e0 src/apps/db.sql .","title":"Base de donn\u00e9es"},{"location":"documentation/#organisation-gestion-du-temps","text":"","title":"Organisation / Gestion du temps"},{"location":"documentation/#convention-en-tetes","text":"Tous les fichiers d\u00e9velopp\u00e9s par moi-m\u00eame poss\u00e8dent l'ent\u00eate ci-dessous :","title":"Convention : en-t\u00eates"},{"location":"documentation/#backlog","text":"Les backlogs ont \u00e9t\u00e9 identifi\u00e9s au lancement du projet (certains l'ont \u00e9t\u00e9 au fur et \u00e0 mesure que le projet avan\u00e7ait). Ils ont \u00e9t\u00e9 ajout\u00e9s au Trello qui est l'outil qui a \u00e9t\u00e9 choisi pour g\u00e9rer le projet. Avec les cartes Trello, j'ai d\u00e9fini la difficult\u00e9 et la priorit\u00e9 des t\u00e2ches. Il \u00e9tait donc plus simple pour moi de visualiser quelles t\u00e2ches devaient \u00eatre r\u00e9alis\u00e9 en priorit\u00e9s.","title":"Backlog"},{"location":"documentation/#difficulte","text":"La difficult\u00e9 est d\u00e9finie par une \u00e9tiquette de couleur selon la charte que j'ai d\u00e9finie :","title":"Difficult\u00e9"},{"location":"documentation/#priorite","text":"La priorit\u00e9 est d\u00e9finie \u00e9galement par une \u00e9tiquette qui provient de l'extension \"CardsPriority\" sur Trello. Les priorit\u00e9s assign\u00e9es suivent la charte :","title":"Priorit\u00e9"},{"location":"documentation/#planning","text":"Un planning pr\u00e9visionnel a \u00e9t\u00e9 r\u00e9alis\u00e9 au d\u00e9but du projet afin de lister les t\u00e2ches et d'estimer leurs dur\u00e9es. En regardant les graphiques, on peut directement apercevoir que les deux n'ont aucun point en commun.","title":"Planning"},{"location":"documentation/#planning-previsionnel","text":"","title":"Planning pr\u00e9visionnel"},{"location":"documentation/#planning-effectif","text":"Lors de la r\u00e9alisation du projet, beaucoup de t\u00e2ches sont venues s'ajout\u00e9es. Toute la mise en place de la structure de l'application avec Python Flask m'a prise beaucoup plus de temps que pr\u00e9vu. Les besoins de la base de donn\u00e9es qui ont \u00e9t\u00e9 revu \u00e0 maintes reprises. Le planning initial n'a vraiment pas pu \u00eatre respect\u00e9 \u00e0 cause des diff\u00e9rentes t\u00e2ches qui ont \u00e9t\u00e9 identifi\u00e9es uniquement apr\u00e8s avoir commenc\u00e9 le projet.","title":"Planning effectif"},{"location":"documentation/#technologies-utilisees","text":"","title":"Technologies utilis\u00e9es"},{"location":"documentation/#nfc-reader-acr122u","text":"Le lecteur NFC ACR122U est un appareil permettant de lire et d'\u00e9crire sur des cartes sans contact. Il est bas\u00e9 sur la technologie Mifare 13,56 MHz (RFID) et suit les standards de la norme ISO 18092. L'ACR122U est d\u00e9velopp\u00e9 et vendu par ACS ltd. Pour pouvoir utiliser ce lecteur, j'ai utilis\u00e9 la librairie pyscard qui me permet de r\u00e9cup\u00e9rer les infos des cartes \u00e0 puces que le lecteur lit","title":"NFC Reader ACR122U"},{"location":"documentation/#rfid","text":"Qu'est-ce que la technologie RFID ?? RFID (Radio Frequency Identification), est une technologie qui permet d'enregistrer des donn\u00e9es sur un support et de les r\u00e9cup\u00e9rer \u00e0 distance. Elle est apparue dans les ann\u00e9es 1940 et \u00e9tait utilis\u00e9e uniquement par l'arm\u00e9e pour l'identification des avions de guerre qui entrait dans l'espace a\u00e9rien du Royaume-Uni. Elle s'est ensuite r\u00e9pandue dans diff\u00e9rents secteurs industriels \u00e0 partir des ann\u00e9es 1980. Comment fonctionne la RFID ? Les \u00e9tiquettes RFID sont compos\u00e9es d'une puce RFID et d'une antenne et sont coll\u00e9es sur un produit. Elles enregistrent les donn\u00e9es et avec un lecteur \u00e9lectromagn\u00e9tique on peut ensuite lire les ondes radio pr\u00e9sentes sur la puce RFID gr\u00e2ce \u00e0 l'antenne. Pourquoi utiliser RFID RFID est un syst\u00e8me de tra\u00e7abilit\u00e9. \u00c0 l'aide d'une seule puce, il est possible de tracer les produits pendant tout le processus de production, de transport et de distribution, voire jusqu'\u00e0 leur fin de vie. Dans le cadre de mon projet, RFID est une solution ad\u00e9quate pour g\u00e9rer les entr\u00e9es/sorties des clients dans la salle d'entrainement. Diff\u00e9rences entre RFID et NFC Dans le cadre de mon projet, j'utilise parfois le terme NFC. La technologie NFC (Near Field Communication) est un d\u00e9riv\u00e9 de la RFID qui a commenc\u00e9 \u00e0 \u00eatre utilis\u00e9 d\u00e8s 2011. Le NFC repose sur le m\u00eame concept que la RFID. C'est une technologie qui fonctionne avec une puce permettant d'\u00e9changer des donn\u00e9es entre un lecteur et n'importe quel terminal avec un simple rapprochement ou contact entre les deux objets. La communication sans fil ne fonctionne qu'\u00e0 courte port\u00e9e et haute fr\u00e9quence, une distance d'environ 10\u2009cm. La technologie NFC se retrouve dans la plupart des smartphones, consoles de jeux ou cartes bancaires. Le lecteur de carte que j'utilise fonctionne \u00e0 l'aide de cette technologie \u00e9galement. Les principales diff\u00e9rences entre RFID et NFC r\u00e9sident dans la port\u00e9e plus courte et s\u00e9curis\u00e9e pour NFC (10\u2009cm) contre jusqu'\u00e0 10\u2009m pour RFID. La technologie NFC peut transmettre toute sorte de donn\u00e9es contre RFID qui ne transmet que l'ID. La lecture fait, quant \u00e0 elle, d\u00e9faut \u00e0 la technologie NFC qui ne peut lire qu'une puce \u00e0 la fois, ce qui peut limiter ses cas d'utilisation.","title":"RFID"},{"location":"documentation/#pyscard-librairie-python-smart-card","text":"Pyscard est un module python qui permet d'utiliser les cartes \u00e0 puce (PC/SC) avec python. Il donne acc\u00e8s \u00e0 plusieurs classes et fonctions donnant acc\u00e8s aux cartes et aux lecteurs. Architecture pyscard : smartcard.scard est un module d'extension enveloppant l'API WinSCard (Les composants de base smartcard) aussi connue sous le nom PC/SC (Personal computer / Smart Card) smartcard est un framework Python construit \u00e0 partir de l'API PC/SC","title":"Pyscard - Librairie Python Smart card"},{"location":"documentation/#swig","text":"SWIG est un outil logiciel open source qui permet de connecter des logiciels ou librairies \u00e9crites en C/C++ avec des langages de scripts tels que : Perl , Python , Ruby , PHP ou d'autres langages de programmation comme Java ou C# .","title":"SWIG"},{"location":"documentation/#polar-accesslink-api","text":"Accesslink est une API qui donne acc\u00e8s aux donn\u00e9es d'entrainement et d'activit\u00e9 journali\u00e8re enregistr\u00e9s par les appareils Polar. Pour pouvoir l'utiliser, il est n\u00e9cessaire de poss\u00e9der un compte Polar Flow afin de cr\u00e9er un client sur admin.polaraccesslink.com qui nous donnera acc\u00e8s \u00e0 l'API. Accesslink utilise OAuth2 comme protocole d'authentification. Les utilisateurs enregistr\u00e9s ont besoin de s'authentifier pour pouvoir avoir acc\u00e8s aux donn\u00e9es. Fonctionnalit\u00e9s de base d'Accesslink : Fonctionnalit\u00e9 Description Utilisateurs Permets d'enregistrer, supprimer et r\u00e9cup\u00e9rer les informations de base de l'utilisateur Pull Notification Permets de v\u00e9rifier si l'utilisateur \u00e0 des donn\u00e9es disponibles \u00e0 r\u00e9cup\u00e9rer Donn\u00e9e d'entrainement Permets d'acc\u00e9der aux donn\u00e9es d'entrainements de l'utilisateur Activit\u00e9 journali\u00e8re Permets d'acc\u00e9der aux donn\u00e9es de l'activit\u00e9 journali\u00e8re de l'utilisateur Info physique Permets d'acc\u00e9der aux informations physiques de l'utilisateur (Ex : Taille/Poids) Mod\u00e8le de donn\u00e9es D\u00e9crit tous les objets qui transportent les donn\u00e9es entre le serveur et le client Annexes Contient des exemples et des d\u00e9tails sur l'interface de l'application","title":"Polar Accesslink API"},{"location":"documentation/#choix-dans-le-projet-fitjourney","text":"Je souhaitais utiliser les donn\u00e9es d'entrainements en provenance de montre connect\u00e9e et j'avais d\u00e9j\u00e0 en ma possession une montre Polar. Mon choix s'est donc naturellement orient\u00e9 vers Polar, lorsque j'ai pris connaissance de l'API d\u00e9velopp\u00e9e en Python qu'ils mettaient \u00e0 disposition.","title":"Choix dans le projet - FitJourney"},{"location":"documentation/#python","text":"Python est un langage tr\u00e8s flexible qui propose une approche modulaire et orient\u00e9 objet de la programmation. Il est plac\u00e9 sous une licence libre et fonctionne sur la plupart des plates-formes informatiques. Il est con\u00e7u pour optimiser la productivit\u00e9 des programmeurs en offrant des outils de haut niveau et une syntaxe simple \u00e0 utiliser.","title":"Python"},{"location":"documentation/#choix-dans-le-projet-fitjourney_1","text":"Durant ma derni\u00e8re ann\u00e9e en tant que Technicien ES, j'ai beaucoup utilis\u00e9 python dans mes projets. En trouvant de plus en plus d'outils comme la librairie pyscard ou encore l'API Polar en Python, je me suis tr\u00e8s vite d\u00e9cid\u00e9 sur le langage que j'allais utiliser pour ce projet.","title":"Choix dans le projet - FitJourney"},{"location":"documentation/#python-flask-backend","text":"Flask est un micro-framework Python qui permet la cr\u00e9ation d'applications web \u00e9volutives. Flask d\u00e9pend de la boite \u00e0 outils WSGI (Web Server Gateway Interface) de Werkzeug et du moteur de templates Jinja . Le dossier app/ repr\u00e9sente une application Flask, elle est entre-autre homog\u00e8ne \u00e0 une fonction WGSI.","title":"Python Flask (backend)"},{"location":"documentation/#utilisation-flask","text":"Pour lancer une application Flask, il faut utiliser la m\u00e9thode de l'objet Flask : .run() ou lancer directement l'application \u00e0 l'aide de la commande : Flask run","title":"Utilisation Flask"},{"location":"documentation/#micro-framework","text":"Un micro framework est un framework qui tente de fournir uniquement les composants absolument n\u00e9cessaires \u00e0 un d\u00e9veloppeur pour la cr\u00e9ation d'une application. Par exemple, dans le cas d'une application Web, un micro framework peut \u00eatre sp\u00e9cifiquement con\u00e7u pour la construction d'API pour un autre service/application. Le terme micro dans le micro framework signifie que Flask vise \u00e0 garder le code de base simple, mais extensible. Flask ne prendra pas beaucoup de d\u00e9cisions, par exemple quelle base de donn\u00e9es utiliser. Les d\u00e9cisions qu'il prend, telles que le moteur de templates \u00e0 utiliser, sont faciles \u00e0 modifier. Tout le reste est libre, de sorte que Flask puisse r\u00e9pondre \u00e0 tous nos besoins et \u00e0 tous ce que vous ne voulez pas en m\u00eame temps. En d\u00e9finissant uniquement le moteur de templates et un syst\u00e8me de routes, Flask laisse le choix de personnaliser (en ajoutant des packages) pour la gestion des formulaires par exemple.","title":"Micro framework"},{"location":"documentation/#choix-dans-le-projet-fitjourney_2","text":"Dans le cadre de ce projet, j'ai pr\u00e9f\u00e9r\u00e9 utiliser Flask comme framework \u00e0 la place d'un autre, car j'utilise l'API Polar Accesslink qui est fait en Python. Je souhaitais garder le m\u00eame langage pour \u00e9viter de partir dans tous les sens.","title":"Choix dans le projet FitJourney"},{"location":"documentation/#architecture-blueprint","text":"Afin de bien structurer mon projet, j'ai d\u00e9cid\u00e9 d'utiliser les Flask Blueprint. Chaque Flask Blueprint est un objet et fonctionne de mani\u00e8re tr\u00e8s similaire \u00e0 une application Flask. Ils peuvent tous les deux avoir des ressources, comme des fichiers statiques, des templates et des vues qui sont associ\u00e9es aux routes. Malgr\u00e9 tout, un Flask Blueprint n'est pas exactement comme une application Flask car il a besoin d'\u00eatre enregistr\u00e9 dans l'application pour \u00eatre lanc\u00e9. Lorsqu'on enregistre un Blueprint \u00e0 l'application, on \u00e9tend l'application avec le contenu du Blueprint. Les Blueprints enregistrent toutes les op\u00e9rations \u00e0 ex\u00e9cuter et ne les ex\u00e9cutent qu'une fois enregistr\u00e9 dans l'application Les Blueprints m'ont permis de d\u00e9couper l'application principale en plusieurs parties et de structurer mon projet.","title":"Architecture (Blueprint)"},{"location":"documentation/#argon-design-system","text":"Argon est un \"design system\" open source bas\u00e9 sur le framework CSS Bootstrap 4. Il propose plus de 100 composants individuels ce qui permet une certaine libert\u00e9. Argon m'a permis de ne pas perdre trop de temps sur le c\u00f4t\u00e9 \"design\" de l'application","title":"Argon Design System"},{"location":"documentation/#chartjs","text":"Chart.js est une librairie open source, elle permet la visualisation de donn\u00e9es en utilisant JavaScript. Elle est similaire \u00e0 Chartist ou Google Chart . Chart.js supporte 8 diff\u00e9rents types de graphique et sont tous responsive. Pour pouvoir utiliser Chart.js il faut : D\u00e9finir ou dessiner le graphique sur notre page D\u00e9finir quel type de graphique afficher D\u00e9finir les donn\u00e9es, labels et toutes les autres options Voici un exemple de graphique que peut g\u00e9n\u00e9rer chart.js :","title":"Chart.JS"},{"location":"documentation/#fullcalendario","text":"FullCalendar est une librairie JavaScript qui s'int\u00e8gre facilement avec des frameworks JavaScript populaires tels que Vue, React et Angular. Elle permet d'impl\u00e9menter un calendrier avec des \u00e9v\u00e9nements. Cette librairie est tr\u00e8s utile pour g\u00e9rer l'agenda du coach.","title":"FullCalendar.io"},{"location":"documentation/#architecture-du-projet","text":"Voici l'architecture du projet Fitjourney :","title":"Architecture du projet"},{"location":"documentation/#arborescence-application-principale","text":"run.py | apps/ | |\u2500\u2500 __init__.py \u251c\u2500\u2500 config.py | \u251c\u2500\u2500 authentication/ | \u251c\u2500\u2500 __init__.py | \u251c\u2500\u2500 forms.py | \u251c\u2500\u2500 models.py | \u251c\u2500\u2500 routes.py | \u2514\u2500\u2500 util.py | \u251c\u2500\u2500 client/ | \u251c\u2500\u2500 __init__.py | \u251c\u2500\u2500 forms.py | \u251c\u2500\u2500 routes.py | \u2514\u2500\u2500 util.py | \u251c\u2500\u2500 coach/ | \u251c\u2500\u2500 __init__.py | \u251c\u2500\u2500 forms.py | \u251c\u2500\u2500 routes.py | \u2514\u2500\u2500 util.py | \u251c\u2500\u2500 static/assets/ | \u251c\u2500\u2500 css/ | \u251c\u2500\u2500 fonts/ | \u251c\u2500\u2500 img/ | \u251c\u2500\u2500 js/ | \u2514\u2500\u2500 vendor/.py | \u2514\u2500\u2500 templates/ \u251c\u2500\u2500 accounts/ \u251c\u2500\u2500 client/ \u251c\u2500\u2500 coach/ \u251c\u2500\u2500 includes/ \u2514\u2500\u2500 layout/","title":"Arborescence application principale"},{"location":"documentation/#fichier-runpy","text":"Le fichier run.py est le seul fichier qui est en dehors du dossier principal de l'application. Il permet de cr\u00e9er et de lancer l'application Flask. On peut lancer directement l'application en ex\u00e9cutant ce script. python3 ./run.py","title":"Fichier \"run.py\""},{"location":"documentation/#dossier-apps","text":"Le dossier Apps est le dossier principal de l'application. Il comprend l'ensemble du code source du projet except\u00e9 le fichier \"run.py\". Il comprend lui-m\u00eame plusieurs sous-dossiers expliqu\u00e9s dans les chapitres suivants.","title":"Dossier \"Apps\""},{"location":"documentation/#dossier-authentication","text":"Le dossier authentication repr\u00e9sente le Blueprint authentication_blueprint . On retrouve tous les fichiers utilis\u00e9s pour l'impl\u00e9mentation des fonctionnalit\u00e9s d'authentification. Avec Flask, j'impl\u00e9mente un ORM nomm\u00e9 SQL Alchemy qui impl\u00e9mente le design pattern Data Mapper pour lire les donn\u00e9es de la base de donn\u00e9es. Chacune des tables est repr\u00e9sent\u00e9e par un mod\u00e8le qui est utilis\u00e9 pour interagir avec la table en question. Sachant que l'application FitJourney n'a pas de fonctionnalit\u00e9s disponibles avant que l'utilisateur ne s'authentifie, le fichier \"models.py\" se trouve dans ce dossier, on y retrouve notamment tous les mod\u00e8les.","title":"Dossier \"authentication\""},{"location":"documentation/#fichier-authenticationroutespy","text":"Le fichier routes contient des fonctions python repr\u00e9sentant les vues de la partie authentification de l'application. Chaque fonction permet de g\u00e9n\u00e9rer une vue \u00e0 partir des templates Jinja2, \u00e0 l'aide de la fonction Flask render_template qui provient du package Flask.templating .","title":"Fichier \"authentication/routes.py\""},{"location":"documentation/#dossier-client","text":"Le dossier client repr\u00e9sente le Blueprint client_blueprint . On retrouve tous les fichiers utilis\u00e9s pour l'impl\u00e9mentation des fonctionnalit\u00e9s client. Il contient un fichier de routes, avec toutes les routes disponibles en tant que client sur l'application et un fichier \"forms.py\" qui contient tous les formulaires qui peuvent \u00eatre disponible en tant que client.","title":"Dossier \"client\""},{"location":"documentation/#dossier-coach","text":"Le dossier coach repr\u00e9sente le Blueprint coach_blueprint . On retrouve tous les fichiers utilis\u00e9s pour l'impl\u00e9mentation des fonctionnalit\u00e9s coach. Comme le dossier \"client\" il contient \u00e9galement un fichier de routes et un fichier \"forms\" pour les formulaires.","title":"Dossier \"coach\""},{"location":"documentation/#dossier-staticassetscss","text":"Le dossier \"css\" contient tous les fichiers CSS de l'application. Il contient \u00e9galement un dossier \"bootstrap\" contenant des fichiers de style de l'ensemble Bootstrap","title":"Dossier \"static/assets/css\""},{"location":"documentation/#dossier-staticassetsfonts","text":"Le dossier \"fonts\" contient les fichiers de police d'\u00e9criture utilis\u00e9s dans l'application","title":"Dossier \"static/assets/fonts\""},{"location":"documentation/#dossier-staticassetsimg","text":"Le dossier \"img\" contient toutes les images de l'application, dont notamment les photos de profil des utilisateurs.","title":"Dossier \"static/assets/img\""},{"location":"documentation/#dossier-staticassetsjs","text":"Le dossier \"js\" contient tous les fichiers JavaScript n\u00e9cessaire pour l'application.","title":"Dossier \"static/assets/js\""},{"location":"documentation/#dossier-staticassetsvendor","text":"Le dossier \"vendor\" contient toutes les biblioth\u00e8ques tierces qui sont n\u00e9cessaires au projet (ressources externes). C'est g\u00e9n\u00e9ralement dans ce dossier o\u00f9 sont stock\u00e9es les d\u00e9pendances \u00e0 t\u00e9l\u00e9charger avec un packet manager.","title":"Dossier \"static/assets/vendor\""},{"location":"documentation/#dossier-templates","text":"Le dossier templates est structur\u00e9 en plusieurs parties. Il contient les fichiers .html de l'application. Chaque Blueprint de l'application poss\u00e8de son dossier ici qui contient les templates n\u00e9cessaire pour les vues. En plus des dossiers repr\u00e9sentant les Blueprints, un dossier includes est disponible. Il contient les parties \u00e0 inclure sur les diff\u00e9rentes pages de l'application comme la barre de navigation ou encore les importations de fichiers CSS ou JavaScript. Il y a \u00e9galement un dossier layout qui contient un fichier de base .html qui contient la structure HTML de l'application.","title":"Dossier \"templates\""},{"location":"documentation/#fichier-__initpy","text":"Le fichier \"init\" est un fichier python contenant les m\u00e9thodes d'initialisation de l'application. C'est notamment ici que les blueprints sont enregistr\u00e9s dans l'application.","title":"Fichier \"__init.py\""},{"location":"documentation/#fichier-configpy","text":"Le fichier \"config\" est un fichier python contenant la configuration de l'application. Il contient toutes les constantes n\u00e9cessaires au fonctionnement de l'application","title":"Fichier \"config.py\""},{"location":"documentation/#arborescence-lecture-de-carte","text":"cardsChecker/ | |\u2500\u2500 accesslink/ | \u251c\u2500\u2500 accesslink_polar.py | \u251c\u2500\u2500 authorization.py | \u251c\u2500\u2500 config.py | \u251c\u2500\u2500 config.yml | \u251c\u2500\u2500 db.py | \u251c\u2500\u2500 main.py | \u2514\u2500\u2500 utils.py","title":"Arborescence lecture de carte"},{"location":"documentation/#dossier-accesslink","text":"Le dossier \"accesslink\" contient tous les scripts python permettant l'authentification, l'ex\u00e9cution des diff\u00e9rentes transactions et r\u00e9cup\u00e9rer des donn\u00e9es avec l'API Polar Accesslink. La plupart des fichiers pr\u00e9sents dans ce dossier sont fournis par Polar.","title":"Dossier \"accesslink/\""},{"location":"documentation/#fichier-accesslink_polarpy","text":"Le fichier \"accesslink_polar\" contient un objet Python qui enveloppe toutes les fonctionnalit\u00e9s de l'API Polar \u00e0 l'aide des objets et m\u00e9thode disponible dans le dossier \"accesslink/\"","title":"Fichier \"accesslink_polar.py\""},{"location":"documentation/#fichier-authorizationpy","text":"Le fichier \"authorization\" est un script python qui permet d'authentifier un compte Polar pour avoir acc\u00e8s \u00e0 l'API","title":"Fichier \"authorization.py\""},{"location":"documentation/#fichier-configpy_1","text":"Le fichier \"config.py\" contient toutes les constantes n\u00e9cessaires pour le bon fonctionnement de la lecture des cartes de membre. On y retrouve notamment la configuration pour se connecter \u00e0 la base de donn\u00e9es.","title":"Fichier \"config.py\""},{"location":"documentation/#fichier-configyml","text":"Le fichier \"config.yml\" contient la configuration du client pour avoir acc\u00e8s aux donn\u00e9es avec l'API Polar. Il Contient : L'id de l'utilisateur L'id du client (Pour l'acc\u00e8s) Le secret du client Le token d'acc\u00e8s (Il est g\u00e9n\u00e9r\u00e9 avec le fichier authorization.py )","title":"Fichier \"config.yml\""},{"location":"documentation/#fichier-dbpy","text":"Le fichier \"db.py\" est utilis\u00e9 pour se connecter \u00e0 la base de donn\u00e9es, on y retrouve \u00e9galement les fonctions effectuant des actions avec cette derni\u00e8re.","title":"Fichier \"db.py\""},{"location":"documentation/#fichier-mainpy","text":"Le fichier \"main.py\" contient le script python principal qui permet la lecture des cartes et la r\u00e9cup\u00e9ration des donn\u00e9es avec l'API Polar. C'est ce script qu'il faut ex\u00e9cuter pour lancer le programme.","title":"Fichier \"main.py\""},{"location":"documentation/#base-de-donnees_1","text":"Pour permettre le stockage des donn\u00e9es, j'ai cr\u00e9\u00e9 une base de donn\u00e9es nomm\u00e9e \"fitjourney\". Cette base de donn\u00e9es me permet d'enregistrer et stocker toutes les donn\u00e9es requises pour le bon fonctionnement de l'application.","title":"Base de donn\u00e9es"},{"location":"documentation/#mcd","text":"Au lieu de cr\u00e9er la base de donn\u00e9es directement, j'ai commenc\u00e9 par cr\u00e9er un MCD pour d\u00e9finir tous les besoins de l'application au niveau de la base de donn\u00e9es. Pour faire mon MCD, je suis all\u00e9 sur LucidChart qui est une plateforme de collaboration en ligne permettant la cr\u00e9ation de diagrammes et la visualisation de donn\u00e9es et autres sch\u00e9mas conceptuels.","title":"MCD"},{"location":"documentation/#modele-physique","text":"Une fois les besoins identifi\u00e9s \u00e0 l'aide du MCD, j'ai pu utiliser SQL Alchemy pour cr\u00e9er ma base de donn\u00e9es directement.","title":"Mod\u00e8le physique"},{"location":"documentation/#sqlalchemy","text":"SQL Alchemy est un ORM (mapping objet-relationnel) \u00e9crit en Python, il utilise le pattern Data Mapper et me permet de cr\u00e9er directement mes tables. Exemple d'initialisation d'une table avec SQL Alchemy :","title":"SQLAlchemy"},{"location":"documentation/#data-mapper","text":"Data Mapper est un pattern qui s\u00e9pare les objets en m\u00e9moire de la base de donn\u00e9es. Il consiste \u00e0 transf\u00e9rer les donn\u00e9es entre les deux et \u00e0 les isoler l'une de l'autre. Avec le pattern Data Mapper , les objets en m\u00e9moire ne doivent m\u00eame pas savoir qu'une base de donn\u00e9es est pr\u00e9sente, ils n'ont pas besoin de code d'interface SQL, et certainement pas de connaissance du sch\u00e9ma de la base de donn\u00e9es. (Le sch\u00e9ma de la base de donn\u00e9es ignore toujours les objets qui l'utilisent).","title":"Data Mapper"},{"location":"documentation/#tables","text":"","title":"Tables"},{"location":"documentation/#table-user","text":"La table USER contient tous les utilisateurs de l'application, les coachs ainsi que les clients. les champs email et card_id sont uniques. Le champ card_id repr\u00e9sente l'ID de la carte de membre (RFID) qui est attribu\u00e9e \u00e0 l'utilisateur.","title":"Table USER"},{"location":"documentation/#table-physical_info","text":"La table PHYSICAL_INFO contient toutes les informations physiques r\u00e9cup\u00e9r\u00e9es par le coach lors d'un bilan ou d'une prise en charge. La date permet de garder un historique pour visualiser la progression du client. La plupart des donn\u00e9es ins\u00e9r\u00e9es dans cette table peuvent \u00eatre r\u00e9cup\u00e9r\u00e9es \u00e0 l'aide d'une balance connect\u00e9e.","title":"Table PHYSICAL_INFO"},{"location":"documentation/#table-coachedby","text":"Cette table permet de diff\u00e9rencier un coach d'un client et permet de retrouver tous les clients d'un coach. Les dates de d\u00e9but et de fin permettent de retrouver des anciens coachs/clients si plusieurs coachs travaillent dans la salle de sport.","title":"Table COACHEDBY"},{"location":"documentation/#table-program","text":"La table PROGRAM contient les programmes d'entrainement et de nutrition ajout\u00e9 par un coach.","title":"Table PROGRAM"},{"location":"documentation/#table-role","text":"La table ROLE contient tous les r\u00f4les de l'application. Elle permet de d\u00e9finir les acc\u00e8s que poss\u00e8dent les utilisateurs.","title":"Table ROLE"},{"location":"documentation/#table-purchase","text":"La table PURCHASE contient l'historique de toutes les transactions effectu\u00e9es. Elle permet de retrouver le type d'abonnement que chaque client a souscrit.","title":"Table PURCHASE"},{"location":"documentation/#table-subscription","text":"La table SUBSCRIPTION contient tous les diff\u00e9rents types d'abonnement disponible. Elle permet de conna\u00eetre la dur\u00e9e et le co\u00fbt des abonnements achet\u00e9s par les clients.","title":"Table SUBSCRIPTION"},{"location":"documentation/#table-session","text":"La table SESSION contient l'historique de toutes les sessions effectu\u00e9es par les coachs avec la date et l'heure de la session ainsi que sa dur\u00e9e. Pour rappel, une session repr\u00e9sente un rendez-vous avec un coach. Cela peut \u00eatre pour un entrainement ou encore un bilan.","title":"Table SESSION"},{"location":"documentation/#table-workout_type","text":"Cette table contient les diff\u00e9rents types d'entrainement. Elle permet d'identifier les entra\u00eenements effectu\u00e9s par les clients.","title":"Table WORKOUT_TYPE"},{"location":"documentation/#table-workout","text":"La table WORKOUT contient toutes les donn\u00e9es d'entra\u00eenements des s\u00e9ances effectu\u00e9es. La majorit\u00e9 des donn\u00e9es sont obtenues \u00e0 l'aide des capteurs sur les montres connect\u00e9es. Les donn\u00e9es contenues dans cette table permettent de v\u00e9rifier l'efficacit\u00e9 et l'intensit\u00e9 de la s\u00e9ance et peuvent \u00eatre utilis\u00e9s pour des comparaisons.","title":"Table WORKOUT"},{"location":"documentation/#table-review","text":"La table REVIEW est la table \"m\u00e8re\" des 2 tables : COACHING_REVIEW et SESSION_REVIEW . Elle permet de relier les reviews aux clients.","title":"Table REVIEW"},{"location":"documentation/#table-coaching_review","text":"Cette table contient tous les retours client sur le coaching effectu\u00e9 par le coach. Les champs disponibles ont la satisfaction, le support le coach lui apporte, la disponibilit\u00e9 du coach en cas de besoin et si le client souhaite continuer son suivi.","title":"Table COACHING_REVIEW"},{"location":"documentation/#table-session_review","text":"Cette table contient tous les retours client sur les sessions qu'il effectue avec un coach. Les champs disponibles sont la difficult\u00e9, le ressenti de la s\u00e9ance, le niveau de fatigue \u00e0 la fin de la s\u00e9ance et l'\u00e9nergie que le client avait en arrivant.","title":"Table SESSION_REVIEW"},{"location":"documentation/#fitjourney-application","text":"","title":"FitJourney application"},{"location":"documentation/#developpement-avec-python-flask","text":"L'application web FitJourney est d\u00e9velopp\u00e9 avec Python flask qui utilise Jinja2 pour le templating et Werkzeug pour faire la communication entre serveur web et application web.","title":"D\u00e9veloppement avec Python Flask"},{"location":"documentation/#templating-jinja2","text":"Le templating permet de cr\u00e9er des pages dynamiques en fonction des donn\u00e9es fournies \u00e0 la page. Dans le cas de l'application, cela permet d'afficher les donn\u00e9es de l'utilisateur connect\u00e9 ainsi qu'afficher certaines parties en fonction du niveau d'acc\u00e8s de l'utilisateur.","title":"Templating Jinja2"},{"location":"documentation/#template-de-base","text":"Le concept tr\u00e8s utile qui est la possibilit\u00e9 de cr\u00e9er une template parent. Pour illustrer cela, j'ai un fichier add_program.html qui va utiliser tout le contenu du fichier base.html , mais qui va ajouter certaines parties en plus, selon les instructions. Voici un aper\u00e7u du fichier base.html et on peut y retrouver plusieurs instructions comme : {% block content %}{% endblock content%} Ces instructions permettent d'ins\u00e9rer du contenu depuis un fichier enfant. Pour cr\u00e9er un fichier enfant, il suffit d'ajouter l'instruction : {% extends 'base.html' %} pour \u00e9tendre le fichier de parent. Voici un exemple de fichier enfant avec le fichier add_program.html : La vue de cette page :","title":"Template de base"},{"location":"documentation/#routes","text":"Les routes avec Python Flask sont reli\u00e9es directement \u00e0 des m\u00e9thodes. Ces m\u00e9thodes doivent forc\u00e9ment retourner quelque chose. L'instruction : @blueprint.route('/dashboard') permet de dire que la m\u00e9thode qui suit l'instruction sera li\u00e9e au blueprint et la route \"/dashboard\". (Il est possible de relier plusieurs routes \u00e0 la m\u00eame m\u00e9thode) Comme pr\u00e9ciser ci-dessus, il est obligatoire de retourner quelque chose. Pour utiliser du templating Jinja2, Flask propose une m\u00e9thode nomm\u00e9e render_template() . Le premier param\u00e8tre de cette m\u00e9thode est le fichier de template que l'on veut utiliser, puis les param\u00e8tres suivants sont des donn\u00e9es que l'on veut transmettre \u00e0 la vue. Dans le cas de la route /dashboard , je donne le prochain client qui a rendez-vous avec le coach, la date du dernier entrainement qu'il a effectu\u00e9 ainsi que la liste de tous les autres clients dont il a la charge. Comme on peut le voir sur l'image ci-dessus, il est possible d'ajouter l'instruction @login_required avant la m\u00e9thode pour pr\u00e9ciser que cette route n'est accessible que si un utilisateur est connect\u00e9. Cette instruction est utilisable \u00e0 l'aide la librairie Flask-Login .","title":"Routes"},{"location":"documentation/#les-routes-de-lapplication","text":"Comme mentionn\u00e9 plus haut dans l' architecture blueprint , dans mon application, chaque route est reli\u00e9e au blueprint correspondant. Voici les diff\u00e9rentes routes qui ont \u00e9t\u00e9 cr\u00e9\u00e9 pour l'application FitJourney . Endpoint public - Visiteur M\u00e9thodes Endpoint Description POST /login Permet de connecter un utilisateur --- --- --- Endpoint priv\u00e9 - Client M\u00e9thodes Endpoint Description GET /index R\u00e9cup\u00e8re les prochaines sessions que le client a planifi\u00e9es POST /profile R\u00e9cup\u00e8re toutes les donn\u00e9es du client, permets de modifier les informations personnelles du client GET /review R\u00e9cup\u00e8re les d\u00e9tails d'une review POST /add_review Permet d'ajouter une review GET /workouts R\u00e9cup\u00e8re tous les entrainements effectu\u00e9s par un client GET /workout R\u00e9cup\u00e8re les d\u00e9tails d'un entrainement GET /checkup R\u00e9cup\u00e8re les d\u00e9tails d'un bilan POST /change_password Permet de modifier le mot de passe de l'utilisateur GET /program Permet de t\u00e9l\u00e9charger le fichier pdf du programme --- --- --- Endpoint priv\u00e9 - Coach M\u00e9thodes Endpoint Description POST /register Permet d'inscrire un nouvel utilisateur coach GET /dashboard R\u00e9cup\u00e8re les informations de la prochaine session du coach et la liste de tous ses clients POST /calendar R\u00e9cup\u00e8re toutes les sessions d'un coach et permet d'ajouter une nouvelle session avec un client POST /client R\u00e9cup\u00e8re toutes les donn\u00e9es d'un client GET /review R\u00e9cup\u00e8re les d\u00e9tails d'une review POST /add_client Permet de cr\u00e9er un nouvel utilisateur client POST /add_program Permet d'ajouter un programme \u00e0 un client GET /program Permet de t\u00e9l\u00e9charger le fichier pdf du programme GET /checkup R\u00e9cup\u00e8re les d\u00e9tails d'un bilan POST /check_up Permet d'ajouter un bilan POST /new_subscription Permet de renouveler un abonnement POST /new_card Permet de mettre \u00e0 jour la carte membre d'un client POST /cancel_subscription Permet d'annuler l'abonnement d'un client --- --- ---","title":"Les routes de l'application"},{"location":"documentation/#blueprints","text":"Avec l'utilisation des \" Flask Blueprints \", lors de l'initialisation de l'application, les modules sont ajout\u00e9s \u00e0 l'application \u00e0 l'aide de la m\u00e9thode register_blueprints . Dans le but de mettre en production l'application plus tard, cela va \u00eatre tr\u00e8s utile, car pour enlever toute la partie coach de l'application par exemple, il suffit de retirer le dossier 'coach' de la boucle for qui parcourt les modules.","title":"Blueprints"},{"location":"documentation/#client_1","text":"","title":"Client"},{"location":"documentation/#prochaines-sessions","text":"La page \"prochaines session\" de l'application a pour but d'afficher toutes les sessions \u00e0 venir pour le client. Cela permet au client d'avoir une vue d'ensemble sur les diff\u00e9rentes sessions qu'il a pr\u00e9vues avec son coach. Pour r\u00e9cup\u00e9rer toutes les prochaines sessions, j'utilise la m\u00e9thode get_next_session(userid) Elle se trouve, avec toutes les autres m\u00e9thodes utilis\u00e9es pour les routes client, dans le fichier client/utils.py . Je n'ai besoin que de l'id du client dont on veut r\u00e9cup\u00e9rer les sessions. Le tableau retourn\u00e9 contenant toutes les sessions est ensuite envoy\u00e9 \u00e0 la vue \u00e0 l'aide de la m\u00e9thode render_template()","title":"Prochaines sessions"},{"location":"documentation/#profil","text":"La page \"profil\" est une page qui est utilis\u00e9 pour les 2 types d'utilisateurs, seulement plus d'informations sont affich\u00e9es lorsque c'est un client qui est connect\u00e9. Cette page sert essentiellement \u00e0 modifier ses informations personnelles \u00e0 l'aide d'un formulaire. Beaucoup de donn\u00e9es sont r\u00e9cup\u00e9r\u00e9es pour tout afficher sur cette page. La modification des donn\u00e9es de l'utilisateur se fait \u00e0 l'aide du model SQLAlchemy User . Ce qui rend la t\u00e2che beaucoup plus simple, en modifiant les propri\u00e9t\u00e9s correspondant aux champs modifi\u00e9s on peut mettre \u00e0 jour toutes les valeurs. Il suffit d'effectuer un commit \u00e0 la fin pour valider les changements. Si l'utilisateur importe une nouvelle photo de profil, l'image est sauvegard\u00e9e localement avec un nom unique et ce nom est enregistr\u00e9 dans la base de donn\u00e9es. On peut voir ici que j'essaye de commit les changements effectu\u00e9s, je sauvegarde l'image import\u00e9e et si cela fonctionne le fichier \"profile.html\" est retourn\u00e9 avec la m\u00e9thode render_template() . Avec la m\u00e9thode flash() , je peux afficher un message pour confirmer \u00e0 l'utilisateur que la mise \u00e0 jour a fonctionn\u00e9 ou pas.","title":"Profil"},{"location":"documentation/#changement-de-mot-de-passe","text":"La page \"changement de mot de passe\" est \u00e9galement accessible par les 2 types d'utilisateurs, elle est directement reli\u00e9e \u00e0 la page profil. En pr\u00e9cisant l'instruction suivante dans le lien de r\u00e9f\u00e9rence d'un bouton ou d'un lien, on peut arriver directement sur cette page : {{ url_for('client_blueprint.change_password') }}` la m\u00e9thode url_for() permet d'obtenir l'URL qui redirige vers une route ou un blueprint en l'occurrence. Le changement de mot de passe s'effectue en pr\u00e9cisant son ancien mot de passe, le nouveau ainsi qu'une confirmation pour \u00e9viter les fautes de frappe. L'ancien mot de passe est ensuite v\u00e9rifi\u00e9 \u00e0 l'aide de la m\u00e9thode verify_pass() qui permet de comparer le mot de passe saisit avec celui hash\u00e9 en base de donn\u00e9es. Pour effectuer la v\u00e9rification, je prends les 64 premiers caract\u00e8res qui correspondent aux salt. Je hash ensuite le mot de passe saisit avec le m\u00eame salt puis je compare avec celui enregistr\u00e9 en base. Si l'ancien mot de passe est correctement renseign\u00e9, alors la propri\u00e9t\u00e9 password du model User est modifi\u00e9e en hashant le mot de passe \u00e0 l'aide de la m\u00e9thode hash_pass() . Pour hash\u00e9 le mot de passe, j'utilise l'algorithme \"SHA-512\" sur le mot de passe ainsi que le salt qui est g\u00e9n\u00e9r\u00e9. Un message est ensuite affich\u00e9 en fonction de la r\u00e9ussite de l'op\u00e9ration \u00e0 l'aide de la m\u00e9thode flash()","title":"Changement de mot de passe"},{"location":"documentation/#entrainements","text":"La page entrainements est la page qui permet au client de visionner l'ensemble des entrainements qu'il a effectu\u00e9s depuis son inscription. J'utilise la m\u00e9thode get_workouts() qui permet de r\u00e9cup\u00e9rer tous les entrainements d'un client et je les passe ensuite \u00e0 la vue avec la m\u00e9thode render_template() Les entrainements sont r\u00e9cup\u00e9r\u00e9s dans l'ordre par date d\u00e9croissante (le plus r\u00e9cent en premier).","title":"Entrainements"},{"location":"documentation/#entrainement","text":"La page \"entrainement\" est utilis\u00e9 uniquement pour afficher les d\u00e9tails d'un entrainement depuis la page \"entrainements\" d'un client. Les liens disponibles sur la page \"entrainements\" qui permettent la redirection sur la page \"entrainement\" affichant les d\u00e9tails de ce dernier sont g\u00e9n\u00e9r\u00e9s avec l'instruction : {{ url_for('client_blueprint.workout', Id=workout.id) }} En passant, un param\u00e8tre suppl\u00e9mentaire \u00e0 la m\u00e9thode url_for je peux passer des valeurs en param\u00e8tre. Je fais donc passer l'id de l'entrainement que je r\u00e9cup\u00e8re ensuite sur cette page entrainement pour aller chercher les donn\u00e9es correspondantes. J'utilise la m\u00e9thode get_workout_details() qui me permet d'aller chercher toutes les informations n\u00e9cessaires pour afficher les d\u00e9tails de l'entrainement en question. Les donn\u00e9es des entrainements sont r\u00e9cup\u00e9r\u00e9es avec l' API Polar Accesslink qui donne acc\u00e8s aux enregistrements des montres connect\u00e9s Polar.","title":"Entrainement"},{"location":"documentation/#ajout-de-review","text":"La page \"Ajout de review\" est un simple formulaire qui permet d'ajouter une review sur le coaching de mani\u00e8re g\u00e9n\u00e9rale ou sur un entrainement effectu\u00e9. Le type de review ajout\u00e9 est d\u00e9fini en fonction d'o\u00f9 le client va cliquer sur l'application. Les boutons redirigeant sur cette page poss\u00e8dent un param\u00e8tre type qui permet d'identifier les champs \u00e0 afficher ainsi que le type de review qui va \u00eatre ajout\u00e9. Il y a \u00e9galement un param\u00e8tre target qui est ensuite ins\u00e9r\u00e9 dans un input hidden repr\u00e9sentant l'id de la \"cible\" de cette review. Les reviews sur le coaching peuvent \u00eatre ajout\u00e9 n'importe quand, par contre, un entrainement ne peut poss\u00e9der qu'une seule review. Pour ajouter une review, j'utilise le model SQL Alchemy WorkoutReview pour les reviews d'entrainements et CoachingReview pour les reviews de coaching. Il suffit de renseigner les propri\u00e9t\u00e9s avec les champs renseigner, et d'effectuer un commit pour valider l'insertion. Exemple avec une review d'entrainement :","title":"Ajout de review"},{"location":"documentation/#review","text":"La page \"Review\" permet l'affichage d'une review que le client a ajout\u00e9. Les reviews ajout\u00e9s par le client sont list\u00e9s sur son profil, il peut donc acc\u00e9der aux d\u00e9tails de ces derni\u00e8res en cliquant dessus. \u00c0 nouveau, \u00e0 l'aide de la m\u00e9thode url_for je fais passer en param\u00e8tre l'id et le type de la review s\u00e9lectionn\u00e9. Cela permet la r\u00e9cup\u00e9ration des infos une fois sur cette page. Les d\u00e9tails sont r\u00e9cup\u00e9r\u00e9s \u00e0 l'aide de la m\u00e9thode get_review_details() et sont ensuite pass\u00e9s en param\u00e8tre \u00e0 la m\u00e9thode render_template() .","title":"Review"},{"location":"documentation/#bilan","text":"La page \"Bilan\" ressemble aux pages \"Review\" et \"Entrainement\" car elle ne sert qu'\u00e0 afficher les valeurs qui ont \u00e9t\u00e9 renseign\u00e9 lors d'un Bilan avec le coach. L'id du bilan est pass\u00e9 en param\u00e8tre GET comme pour les deux autres pages (Review et Entrainement). Une fois r\u00e9cup\u00e9r\u00e9, j'utilise la m\u00e9thode get_check_up() en donnant l'id du bilan en param\u00e8tre pour avoir toutes les donn\u00e9es et les passer ensuite en param\u00e8tre \u00e0 la m\u00e9thode render_template() qui les fera passer \u00e0 la vue","title":"Bilan"},{"location":"documentation/#coach_1","text":"","title":"Coach"},{"location":"documentation/#tableau-de-bord","text":"La page \"Tableau de bord\" permet d'afficher la prochaine session du coach ainsi que la liste de tous ses clients. Une v\u00e9rification est effectu\u00e9e au d\u00e9but de la route pour \u00e9viter qu'un client se retrouve sur cette page. La v\u00e9rification est effectu\u00e9e avec la m\u00e9thode is_coach() de l'objet User qui permet de v\u00e9rifier si l'utilisateur connect\u00e9 poss\u00e8de le role de coach. Si l'utilisateur est un coach, alors les infos du prochain client, la date de son dernier entrainement ainsi que la liste de tous les clients dont le coach a la charge sont r\u00e9cup\u00e9r\u00e9s et donn\u00e9s en param\u00e8tres \u00e0 la vue.","title":"Tableau de bord"},{"location":"documentation/#calendrier","text":"La page \"Calendrier\" permet d'afficher un agenda affichant toutes les sessions que le coach a enregistr\u00e9es. Il peut \u00e9galement en ajouter une avec le formulaire qui est disponible juste \u00e0 c\u00f4t\u00e9. Le calendrier est affich\u00e9 \u00e0 l'aide de la librairie JavaScript FullCalendar.io , il est initialis\u00e9 en JavaScript. Les \u00e9v\u00e9nements \u00e0 inscrire dans le calendrier doivent \u00eatre assign\u00e9 \u00e0 la propri\u00e9t\u00e9 events: de l'objet JavaScript FullCalendar.Calendar() . La m\u00e9thode get_session() est donc utilis\u00e9 pour r\u00e9cup\u00e9rer toutes les sessions enregistr\u00e9es pour le coach connect\u00e9 dans le bon format pour que les sessions soient interpr\u00e9t\u00e9s comme un \u00e9v\u00e9nement pour le calendrier. La m\u00e9thode r\u00e9cup\u00e8re toutes les sessions \u00e0 venir et les ajoutent dans un tableau sous la forme d'objets avec 3 propri\u00e9t\u00e9s { 'title': 'start': 'end': } Si le coach ajoute une session \u00e0 l'aide du formulaire, les valeurs des champs sont r\u00e9cup\u00e9r\u00e9s et utilis\u00e9s pour avoir le format d\u00e9sir\u00e9. Si le coach n'a pas de client \u00e0 charge, il ne sera pas en mesure de s\u00e9lectionner un client pour la session qu'il souhaite ajouter. S'il essaye, une erreur sera affich\u00e9e \u00e0 l'aide de la m\u00e9thode flash() . Le DateTime de fin est g\u00e9n\u00e9r\u00e9 automatiquement \u00e0 l'aide de la date et l'heure de d\u00e9but s\u00e9lectionn\u00e9 ainsi que la dur\u00e9e. Pour enregistrer sous le format DateTime , l'heure de la session est ajout\u00e9 \u00e0 la date. La session est ajout\u00e9e \u00e0 l'aide du model SQLAlchemy Session , l'ajout est valid\u00e9 avec un commit. Une fois la session ajout\u00e9e, un mail est envoy\u00e9 au client avec les informations de la session.","title":"Calendrier"},{"location":"documentation/#ajout-client","text":"La page \"Ajout client\" permet de cr\u00e9er un nouveau compte client et d'assigner son suivi au coach qui cr\u00e9er son compte. Cette page contient \u00e9galement une v\u00e9rification avec la m\u00e9thode is_coach() pour v\u00e9rifier que l'utilisateur sur cette page est bien un coach. L'input de type select pour s\u00e9lectionner le type d'abonnement souhait\u00e9 est g\u00e9n\u00e9r\u00e9 automatiquement, les diff\u00e9rents abonnements sont r\u00e9cup\u00e9r\u00e9s depuis la base de donn\u00e9es avec la m\u00e9thode get_all_subscription() . Pour ajouter le client dans la base de donn\u00e9es, j'utilise \u00e0 nouveau les mod\u00e8les SQLAlchemy , cette fois-ci plusieurs sont n\u00e9cessaires ( User , CoachedBy et Purchase ). Pour pouvoir effectuer l'insertion comme il faut, je commence par l'utilisateur puis j'utilise l'instruction : db.session.flush() qui me permet d'obtenir l'id de l'utilisateur qui va \u00eatre ins\u00e9r\u00e9 (utilis\u00e9 pour l'insertion avec les 2 autres mod\u00e8les). Une fois les 3 mod\u00e8les remplis et ajout\u00e9, j'effectue un commit pour valider les insertions. Une fois le commit effectu\u00e9, un mail est envoy\u00e9 au client pour l'informer de ses identifiants de connexion \u00e0 l'application. Le mot de passe est g\u00e9n\u00e9r\u00e9 automatiquement.","title":"Ajout client"},{"location":"documentation/#client_2","text":"La page \"Client\" permet aux coachs de visionner le profil d'un de leurs clients. Toutes les donn\u00e9es n\u00e9cessaires sont r\u00e9cup\u00e9r\u00e9s depuis la base de donn\u00e9es et envoyer \u00e0 la vue. On y retrouve \u00e9norm\u00e9ment de donn\u00e9es comme sur la page profil du client. Sur la template Jinja2, on retrouve \u00e9norm\u00e9ment de condition comme par exemple pour les programmes d'entrainements qui peuvent ne pas avoir \u00e9t\u00e9 import\u00e9 par le coach : {% if workoutProgram != None %} Cela permet d'afficher quand m\u00eame quelque chose m\u00eame s'il n'y a pas encore de valeurs qui a \u00e9t\u00e9 ajout\u00e9 en base.","title":"Client"},{"location":"documentation/#ajout-programme","text":"La page \"Ajout programme\" est \u00e9galement soumise \u00e0 une v\u00e9rification, pour \u00e9viter qu'un client arrive sur cette page. Pour ajouter un programme, il suffit de s\u00e9lectionner le type et d'ajouter le pdf que l'on souhaite importer. Le pdf est lu avec la m\u00e9thode python read() qui permet de retourner les bytes du fichier. Ils sont ensuite enregistr\u00e9s dans la base de donn\u00e9es dans un champ LONGBLOB . Une fois le programme enregistr\u00e9, un mail est envoy\u00e9 au client pour le notifier que son nouveau programme est disponible. Pour t\u00e9l\u00e9charger le programme, j'utilise la route \"/program\" et je passe en param\u00e8tre GET l'id du programme. La route retourne la m\u00e9thode python send_file() qui permet de t\u00e9l\u00e9charger un fichier. J'utilise \u00e9galement l'objet BytesIO qui permet d'\u00e9crire le fichier \u00e0 partir des bytes qui ont \u00e9t\u00e9 enregistr\u00e9 en base. L'ajout de programme devait se faire par import de fichier Excel sous format uniformis\u00e9 \u00e0 la base. Apr\u00e8s plusieurs r\u00e9flexions, j'ai d\u00e9cid\u00e9 de changer cela en acceptant uniquement les pdf. Cela permet plus de libert\u00e9 aux coachs et \u00e9vitera de \"casser\" leurs habitudes s'ils utilisent l'application. Les coachs peuvent garder leurs m\u00e9thodes de rendu pour leurs programmes et simplement importer les pdfs sur l'application.","title":"Ajout programme"},{"location":"documentation/#ajout-bilan","text":"La page \"Ajout bilan\" ne contient qu'un formulaire pour ajouter les valeurs du bilan. Les valeurs demand\u00e9es sont toutes r\u00e9cup\u00e9rables \u00e0 l'aide d'une balance connect\u00e9e. L'id, le nom, pr\u00e9nom et l'\u00e2ge du client sont r\u00e9cup\u00e9r\u00e9s et ins\u00e9r\u00e9s automatiquement et sont statiques, le coach ne peut pas modifier ses informations. L'\u00e2ge du client est calcul\u00e9 en fonction de sa date de naissance et la date d'aujourd'hui.","title":"Ajout Bilan"},{"location":"documentation/#modification-de-carte","text":"La modification de carte de membre s'effectue depuis la page client . Une fois le bouton cliqu\u00e9, la m\u00e9thode get_card_id() est appel\u00e9e. Elle va lire \u00e0 l'aide du Lecteur NFC une carte que le coach va scanner. Un timeout de 30 secondes est d\u00e9fini pour \u00e9viter d'attendre trop longtemps, si les 30 secondes sont \u00e9coul\u00e9es et que le coach n'a pas pr\u00e9sent\u00e9 de carte alors une erreur flash() est affich\u00e9e. La m\u00e9thode get_card_id() utilise la librairie python smartcard qui permet d'utiliser le lecteur. Si le lecteur d\u00e9tecte une carte, alors une connexion est \u00e9tablie. \u00c0 l'aide de la transmission, je peux r\u00e9cup\u00e9rer l'UID de la carte sous le format : [12, 123, 89, 09] Je n'ai plus qu'\u00e0 modifier ce format en string pour pouvoir l'ins\u00e9rer en base plus tard.","title":"Modification de carte"},{"location":"documentation/#fitjourney-cards-checker","text":"","title":"FitJourney cards checker"},{"location":"documentation/#authentification-a-lapi","text":"Comme expliqu\u00e9 plus haut dans la section Entrainement , les entrainements sont r\u00e9cup\u00e9r\u00e9s \u00e0 l'aide de l'API Polar. Pour s'authentifier envers l'API, j'utilise l'objet Accesslink qui utilise l'objet OAuth2Client qui est fourni par Polar afin de s'authentifier en utilisant le protocole OAuth2. Les identifiants sont quant \u00e0 eux r\u00e9cup\u00e9r\u00e9s du fichier config.yml . Si les identifiants ne sont pas dans ce fichier, il faut alors ex\u00e9cuter le script authorization.py qui va se charger de g\u00e9n\u00e9rer et d'\u00e9crire les identifiants et le token d'acc\u00e8s dans le fichier config.yml .","title":"Authentification \u00e0 l'API"},{"location":"documentation/#utilisation-de-lapi","text":"Dans le dossier endpoints/ on retrouve les objets python qui permettent d'effectuer les requ\u00eates \u00e0 l'API. La principale requ\u00eate que j'utilise est celle des \"training data\". C'est cette requ\u00eate qui permet de r\u00e9cup\u00e9rer les informations de l'entrainement enregistr\u00e9 avec les montres connect\u00e9es. Les donn\u00e9es sont r\u00e9cup\u00e9r\u00e9s en format JSON, voici un exemple de retour de cette requ\u00eate : Les donn\u00e9es r\u00e9cup\u00e9r\u00e9es sont pour la plupart dans le bon format, la dur\u00e9e de l'entrainement est malheureusement dans un format tr\u00e8s sp\u00e9cial. La dur\u00e9e est repr\u00e9sent\u00e9e par un string commen\u00e7ant par \"PT\" et est suivie par les valeurs (heures, minutes, secondes). Chaque valeur est suivie d'une lettre pour les s\u00e9parer : La valeur pour les heures est suivie du caract\u00e8re 'H' La valeur pour les minutes est suivie du caract\u00e8re 'M' La valeur pour les secondes est suivie du caract\u00e8re 'S' Mais s'il n'y a pas de valeur pour les heures par exemple, alors le caract\u00e8re 'H' ne figurera pas dans le string. J'ai donc effectu\u00e9 3 conditions pour pouvoir bien formater dans chaque cas le string avec la m\u00e9thode strptime de la librairie datetime J'ins\u00e8re ensuite les donn\u00e9es voulues dans la base avec la librairie mysql.connector .","title":"Utilisation de l'API"},{"location":"documentation/#tests","text":"","title":"Tests"},{"location":"documentation/#tests-unitaires","text":"Aucun test unitaire n'a \u00e9t\u00e9 r\u00e9alis\u00e9 pour l'application. Cependant, toutes les fonctionnalit\u00e9s de l'application ont \u00e9t\u00e9 test\u00e9es \"manuellement\" avec une partie de d\u00e9bogage. Les 2 parties de mon projet \u00e9tant d\u00e9velopp\u00e9 majoritairement en Python, il serait int\u00e9ressant d'ajouter des tests unitaires \u00e0 l'aide du framework Pytest par exemple. Cela serait tr\u00e8s utile d'avoir des tests unitaires dans le but de mettre en production l'application.","title":"Tests unitaires"},{"location":"documentation/#tests-utilisateurs","text":"","title":"Tests utilisateurs"},{"location":"documentation/#fitjourney-web-application","text":"","title":"FitJourney Web application"},{"location":"documentation/#en-tant-que-coach_1","text":"Action Valeur(s) Attente(s) R\u00e9sultat Cr\u00e9ation d'un compte avec 2 mots de passes diff\u00e9rents Name : \"Thomas\"; Surname : \"Fujise\" ; Email : \"thomas.fjs@eduge.ch\"; Birthdate : 15.09.2000; Password : \"Super2012\"; Confirm Password : \"Super\"; Un message d'erreur \"Passwords Must Match!\" s'affiche. OK Cr\u00e9ation d'un compte coach Name : \"Thomas\"; Surname : \"Fujise\" ; Email : \"thomas.fjs@eduge.ch\"; Birthdate : 15.09.2000; Password : \"Super2012\"; Confirm Password : \"Super2012\"; Redirection sur la page \"login\" et un message apparait pour confirmer la cr\u00e9ation OK Cr\u00e9ation d'un compte avec un email existant Name : \"Thomas\"; Surname : \"Fujise\" ; Email : \"thomas.fjs@eduge.ch\"; Birthdate : 15.09.2000; Password : \"Super2012\"; Confirm Password : \"Super2012\"; Message d'erreur \"Email already registered\" OK Connexion avec le compte et un mot de passe erron\u00e9 Email : \"thomas.fjs@eduge.ch\"; Password : \"Super\"; Un message d'erreur apparait OK Connexion avec le compte Email : \"thomas.fjs@eduge.ch\"; Password : \"Super2012\"; Redirection sur la page tableau de bord OK Clique sur le bouton \"Add new client\" / Redirection sur le formulaire d'ajout d'un nouveau client OK Ajout d'un nouveau client Name : \"John\"; Surname : \"Doe\" ; Email : \"thomasfjs@gmail.com\"; Birthdate : 12.10.2001; Height : 178; Starting date : 08.06.2022 Subscription type : \"1 Month\" Un message de confirmation est affich\u00e9, le client est ajout\u00e9 \u00e0 la liste des clients et un email est envoy\u00e9 \u00e0 l'email renseign\u00e9 contenant les identifiants du compte client OK Clique sur le nom d'un client dans la liste / Redirection sur la page profil du client s\u00e9l\u00e9ctionn\u00e9 OK Ajout d'une carte de membre Carte utilis\u00e9 : 832141011 Une fois la carte scann\u00e9, un message de confirmation est affich\u00e9 et le num\u00e9ro 832141011 figure dans le champ \"Card ID\" OK Pas de carte scann\u00e9e pendant >30s / Un message d'erreur \"No card detected\" apparait OK Clique sur le bouton \"Upload new program\" / Redirection vers le formulaire d'ajout de programme OK Ajout d'un programme Type : \"Workout\" File : \"workout.pdf Un message de confirmation apparait, on peut voir un bouton \"Workout\" dans la section \"Programs\" apparaitre et un mail est envoy\u00e9 \u00e0 l'email du client pour le notifier. OK Clique sur le bouton \"Check up\" / Redirection vers la page d'ajout d'un nouveau bilan OK Ajout d'un bilan Weight : 80.2 Height : 178 Water : 41.6 Protein : 10 Muscle Mass % : 55 Body Fat % : 41.7 Bone mass % : 3.3 BMR : 1336.0 Muscle Mass (kg) : 45.9 Body fat (kg) : 34.8 Visceral fat (kg) : 10 Bone mass (kg) : 2.8 Lean body mass (kg) : 48.7 Body age : 43 BMI : 31.4 Un message confirmation est affich\u00e9, on peut voir le bilan s'ajouter sur la droite dans la section \"Check up\" OK Clique sur le bouton \"Details\" \u00e0 c\u00f4t\u00e9 d'un bilan / Redirection sur la page de d\u00e9tails du bilan OK Renouvellement d'abonnement Starting date : 10.06.2022 Subscription type : \"3 Months\" Un message de confirmation est affich\u00e9, la date de fin d'abonnement a \u00e9t\u00e9 modifier dans le champ \"Subscription Until\" OK Annulation d'un abonnement / Le dernier abonnement souscrit est supprim\u00e9, la date de fin d'abonnement redevient celle du pr\u00e9c\u00e9dent abonnement OK Clique sur le bouton \"Profile\" dans la barre de navigation / Redirection sur la page profil du coach OK Modification profil coach Last name : \"Fuji\" Address : \"Chemin des curiades 35\" City : \"Bernex\" Country : \"Switzerland\" Postal code : \"1233\" Les modifications sont effectu\u00e9es et un message de confirmation apparait. OK Clique sur le bouton \"Calendar\" dans la barre de navigation / Redirection vers l'agenda du coach ainsi que le formulaire d'ajout d'une nouvelle session OK Inscription d'une session avec un client Client : \"John Doe\" Date : 10.06.2022 Time for the session : 10:00 Type : \"Weightlifting\" Duration (h) : 1 Un message de confirmation apparait, la session a \u00e9t\u00e9 ajout\u00e9e au calendrier OK / / La prochaine session est visible sur le tableau de bord avec les d\u00e9tails de la session OK","title":"En tant que coach :"},{"location":"documentation/#en-tant-que-client_1","text":"Action Valeur(s) Attente(s) R\u00e9sultat Connexion avec les identifiants fournit par mail Email : \"thomas.fjs@eduge.ch\"; Password : \"John123\"; Redirection sur la page d'accueil client OK / / Les prochaines sessions sont affich\u00e9es sur la page d'accueil client OK Clique sur le bouton \"Profile\" dans la barre de navigation / Redirection sur la page profil OK Modification du profil Birthdate : 13.10.2001 Profile picture : \"logo.jpg\" Country : Switzerland Un message de confirmation apparait, la photo de profil et les informations sont modifi\u00e9s OK Clique sur le bouton \"change password\" / Redirection vers le formulaire de changement de mot de passe OK Changement de mot de passe avec 2 mots de passe diff\u00e9rents Old password : \"John123\" New password : \"Super\" Confirm new password : \"Super2012\" Un message d'erreur \"Passwords must match\" apparait OK Changement de mot de passe Old password : \"John123\" New password : \"Super2012\" Confirm new password : \"Super2012\" Redirection sur la page profil et message de confirmation apparait OK T\u00e9l\u00e9chargement du programme / En cliquant sur le bouton \"Workout program\" le pdf est t\u00e9l\u00e9charg\u00e9 OK Clique sur le bouton \"Add new review\" / Redirection vers le formulaire d'ajout de review sur le coaching OK Ajout d'une review coaching Satisfaction : 8 Support : 8 Disponibility : 10 Advice : 9 Comment : \"This coach is super !\" Redirection vers la page profil, un message de confirmation d'ajout apparait et on peut voir la review dans la section \"Reports\" en bas \u00e0 droite OK Clique sur le bouton \"Details\" \u00e0 c\u00f4t\u00e9 d'une review / Redirection sur la page de d\u00e9tails de la review OK Clique sur le bouton \"Workouts\" dans la barre de navigation / Redirection sur la page affichant tous les entrainements effectu\u00e9s OK Clique sur le bouton \"Details\" \u00e0 c\u00f4t\u00e9 d'un entrainement / Redirection sur la page de d\u00e9tail de l'entrainement OK Clique sur le bouton \"Add review\" sur la page de l'entrainement / Redirection sur la page pour ajouter une review sur l'entrainement OK Ajout d'une review d'entrainement Difficulty : 7 Feel : 8 Fatigue : 6 Energy: 8 Comment : \"This was a great workout\" Redirection sur la page listant tous les entrainements effectu\u00e9s OK Rajout d'une review sur le m\u00eame entrainement Difficulty : 7 Feel : 8 Fatigue : 6 Energy: 8 Comment : \"This was a great workout\" Redirection sur la page listant tous les entrainements avec un message d'erreur \"Workout already reviewed\" OK Clique sur le bouton \"Logout\" dans la barre de navigation / L'utilisateur est d\u00e9connect\u00e9 et redirig\u00e9 vers la page de connexion OK","title":"En tant que client"},{"location":"documentation/#fitjourney-card-checker","text":"Action Valeur(s) Attente(s) R\u00e9sultat Scan d'une carte inconnue Carte utilis\u00e9e : 5874146165 Message s'affiche dans la console : \"Unrecognized card\" OK Scan d'une carte de membre assign\u00e9e en arrivant Carte utilis\u00e9e : 832141011 La carte est reconnue et un message de bienvenue avec le nom du client est affich\u00e9 dans la console : \"Welcome John Doe\" OK Scan de la m\u00eame carte de membre pour la sortie Carte utilis\u00e9e : 832141011 La carte est reconnue et un message est affich\u00e9 en console : \"Goodbye John Doe\" OK","title":"FitJourney card checker"},{"location":"documentation/#conclusion","text":"","title":"Conclusion"},{"location":"documentation/#points-positifs","text":"Globalement, j'ai pu tirer pas mal de points positifs concernant ce travail de dipl\u00f4me. Premi\u00e8rement, le fait de travailler sur un projet de cette ampleur. Lors de ma formation en tant que Technicien ES, j'ai que tr\u00e8s rarement eu l'occasion de travailler sur des projets similaires. L'exp\u00e9rience acquise lors d'un projet comme ceci ne peut \u00eatre que positif pour le futur. Deuxi\u00e8mement, le fait d'apprendre et d'am\u00e9liorer ses connaissances sur des nouvelles technologies est un point tr\u00e8s positif. Je suis beaucoup plus \u00e0 l'aise avec Python Flask par exemple, ce qui n'\u00e9tait pas forc\u00e9ment le cas au d\u00e9but du projet. Pour terminer, je ressors beaucoup de positif des \u00e9tapes suivies tout le long du projet. J'ai tr\u00e8s rarement suivi toutes les \u00e9tapes dans l'ordre comme je l'ai fait pour ce projet, par exemple le fait de commencer par effectuer des maquettes d'interfaces ou encore faire un MCD au pr\u00e9alable. Ce sont tous des longs points a effectu\u00e9 au d\u00e9but, mais s'ils sont bien faits, cela permet un gain de temps cons\u00e9quent. Il y a \u00e9galement le fait de poser mes r\u00e9flexions dans le journal de bord, cela m'a permis d'identifier des probl\u00e8mes avant de tomber dessus.","title":"Points positifs"},{"location":"documentation/#problemes-rencontres","text":"","title":"Probl\u00e8mes rencontr\u00e9s"},{"location":"documentation/#mise-en-place-de-la-structure-du-projet","text":"La mise en place de la structure du projet n'\u00e9tait pas r\u00e9ellement un gros probl\u00e8me, mais j'ai vraiment pris beaucoup de temps pour l'effectuer comme il faut. N'\u00e9tant pas parfaitement \u00e0 l'aise avec Python Flask, je souhaitais vraiment avoir une tr\u00e8s bonne structure de projet. J'ai d\u00e9couvert les \"Flask Blueprint\" qui m'ont beaucoup aid\u00e9 \u00e0 effectuer une structure propre et d\u00e9coup\u00e9e.","title":"Mise en place de la structure du projet"},{"location":"documentation/#oublie-de-certains-points-tres-importants","text":"Un des gros probl\u00e8mes que j'ai pu rencontrer est que je suis malheureusement pass\u00e9 \u00e0 c\u00f4t\u00e9 de plusieurs parties tr\u00e8s importantes dans le m\u00e9tier de coach sportif. Cela a engendr\u00e9 de longues r\u00e9flexions pour l'impl\u00e9mentation ainsi que l'ajout de nombreuses t\u00e2ches \"n\u00e9cessaires\" ainsi que de nombreux ajustements de la base de donn\u00e9es. C'est pour cela que dans le planning effectif , on peut retrouver beaucoup plus de t\u00e2ches que dans le planning pr\u00e9visionnel .","title":"Oublie de certains points tr\u00e8s importants"},{"location":"documentation/#compte-google","text":"Un autre probl\u00e8me que j'ai rencontr\u00e9 sur la fin de ce travail de dipl\u00f4me est que Google ne prend plus en charge les applications \"moins s\u00e9curis\u00e9es\" depuis le 30 mai. Cette d\u00e9cision a \u00e9t\u00e9 prise pour am\u00e9liorer leurs normes de s\u00e9curit\u00e9. Le probl\u00e8me est que j'utilisais cette fonctionnalit\u00e9 pour utiliser le compte Google fitjourney pour envoyer les mails. D\u00e9sormais, pour utiliser un compte Google pour envoyer des mails, il faut utiliser leurs API pour r\u00e9cup\u00e9rer une cl\u00e9 qui permet l'acc\u00e8s. Je n'avais malheureusement pas le temps d'impl\u00e9menter cette solution avec le temps qu'il me restait. C'est pour cela que j'ai utilis\u00e9 MailTrap un service 'sandbox' pour email comme solution temporaire.","title":"Compte Google"},{"location":"documentation/#ameliorations-possibles","text":"J'ai retenu plusieurs points au niveau des am\u00e9liorations possibles et envisageables pour la suite du projet. Premi\u00e8rement, cela serait utile d'ajouter la possibilit\u00e9 de transf\u00e9rer la prise en charge d'un client \u00e0 un autre coach. Cette fonctionnalit\u00e9 peut \u00eatre n\u00e9cessaire dans plusieurs cas, comme par exemple si plusieurs coachs travaillent dans la m\u00eame salle et qu'un coach est d\u00e9bord\u00e9, il pourrait assigner des clients \u00e0 son coll\u00e8gue. Dans le cas o\u00f9 un client change d'objectif et qu'un autre coach est plus adapt\u00e9 \u00e0 ses besoins aussi. Un deuxi\u00e8me point qui me parait tr\u00e8s int\u00e9ressant serait d'ajouter la possibilit\u00e9 de modifier ou supprimer une session. En cas d'impr\u00e9vu, le coach ne peut pas supprimer ou modifier la date d'une session qu'il a enregistr\u00e9 avec un client. Un autre point qu'il faudrait rajouter serait l'ajout des photos du client lors de bilan. Les champs sont d\u00e9j\u00e0 pr\u00e9vus dans la base de donn\u00e9es, il ne manque que les inputs dans le formulaire de bilan. Il y a \u00e9galement les donn\u00e9es d'entrainements qui sont actuellement r\u00e9cup\u00e9r\u00e9es avec l'API Polar, cela serait int\u00e9ressant d'ajouter d'autre montre connect\u00e9e (Apple Watch, FitBit, Garmin, etc.). M\u00eame si Polar est une marque tr\u00e8s utilis\u00e9e dans le milieu, cela reste limitant pour les utilisateurs qui ne poss\u00e8dent pas d'appareils Polar. Dans le but de mettre en production l'application, cela serait tr\u00e8s int\u00e9ressant de l'adapter pour t\u00e9l\u00e9phone mobile. Il faudrait \u00e9galement s\u00e9parer les 2 versions de l'application (Coach/Client) qui n'en font qu'une pour l'instant. Comme mentionn\u00e9 plus haut, les blueprints Flask permettent d'effectuer cela sans trop de soucis. La derni\u00e8re am\u00e9lioration serait de pouvoir s\u00e9lectionner les valeurs utilis\u00e9es dans les graphiques montrant l'\u00e9volution du poids sur la page profil du client. Cela serait tr\u00e8s utile pour le coach et m\u00eame pour le client d'avoir acc\u00e8s \u00e0 une courbe montrant l'\u00e9volution d'autres donn\u00e9es comme la masse graisseuse ou musculaire.","title":"Am\u00e9liorations possibles"},{"location":"documentation/#bilan-personnel","text":"Globalement, je suis tr\u00e8s satisfait du travail rendu au bout de ces 9 semaines. Ce projet me tenait particuli\u00e8rement \u00e0 c\u0153ur et je suis content de l'avancement de ce dernier. En travaillant pendant 9 semaines le projet a bien \u00e9volu\u00e9, beaucoup de fonctionnalit\u00e9s sont venus renforcer l'id\u00e9e de d\u00e9part et rendre cette application de plus en plus compl\u00e8te. J'ai pu prendre en main de nouvelles technologies comme Python Flask que j'ai vraiment appr\u00e9ci\u00e9. J'ai \u00e9galement appris \u00e0 utiliser les lecteurs RFID ce que j'ai trouv\u00e9 tr\u00e8s int\u00e9ressant, malgr\u00e9 une documentation tr\u00e8s archa\u00efque de la librairie pyscard qui me permet d'utiliser les lecteurs en Python.","title":"Bilan personnel"},{"location":"documentation/#sources","text":"Polar Flow : https://flow.polar.com/ Polar API : https://www.polar.com/accesslink-api/ Python Flask : https://flask.palletsprojects.com/en/2.1.x/ FullCalendar : https://fullcalendar.io/ Flask-Mail : https://pythonhosted.org/Flask-Mail/ Flask-Login : https://flask-login.readthedocs.io/en/latest/ SQLAlchemy : https://www.sqlalchemy.org/ Chart.js : https://www.chartjs.org/ LucidCharts : https://www.lucidchart.com/ Figma : https://www.figma.com/ Pyscard : https://pyscard.sourceforge.io/ Argon Design System : https://demos.creative-tim.com/argon-design-system/docs/getting-started/overview.html Python : https://www.python.org/ MailTrap : https://mailtrap.io/ Ray.so : https://ray.so/","title":"Sources"},{"location":"logbook/","text":"Journal de bord - Thomas Fujise Lundi, 04 Avril 2022 Premier jour du travail de dipl\u00f4me, il faudrait r\u00e9ussir \u00e0 mettre en place l'environnement de travail aujourd'hui. Suite \u00e0 la pr\u00e9sentation du d\u00e9roulement du TD, je change de salle pour m'installer dans la salle \u00e0 c\u00f4t\u00e9. Je vais prendre contact avec M. Jossi, qui est responsable du suivi de mon projet, pour connaitre ses exigences en ce d\u00e9but de projet. Je commence \u00e0 lister les backlogs identifiables \u00e0 ce stade sur un Trello. Je r\u00e9alise en parral\u00e8le le planning pr\u00e9visionnel sur Excel. La journ\u00e9e se termine un peu plus t\u00f4t (vers 15h) car nous avons une visite \u00e0 l'HEPIA. Mardi, 05 Avril 2022 Deuxi\u00e8me jour du travail de dipl\u00f4me, aujourd'hui il faut que j'avance un maximum sur le planning pr\u00e9visionnel et l'identification des backlogs. J'ai rajout\u00e9 les difficult\u00e9s, la priorit\u00e9 et les d\u00e9pendances sur les t\u00e2ches dans le Trello. Cela me permet de mieux m'organiser dans l'ex\u00e9cution de tous les backlogs. M. Garcia est venu vers moi pour d\u00e9finir le nom de mon projet (je l'avais appel\u00e9 \"CoachingTools\" par d\u00e9faut), j'ai finalement d\u00e9cid\u00e9 de nommer mon projet \"FitJourney\". Je vais terminer de d\u00e9finir les backlogs avant la fin de la journ\u00e9e. Mercredi, 06 Avril 2022 Aujourd'hui, je vais modifier encore quelques d\u00e9tails sur mon planning pr\u00e9visionnel avant qu'il soit termin\u00e9. Le planning pr\u00e9visionnel est donc termin\u00e9 ainsi que l'identification des backlogs (du moins ceux identifiables \u00e0 ce stade). Je vais commencer le maquettage des interfaces avec Figma. Pour les maquettes je vais essayer de faire quelque chose d'assez simple, pour \u00e9viter de prendre trop de temps sur cette t\u00e2che. Je n'avais pas beaucoup utilis\u00e9 Figma auparavant mais j'ai r\u00e9ussi \u00e0 bien prendre l'outil en main durant la matin\u00e9e. J'ai pu terminer d\u00e9j\u00e0 quelques maquettes (Profil, Login, Register) et bient\u00f4t celle du tableau de bord pour coach. J'ai pu avancer sur les maquettes, il ne me manque plus que la maquette de la page pour cr\u00e9er une s\u00e9ance avec un coach. J'ai pris \u00e9tonnamment beaucoup moins de temps que pr\u00e9vu pour r\u00e9aliser les maquettes. Je vais donc pouvoir tr\u00e8s bient\u00f4t commencer \u00e0 coder. RAPPEL : Il faut que je commence la documentation demain pour d\u00e9j\u00e0 documenter les maquettes que j'ai r\u00e9alis\u00e9es. Jeudi, 07 Avril 2022 Aujourd'hui, je vais terminer les maquettes et commencer la documentation technique. Je vais documenter d\u00e9j\u00e0 toutes les maquettes que j'ai r\u00e9alis\u00e9 pour ne pas avoir \u00e0 le faire plus tard. J'ai pu terminer les maquettes avant la fin de la matin\u00e9e. Il faut maintenant que je cr\u00e9er la structure de la documentation technique, je pourrai ensuite commencer \u00e0 documenter les maquettes que j'ai r\u00e9alis\u00e9. Suite \u00e0 une discussion avec un ami coach, j'ai d\u00e9couvert l'existence d'une solution similaire \u00e0 mon projet Inithy . Inithy propose globalement les m\u00eames fonctionnalit\u00e9s que FitJourney \u00e0 l'exception que leurs application est orient\u00e9 coaching \u00e0 distance l\u00e0 ou moi je m'oriente plus sur le coaching en salle (d'ou les cartes de membres RFID). Inithy est toujours au stade de d\u00e9mo, il faut les contacter pour avoir un acc\u00e8s \u00e0 leurs application qui n'est pas encore ouvert \u00e0 tous. Je vais leurs envoyer une demande pour essayer d'avoir acc\u00e8s \u00e0 leurs application et pouvoir analyser leurs application un peu plus en d\u00e9tail. J'ai pu commnecer la documentation des maquettes que j'ai r\u00e9alis\u00e9. J'ai eu une r\u00e9flexion sur l'enregistrement d'un nouveau coach, j'envisage deux cas possible : Soit l'application est d\u00e9livr\u00e9 avec un compte coach(admin) et le formulaire d'enregistrement n'est disponible que lorsqu'on est authentifi\u00e9 en tant que coach(admin) (C'est le coach qui rempli le formulaire pour les nouveaux clients) Soit rajouter un champ lors de l'inscription avec un code pour cr\u00e9er un novueau compte coach. Vendredi, 08 Avril 2022 Fin de la premi\u00e8re semaine sur ce travail de dipl\u00f4me, j'ai pu commencer la documentation et documenter les maquettes que j'ai r\u00e9alis\u00e9. Suite \u00e0 ma r\u00e9flexion sur l'enregistrement d'un nouveau coach, j'ai d\u00e9cid\u00e9 de simplement rajouter une option sur le formulaire d'enregistrement pour cr\u00e9er un compte coach. Si une personne venait \u00e0 cr\u00e9er un compte coach sans l'\u00eatre ce ne serait pas tr\u00e8s d\u00e9rangeant car un coach n'a acc\u00e8s qu'aux comptes des clients qu'il suit et pour suivre un client il faut que le client confirme de son c\u00f4t\u00e9. Pour un client 2 mani\u00e8res d'avoir un compte : Par le formulaire d'enregistrement au pr\u00e9alable, le coach n'aura qu'a s\u00e9l\u00e9ctionner le profile client lors de la prise en charge. Par le coach (un coach peut cr\u00e9er un compte lors de l'ajout d'une prise en charge d'un client, le compte sera cr\u00e9er avec les infos basiques qui seront demand\u00e9es (Nom, pr\u00e9nom, date de naissance, adresse) et un mot de passe est g\u00e9n\u00e9r\u00e9 pour permettre au client de se connecter plus tard) J'ai ajout\u00e9 la structure de l'application et initialis\u00e9 les blueprints. (Les blueprints permettent de s\u00e9parer l'application en plusieurs modules qui sont ensuite import\u00e9 au m\u00eame endroit) J'ai cr\u00e9er un fichier de config qui permet d'avoir 2 mode : Debug Production Qui permet d'avoir des param\u00e8tres diff\u00e9rents. J'ai \u00e9galement ajout\u00e9 un fichier run qui permet de lancer l'application. Il charge la configuration correspondant au mode actuel (Debug/Production) et run l'application Flask. Lundi, 11 Avril 2022 D\u00e9but de la deuxi\u00e8me semaine du travail de dipl\u00f4me, aujourd'hui je vais commencer mes pages HTML. Je pense que cela risque de prendre un peu de temps mais en tout cas les maquettes que j'ai r\u00e9alis\u00e9 vont me faire gagner pas mal de temps. J'ai r\u00e9ussi \u00e0 cr\u00e9er une structure de base pour les fichiers html. J'ai d\u00e9cid\u00e9 d'utiliser Sneat qui est un th\u00e8me css open-source publi\u00e9 par ThemeSelection sous licence MIT. J'ai ajout\u00e9 un fichier HTML pour les liens CSS qui sera inclus dans toutes mes pages. M. Mar\u00e9chal est venu voir l'avancer du projet car il va superviser mon travail de dipl\u00f4me de \"loin\". M. Jossi reste mon suiveur principal. M. Mar\u00e9chal m'a conseill\u00e9 de faire un diagramme explicatif du fonctionnement de l'application. J'ai ajout\u00e9 la route par d\u00e9faut pour pouvoir tester une page index avec le css (pour v\u00e9rifier que tout marche bien). Pour l'instant, je n'ai pas de probl\u00e8me tout \u00e0 l'air de fonctionner comme il faut. J'ai fait une class \"prototype\" Users avec SQLAlchemy pour emp\u00eacher des erreurs bloquantes avec Flask-Login. Flask-Login est une librairie qui permet de g\u00e9rer les sessions utilisateurs pour Flask. (Flask-Login g\u00e8re les connexions, d\u00e9connexions et garde la session utilisateur pour savoir l'utilisateur connect\u00e9 ou qui vient de se d\u00e9connecter) J'ai maintenant une page index qui peut afficher des composants \u00e0 l'aide du th\u00e8me CSS Sneat. Demain je poursuivrai la cr\u00e9ation de mes pages HTML et il faut \u00e9galement que je commence \u00e0 rajouter des \u00e9l\u00e9ments dans la documentation Ne pas oublier d'avancer la documentation Mardi, 12 Avril 2022 Aujourd'hui je vais essayer de terminer la partie authentification de l'application (Login/Register). J'utilise FlaskForm pour cr\u00e9er mes formulaires et je pense utiliser Mashmallow pour valider les champs en relation avec la BD (Je regarde quelques exemples d'utilisation avec SQLAlchemy : Exemple ). Il faut \u00e9galement que je fasse le diagramme qui m'a \u00e9t\u00e9 conseill\u00e9 par M.Mar\u00e9chal pour la description du fonctionnement de l'application. Pour la s\u00e9curit\u00e9 des mots de passe j'ai d\u00e9j\u00e0 rajout\u00e9 2 m\u00e9thodes pour permettre de hasher et de v\u00e9rifier les mots de passe. J'utilise la librairie Python hashlib qui me permet d'hasher les mots de passe avec un salt. Pour \u00e9viter d'enregistrer le salt en base, le salt est hash\u00e9 en sha256 et est plac\u00e9 avant le mot de passe dans la chaine. Comme un sha256 a toujours 64 caract\u00e8res, pour v\u00e9rifier le mot de passe je saute les 64 premiers caract\u00e8res de la chaine pour pouvoir comparer avec la saisie de l'utilisateur. J'ai pu faire un diagramme explicatif des diff\u00e9rents processus lors de l'utilisation de mon application en fonction de notre r\u00f4le (Client, coach) Image J'ai \u00e9galement termin\u00e9 le login (le register ne devrait pas prendre beaucoup de temps). J'ai eu quelques soucis pour inclure les formulaires avec FlaskForm (avec les imports python). J'ai ajout\u00e9 une navbar pour mes pages qui servira pour la navigation dans l'application. J'ai juste encore quelques soucis avec le css mais ce n'est pas du tout prioritaire pour le moment. J'ai regard\u00e9 pour utiliser un outil de g\u00e9n\u00e9ration de documentations, je pense utiliser Pdoc qui \u00e0 l'air assez complet et qui permet de g\u00e9n\u00e9rer la documentation sur les librairies inclues dans le projet. Mercredi, 13 Avril 2022 Dernier jour avant les vacances de p\u00e2ques, j'essaye d'int\u00e9grer pdoc \u00e0 mon projet mais lorsque je lance la commande pour g\u00e9n\u00e9rer le doc j'obtiens une erreur. Il n'arrive pas \u00e0 trouver apps qui est le dossier principal. J'ai pris un peu de retard par rapport \u00e0 ma planification initiale mais j'ai avanc\u00e9 sur des points que j'\u00e9tais cens\u00e9 effectuer plus tard dans le projet donc au final je n'ai pas beaucoup de retard. Je vais juste terminer encore ma page register qui va de pair avec la page Login. Il faudra ensuite que je commence \u00e0 documenter tous le back-end que j'ai d\u00e9j\u00e0 effectu\u00e9. Je pourrai ensuite commencer \u00e0 travailler sur la base de donn\u00e9es car pour le moment j'utilisais une base de donn\u00e9es temporaire pour tester mon login. En faisant des tests sur le login je me rends compte que j'ai une erreur qui s'affiche lors de la connexion. Lorsque j'effectue la requ\u00eate pour voir si le mail que l'utlisateur a saisit existe je ne rencontre aucune erreur si le mail ins\u00e9r\u00e9 n'est pas dans la base mais lorsque le mail rentr\u00e9 se trouve dans la base de donn\u00e9es alors une erreur s'affiche : string argument without an encoding Apr\u00e8s quelques heures d'incompr\u00e9hension sur cette erreur, je viens d'en trouver la raison. J'avais seulement mit le mauvais type dans l'initialisation du champ mot de passe avec SQLAlchemy. J'ai enfin finis le register et le login, tout fonctionne comme il faut. Je n'ai plus qu'a rajouter les champs que je veux dans le register (tout le back-end est fonctionnelle). Je vais commencer \u00e0 documenter les points que j'ai avanc\u00e9 jusque l\u00e0 je pourrai ensuite commencer \u00e0 travailler sur la base de donn\u00e9es. J'ai pu commenc\u00e9 \u00e0 documenter l'envirronement de mon projet mais il reste encore beaucoup de point que je peux documenter d\u00e9j\u00e0 maintenant. Pour avancer la documentation en m\u00eame temps que le projet je vais faire \u00e7a en priorit\u00e9 et je continuerai sur la base de donn\u00e9es une fois la documentation \u00e0 jour. Lundi, 25 Avril 2022 Retour de vacance, je n'ai malheureusement pas pu \u00e9norm\u00e9ment avancer pendant la semaine et demie de vacance. Le premier rendu interm\u00e9diaire a lieu demain. Je vais terminer le diagramme UML que j'ai commenc\u00e9 pour la base de donn\u00e9es. J'utilise l'application WEB dbdiagram.io qui permet de cr\u00e9er un diagram et de l'exporter directement en SQL par la suite. Ma machine a eu un blue screen qui a \u00e9t\u00e9 tr\u00e8s long (30min) \u00e0 red\u00e9marrer. Je n'ai malheureusment pas eu le temps de sauver le diagram que j'avais quasiment termin\u00e9, je vais devoir recommencer. J'ai pu terminer le diagramme UML \u00e0 l'aide de dbdiagram.io : Je peux maintenant commencer la cr\u00e9ation des tables avec SQLAlchemy. J'ai d\u00e9couvert un outil qui est actuellement en BETA dbdocs qui permet de g\u00e9n\u00e9rer une documentation WEB d'une base de donn\u00e9es. Je regarderai l'outil un peu plus en d\u00e9tail plus tard mais je pense que cela pourrait \u00eatre une bonne id\u00e9e d'avoir cette documentation en plus de celle qui sera pr\u00e9sente dans le document de documentation technique. Je viens de me rendre compte que je n'avais pas cr\u00e9\u00e9 le planning effectif pour l'instant. J'ai dupliqu\u00e9 le planning pr\u00e9visionnel et effectu\u00e9 les quelques modifications pour le planning effectif. M.Jossi est venu voir l'avancement du projet. Nous avons discut\u00e9 de plusieurs points notamment le diagramme que j'avais fait pour expliquer l'utilisation de l'application. Le diagramme que j'ai fait \u00e9tait un mix d'un sitemap et d'un diagramme de cas d'utilisation. Je vais donc les refaire s\u00e9par\u00e9ment. Je vais \u00e9galement faire un MCD pour \u00eatre s\u00fbr de ne rien oublier pour ma base de donn\u00e9es. Je pourrai ensuite poursuivre la cr\u00e9ation de ma base avec SQLAlchemy. Pour l'\u00e9valuation interm\u00e9diaire, M.Jossi m'a demand\u00e9 de remplir la grille d'\u00e9valuation de mon c\u00f4t\u00e9 et nous referons un point mercredi pour voir si tout est ok. Mardi, 26 Avril 2022 Aujourd'hui je dois compl\u00e9ter la grille pour la premi\u00e8re \u00e9valuation interm\u00e9diaire comme convenu avec M.Jossi. J'ai pu terminer les 2 sitemaps pour le client et le coach. Je vais maintenant faire le MCD que j'aurai d\u00fb faire avant le MLD pour \u00eatre s\u00fbr de n'avoir rien oublier. Il faudrait que j'avance la documentation sur les diagrammes que je suis en train d'effectuer. J'ai pu terminer le MCD, je le ferai v\u00e9rifier par M.Jossi car j'ai quelques doutes sur certains points. Je ne sais pas si, dans mon cas, il n'est pas mieux de faire une classe m\u00e8re (Users) avec 2 enfants (Clients et coachs) pour le MCD. J'ai ajout\u00e9 les objets SQLAlchemy en fonction du MCD que j'ai fait au pr\u00e9alable. Je me suis rendu compte que certaines tables devront \u00eatre remplies au pr\u00e9alable ou je devrais rajouter des \u00e9crans pour pouvoir les remplir. Un coach n'a pas moyen d'ajouter un type d'entrainement (la table 'workoutsType') ni d'ajouter un type d'abonnement (table subscriptions). Les relations ont l'air de fonctionner avec SQLAlchemy je vais pouvoir adapter les formulaires de register et login que j'ai fait au pr\u00e9alable pour tester. J'ai mis \u00e9galement \u00e0 jour le Trello que je n'avais plus touch\u00e9 depuis quelques jours. Mercredi, 27 Avril 2022 M.Jossi devrait passer aujourd'hui \u00e0 la pause pour faire un point et faire l'\u00e9valuation interm\u00e9diaire comme convenu. Je vais adapter les formulaires de login/register \u00e0 la nouvelle base de donn\u00e9es. Je viens de me rendre compte que le champ 'DateField' dans mon formulaire, que j'utilise pour renseigner la date de naissance de l'utilisateur s'affiche comme un input texte basique. Pour avoir un input de type date j'ai utilis\u00e9 le champ 'DateField' mais depuis wtforms.fields.html5 . J'ai rencontr\u00e9 un nouveau probl\u00e8me, en premier les validations des champs du formulaire ne s'effectuait pas correctement. J'avais en fait simplemenet oublier d'utiliser un SubmitField (j'utilisais un input HTML en dur \u00e0 la place). Les validateurs fonctionnent sauf ceux du mot de passe qui sont sens\u00e9s v\u00e9rifier que les 2 mots de passes saisient soit identiques. Le formulaire se valide et prend en compte uniquement le premier mot de passe saisit. J'ai trouv\u00e9 pourquoi les mots de passe ne se v\u00e9rifiaient pas, je passais directement \u00e0 la cr\u00e9ation de l'utilisateur lors du clique sur le bouton 'register'. Les champs se v\u00e9rifiaient \"eux-m\u00eame\" par rapport au type de donn\u00e9es saisient mais le check si les 2 inputs \u00e9taient identiquent ne s'effectuaient donc pas. J'ai donc chang\u00e9 ma condition pour que je poursuive la cr\u00e9ation de l'utilisateur uniquement lors de la validation du formulaire. J'ai r\u00e9ussi \u00e0 adapter le login et le register avec les bons champs, il ne manque plus qu'a ajouter l'affichage des erreurs. M.Jossi est pass\u00e9 pour l'\u00e9valuation interm\u00e9diaire. Globalement tout est ok, j'ai juste prit un l\u00e9ger retard avec toute la mise en place du syst\u00e8me que j'avais l\u00e9g\u00e8rement sous-estim\u00e9. Pour la documentation, j'ai quelques points a ajouter/modifier : Ajouter les sitemaps Modifier le MCD (Pas de fl\u00e8ches, revoir les cardinalit\u00e9es, double relations pour coach/client) Ajouter Installation pour le projet en g\u00e9n\u00e9ral (pas seulement Python Flask) Ajouter l'aborescence du dossier source (explication d\u00e9taill\u00e9) Revoir l'ordre des maquettes (ordre logique) Explication des boutons sur les maquettes Use case dans l'analyse fonctionnelle Sch\u00e9ma pour montrer comment l'application va int\u00e9ragir avec l'API J'ai pu termin\u00e9 la modification du MCD, je vais l'envoyer \u00e0 M.Jossi pour qu'il puisse v\u00e9rifier. Il faut maintenant que j'avance sur la documentation. Jeudi, 28 Avril 2022 J'ai commenc\u00e9 \u00e0 revoir la description de mes maquettes. Je me suis rendu compte de quelques incoh\u00e9rence sur certaines maquettes comme sur le tableau de bord du coach, la prochaine session \u00e9tait affich\u00e9 tout en bas de la page. Il \u00e9tait donc plus coh\u00e9rent d'afficher cette information tout en haut et de mettre la liste de client en bas. J'ai \u00e9galement eu une r\u00e9flexion sur les bilans. J'avais totalement oubli\u00e9 de penser au bilan qui est un \u00e9l\u00e9ment essentiel du coaching. Je vais donc revoir les maquettes et je pourrai donc modifier le MCD quand je retournerai dessus plus tard. Je pense rajouter 2 \"types\" de bilan, un bilan g\u00e9n\u00e9ral qui sert \u00e0 \u00e9valuer le ressenti du client par rapport \u00e0 sa prise en charge, le suivi de mani\u00e8re g\u00e9n\u00e9ral. Le deuxi\u00e8me type de bilan serait un bilan par session (qui ne serait pas obligatoire, au d\u00e9but cela peut ne pas d\u00e9ranger mais si le client effectu beaucoup de s\u00e9ance cela peut vite devenir r\u00e9p\u00e9titif) o\u00f9 le client note son ressenti sur la s\u00e9ance. Pour le coach, un bilan est effectu\u00e9 de mani\u00e8re soit hebdomadaire, soit mensuelle pour enregistrer les nouvelles mesures (poids, mensu, chrono, cela d\u00e9pend du type de coaching). Pour le bilan, les donn\u00e9es que le coach devra renseigner \u00e0 l'aide d'une balance connect\u00e9 qui permets leurs acquisition sont : Poids BMI (Body Mass Index / IMC) Body Fat % Water % Mucle Mass % Bone Mass BMR Fat Visceral Lean Body Mass Body Fat Mass Muscle Mass Protein Body Age J'ai pu termin\u00e9 les nouvelles maquettes, j'ai rajouter une page bilan de session pour l'utilisateur ainsi qu'une page bilan \"g\u00e9n\u00e9ral\" pour noter la qualit\u00e9 du coaching. Du c\u00f4t\u00e9 coach, j'ai rajout\u00e9 la page pour effectuer le bilan g\u00e9n\u00e9ral avec les informations mentionn\u00e9es au-dessus. Vendredi, 29 Avril 2022 Maintenant que j'ai rajout\u00e9 les bilans et les avis je vais revoir le MCD. Je d\u00e9cide de s\u00e9parer les informations physiques de la table utilisateur et d'ajouter une date dans la table information physique pour avoir un historique de l'\u00e9volution. Il faut \u00e9galement que j'ajoute 2 tables pour les avis (Coaching et sessions). Au niveau MCD, je pense que les 2 tables avis doivent \u00eatre reli\u00e9es \u00e0 une table m\u00e8re \"Reviews\" qui serait associ\u00e9e \u00e0 la table Users . Je demanderai \u00e0 M.Jossi lorsque je lui enverrai mon MCD pour qu'il puisse v\u00e9rifier et me donner son avis. En utilisant une table m\u00e8re pour les avis, je dois remonter le champ \"commentaire\" car c'est un champ commun entre les 2 tables avis. (Les champs d'\u00e9valuation pour les avis ne pourront donc pas \u00eatre modifi\u00e9 sachant qu'ils repr\u00e9sentent des champs d\u00e9finis dans la base de donn\u00e9es) Je vais encore revoir les cardinalit\u00e9s du MCD et je pourrai ensuite l'envoyer \u00e0 M.Jossi. Voici le nouveau MCD : J'ai revu \u00e9galement les cas d'utilisations que j'avais r\u00e9alis\u00e9, j'ai d\u00e9cider de faire 2 sch\u00e9ma diff\u00e9rent pour le client et le coach. J'ai pu avancer sur la documentation, il faut encore que : J'ajoute les navbars dans la section maquette J'explique plus en d\u00e9tail l'arborescence de l'application J'ajoute l'explication de l'installation g\u00e9n\u00e9rale du projet J'explique les 2 sitemaps J'ajoute le MCD J'ajoute un sch\u00e9ma pour expliquer l'utilisation de l'API par l'application. Lundi, 2 Mai 2022 Aujourd'hui je vais continuer d'avancer sur la documentation et je vais \u00e9galement reprendre le code maintenant que j'ai un MCD plut\u00f4t correcte. M.Jossi a pu regarder la nouvelle version du MCD que je lui avais envoy\u00e9. Je dois refaire quelques modifications pour respecter les standards Ecole (nom des entit\u00e9s en majuscule singulier) et mettre les verbe d'association \u00e0 l'indicatif si possible. M. Jossi est pass\u00e9 me voir, il m'a aid\u00e9 \u00e0 \u00e9claircir le passage du MCD au MLD avec la table m\u00e8re REVIEW . Nous avons d\u00e9cider de ne pas prendre la table m\u00e8re et de garder uniquement les tables filles car il n'y avait qu'un seul champ en commun. J'ai du retoucher encore une fois mes maquettes pour revoir les navbars, j'ai \u00e9galement refait le sitemap du c\u00f4t\u00e9 coach car j'avais oubli\u00e9 quelques chemins. J'ai rajout\u00e9 la documentation sur les navbars de l'application. J'ai impl\u00e9ment\u00e9 le MCD avec SQLAlchemy pour cr\u00e9er les tables. J'ai rajout\u00e9 des routes pour afficher une page d'erreur en fonction de l'erreur qui survient : 403 pour un acc\u00e8s non autoris\u00e9 404 si la page n'est pas trouv\u00e9e 500 si c'est un probl\u00e8me avec le serveur J'ai \u00e9galement cr\u00e9\u00e9 une route dynamique pour tous les templates dans le dossier templates/home, toutes les pages sont accessibles uniquement si l'utilisateur est connect\u00e9 (@login_required) Je rencontre un probl\u00e8me, je n'arrive pas \u00e0 acc\u00e9der aux pages car m\u00eame une fois le login pass\u00e9 le login manager ne d\u00e9tecte pas la connexion (Il agit comme si l'utilisateur n'\u00e9tait pas connect\u00e9) Mardi, 3 Mai 2022 J'ai continu\u00e9 de regarder mon probl\u00e8me avec le login_manager hier soir, je n'ai toujours pas trouv\u00e9 de solution. Ce matin en relisant, la documentation de Flask Login, j'ai essay\u00e9 d'ajouter les m\u00e9thodes que la classe User doit impl\u00e9menter pour que le Login manager fonctionne. Cette fois le Login manager fonctionne avec les m\u00e9thodes impl\u00e9ment\u00e9es \u00e0 la main, le probl\u00e8me est que pour \u00e9viter de d\u00e9voir les impl\u00e9menter \u00e0 la main j'avais fait h\u00e9riter ma classe User d' UserMixin qui permet l'impl\u00e9mentation par d\u00e9faut des propri\u00e9t\u00e9s et m\u00e9thodes n\u00e9cessaires. Donc je ne sais pas pourquoi en faisant h\u00e9riter ma classe de UserMixin cela ne fonctionne pas mais quand j'impl\u00e9mente les propri\u00e9t\u00e9s et m\u00e9thode \u00e0 la main le Login manager fonctionne. Documentation Flask Login J'ai tr\u00e8s rapidement retouch\u00e9 le MCD pour enlever encore les id qui ne sont pas obligatoire et j'ai juste rajouter un champ City et Country pour la table USER. J'ai commenc\u00e9 \u00e0 avancer sur la page profil du client. A la base j'avais s\u00e9par\u00e9 l'application en 2 gros dossiers : authentication/ home/ home/ \u00e9tait sens\u00e9 contenir toute l'application hormis l'authentification, je pense s\u00e9parer ce dossier en 2 parties : client/ coach/ Je vais alors avoir quelques fichiers en double mais ils seront bien pr\u00e9cis par rapport \u00e0 leurs utilit\u00e9es. Chaque dossier doit contenir les fichiers : routes.py , forms.py , init.py qui seront bien s\u00fbr diff\u00e9rents pour chaque dossier. J'ai pu terminer la base de la page profil, les informations du client sont affich\u00e9s et peuvent \u00eatre modifi\u00e9. Il faut encore que je rajoute le \"widget\" pour les retours ainsi que l'option pour changer le mot de passe. Mercredi, 4 Mai 2022 J'ai pu ajouter les requ\u00eates SQL pour afficher les donn\u00e9es sur la page profil comme la fin de l'abonnement qui a \u00e9t\u00e9 souscrit en dernier. Il faut que je commence le Poster car le rendu est fix\u00e9 \u00e0 Lundi et je dois \u00e9galement poursuivre l'avancement de ma documentation pour le rendu interm\u00e9diaire qui a lieu Mardi. Les points que je dois encore ajouter : Expliquer plus en d\u00e9tail l'arborescence de l'application Ajouter l'explication de l'installation g\u00e9n\u00e9rale du projet D\u00e9tailler les 2 sitemaps Remplir la section Base de donn\u00e9es (Ajouter un sch\u00e9ma pour expliquer l'utilisation de l'API par l'application.) Je peux \u00e9ventuellement aussi commencer \u00e0 documenter quelques fichiers comme les routes ou encore les blueprints que j'utilise. J'ai pu avancer sur mon poster, M.Bonvin nous a propos\u00e9 de passer demain pour voir les posters et donner un retour. Pour revenir \u00e0 l'application, je dois faire une requ\u00eate SQL pour r\u00e9cup\u00e9rer les retours du client. Le probl\u00e8me est que les retours sont dans 2 tables diff\u00e9rentes. J'ai cherch\u00e9 pendant un petit moment pour trouver une solution, et je me suis rappel\u00e9 des UNION en SQL qui me permettent exactement de faire ce dont j'ai besoin. Le seul probl\u00e8me est que les champs gardent le nom du premier SELECT. Donc lorsque je r\u00e9cup\u00e8re les retours client d'un client en particulier, je les r\u00e9cup\u00e8re dans un objet CoachingReview m\u00eame si les donn\u00e9es proviennent de la table SessionReview (Car le premier SELECT de l'UNION est celui de CoachingReview). Il faut que je trouve comment rajouter des AS dans ma requ\u00eate SQL. Jeudi, 5 Mai 2022 J'ai trouv\u00e9 le moyen de renommer les champs avec la m\u00e9thode label() . J'ai donc renomm\u00e9 les champs du premier SELECT pour avoir des propri\u00e9t\u00e9s plus g\u00e9n\u00e9riques. Je peux maintenant terminer l'affichage des retours client. Finallement, je vais revoir la base de donn\u00e9es pour optimiser la r\u00e9cup\u00e9ration des retours. Actuellement, il n'est d\u00e9j\u00e0 pas possible de savoir de quel type est le retour car pas de champs et pour savoir quel coach \u00e9tait assign\u00e9 au client il faut v\u00e9rifier dans 2 autres tables pour la date du coaching etc. Je pense finalement garder la table interm\u00e9diaire dans le MLD, une table \"REVIEW\" qui comporte les points communs entre les 2 (client_id, coach_id, date, comment, type) et garder les 2 tables fille qui comporteront les champs sp\u00e9cifiques \u00e0 chacune. J'ai mis l'ID d'une review dans la table REVIEW et cet ID sera la cl\u00e9 primaire et \u00e9trang\u00e8re des tables filles. Une fois la table interm\u00e9diaire ajout\u00e9e, je pourrai terminer l'affichage des retours ainsi que la l'affichage de leurs d\u00e9tails. Je suis bloqu\u00e9 sur un probl\u00e8me, je n'arrive pas \u00e0 joindre une table r\u00e9cup\u00e9rer \u00e0 l'aide d'un UNION avec SQL Alchemy. Voici la requ\u00eate en SQL : SELECT R.id, R.comment, R.date , R.type, I.Field1 FROM REVIEW AS R JOIN (SELECT C.id AS ID, C.satisfaction AS Field1 FROM COACHING_REVIEW AS C UNION SELECT S.id, S.difficulty FROM SESSION_REVIEW AS S) AS I ON I.ID = R.id WHERE id_client = 1 J'arrive \u00e0 faire l'UNION avec tous les champs, seulement lorsque je veux join la table \u00e0 une autre table je n'arrive pas \u00e0 determiner la jointure (le ON ) car je ne peux pas acc\u00e8der aux colonnes de la table \"UNION\". La premi\u00e8re requ\u00eate qui va chercher toutes les reviews de coaching : q1 = db.session.query(CoachingReview.id, CoachingReview.satisfaction.label(\"Field1\"), CoachingReview.support.label(\"Field2\"), CoachingReview.disponibility.label(\"Field3\"), CoachingReview.is_continuing.label(\"Field4\")) La deuxi\u00e8me requ\u00eate qui va chercher toutes les reviews de sessions : q2 = db.session.query(SessionReview.id, SessionReview.difficulty, SessionReview.feel, SessionReview.fatigue, SessionReview.energy) L'union entre les deux : q3 = q1.union(q2) Et la requ\u00eate qui relie les infos de la table m\u00e8re REVIEW aux donn\u00e9es r\u00e9cup\u00e9r\u00e9s dans l'UNION : query = db.session.query(Review.id, Review.comment, Review.date, Review.type).join(q3,Review.id==q3.c.id).filter(Review.client_id==id) La variable q3 qui contient le r\u00e9sultat de l'UNION est sens\u00e9 poss\u00e9der les colonnes de cette table accessible depuis q3.c mais j'ai l'erreur : AttributeError : id En debugant les objets SQL Alchemy, j'ai trouv\u00e9 pourquoi je n'arrivais pas \u00e0 acc\u00e9der aux champs. Les champs avaient un alias g\u00e9n\u00e9r\u00e9 automatiquement. Pour r\u00e9gler ce probl\u00e8me, j'ai rajouter un nouvel alias \u00e0 chaque champs et d\u00e9sormais tout fonctionne. Les reviews du clients sont maintenant affich\u00e9s sur sa page profil, je peux maintenant ajouter la page de d\u00e9tails lorsqu'on clique sur la review. Demain je vais beaucoup travailler sur la documentation car le rendu interm\u00e9diaire \u00e0 lieu lundi et il faudrait que j'ai document\u00e9 toutes les fonctionnalit\u00e9es d\u00e9j\u00e0 effectu\u00e9. Vendredi, 6 Mai 2022 Je viens d'ajouter le changement d'image de profil. Sachant que l'application n'est pas destin\u00e9e \u00e0 contenir des milliers d'utilisateurs, j'ai cr\u00e9\u00e9 un dossier \"profile/\" dans le dossier \"img/\" de l'application. Toutes les photos de profil seront enregistr\u00e9es ici avec un UUID comme nom de fichier. Le nom de fichier est enregistr\u00e9 dans la base de donn\u00e9es. J'ai avanc\u00e9 un peu sur la page Workouts, il faut que je modifie la cr\u00e9ation des champs de la table 'WORKOUT' car les valeurs sont arrondies et n'ont pas de d\u00e9cimals. J'ai pu terminer l'affichage des workouts effectu\u00e9s par le client. Cet apr\u00e8s-midi, je vais avancer sur la documentation technique et le poster. Pour le moment, il me manque encore l'ajout des reviews par le client ainsi que l'affichage d\u00e9taill\u00e9 des reviews et des workouts et l'affichage des graphiques avec Chart.JS. Une fois cela termin\u00e9, j'aurai termin\u00e9 le c\u00f4t\u00e9 client. La partie des graphiques avec Chart.JS sera je pense que la partie la plus \"compliqu\u00e9e\". Pour le reste de l'application, tous le c\u00f4t\u00e9 coach est uniquement compos\u00e9 de formulaire et des m\u00eames pages que le c\u00f4t\u00e9 client mais avec des options suppl\u00e9mentaires. J'ai pris la d\u00e9cision de laisser un peu de c\u00f4t\u00e9 l'aspect \"esth\u00e9tique\" de l'application car n'\u00e9tant vraiment en avance je veux me concentrer principalement sur les fonctionnalit\u00e9s de l'application. J'ai pu avanc\u00e9 un peu sur la documentation de la base de donn\u00e9es. Je vais devoir revoir mon poster ce week-end, M.Bonvin m'a fait un retour : Je n'explique pas ce que mon application fait et je fais plus de pub pour Polar qu'autre chose. Lundi, 9 Mai 2022 Aujourd'hui \u00e0 17h, nous avons le rendu interm\u00e9diaire. Nous devons rendre le poster, le r\u00e9sum\u00e9 et l'abstract ainsi que l'\u00e9tat actuel de la documentation technique. J'ai pu refaire un nouveau Poster plus explicit de ce qu'est mon application : Je l'ai montr\u00e9 \u00e0 M.Garcia qui m'a fait la remarque qu'il n'y avait pas vraiment d'ordre de proc\u00e9der pour l'application (Trop d'images misent un peu partout sans sens particulier). Je vais donc reordrer les images et je devrai \u00eatre pas mal. J'ai pu avancer ma documentation technique un peu, il faut encore que j'ajoute : L'arborescence L'installation et que je commence \u00e0 expliquer les diff\u00e9rentes routes de l'application. Je viens de rencontrer un probl\u00e8me, lors du rendu en PDF avec Mkdocs, j'ai plusieurs images qui s'affichaient sur le site statique mais qui ne sont pas visible sur le PDF. M.Jossi est pass\u00e9 pour voir l'avancement du projet, nous ferons un point pour l'\u00e9valuation interm\u00e9diaire Mercredi. Il m'a \u00e9galement fait la remarque que mon poster contenait trop d'images un peu partout. Je vais \u00e9purer mon poster et continuer d'avancer sur la documentation. J'ai pu ajouter l'arborescence (qui n'est pas termin\u00e9e vu que le projet ne l'est pas encore). Il faudrait encore que j'ajoute des tests utilisateurs dans la documentation pour les parties d\u00e9j\u00e0 termin\u00e9es. J'ai pu modifier et all\u00e9ger mon poster : Mardi, 10 Mai 2022 Aujourd'hui je vais avancer sur mon projet. Il faut que j'ajoute l'affichage des d\u00e9tails d'une review lorsque l'utilisateur clique dessus. Je rencontre un probl\u00e8me, je voulais \u00e0 la base passer la review (objet) en param\u00e8tre GET pour pouvoir r\u00e9cup\u00e9rer les infos sur la page review. Mais lorsque je passe l'objet en param\u00e8tre il arrive de l'autre c\u00f4t\u00e9 sous forme de chaine (string). Je ne peux donc pas r\u00e9cup\u00e9rer les donn\u00e9es comme je le souhaite car seul les valeurs sont dans la chaine, il n'y pas les indexs. Je vois deux possibilit\u00e9 : Soit je passe l'id en param\u00e8tre et je vais refaire une requ\u00eate pour chercher les infos (je vais devoir en faire deux car je ne peux pas savoir le type de la review \u00e0 l'avance et en fonction du type la requ\u00eate est diff\u00e9rente) Soit j'arrive \u00e0 r\u00e9cup\u00e9rer un objet en param\u00e8tre. Je vais essayer de trouver un moyen de passer l'objet mais si je perds trop de temps je ferai l'option avec les deux requ\u00eates. J'ai pu passer les valeurs en param\u00e8tre, au lieu de passer l'objet j'ai pass\u00e9 toutes les valeurs s\u00e9par\u00e9ments. En avan\u00e7ant je viens de me rendre qu'il faut que j'ajoute un champ dans les 2 tables \"COACHING_REVIEW\" et \"SESSION_REVIEW\". Il faut que j'ai l'id de la session/coach concercn\u00e9 par la review. J'ai rajout\u00e9 les champs \"target_id\" aux deux tables de reviews. J'ai mis \u00e0 jour les diagrammes. J'ai pu terminer l'affichage des 2 types de reviews, je pourrai revoir encore le style \u00e9ventuellement plus tard si j'ai le temps. Mercredi, 11 Mai 2022 Nous allons faire le point interm\u00e9diaire aujourd'hui avec M.Jossi, je pense toujours avoir un peu de retard sur le projet de mani\u00e8re g\u00e9n\u00e9rale. Je rencontre un probl\u00e8me lors de l'ajout des charts sur la page profil. J'ai fait une requ\u00eate pour obtenir les types d'entrainements qui ont \u00e9t\u00e9 effectu\u00e9s un client ainsi que le nombre de s\u00e9ance effectu\u00e9 pour chaque type. Je s\u00e9pare donc ces valeurs en 2 tableaux (Pour pouvoir ensuite les passer dans le Javascript et utiliser les valeurs avec Chart.JS). Seulement une fois passer du c\u00f4t\u00e9 HTML j'ai un probl\u00e8me, pour tableau qui contient les valeurs num\u00e9riques (int) tout va bien mais pour le tableau qui contient le titre des exercices (string) les apostrophes contenues dans le tableau pour d\u00e9terminer les strings sont remplac\u00e9 par : \" Tableau avant (backend python) ['Weightlifting', 'Cycling'] Tableau apr\u00e8s (frontend html) [&#34;Weightlifting&#34;,&#34;Cycling&#34;] Le probl\u00e8me est que je ne peux m\u00eame pas remplacer les caract\u00e8res ind\u00e9sirables car ce n'est pas une chaine mais un tableau. Pour r\u00e9soudre ce probl\u00e8me, j'ai fait une boucle qui parcourt le tableau re\u00e7u sur le c\u00f4t\u00e9 template et j'ai rempli un tableau javascript avec les valeurs. J'ai ensuite remplac\u00e9 les caract\u00e8res ind\u00e9sirables des valeurs et tout fonctionnait. En me faisant une r\u00e9flexion sur l'application, je me suis rendu compte que je vais devoir modifier une maquette. Sur la maquette d'interface pour la page d\u00e9tail d'un entrainement, j'ai affich\u00e9 un graphique qui repr\u00e9sentait l'\u00e9volution des battements de coeur durant la s\u00e9ance. Malheureusement l'API Polar ne permet pas de r\u00e9colter les donn\u00e9es de toute la s\u00e9ance, on obtient uniquement le bpm max, min et moyen (pas de quoi afficher un graphique repr\u00e9sentant la s\u00e9ance enti\u00e8re). J'ai fait le point interm\u00e9diaire avec M.Jossi, dans l'ensemble je suis sur le bon chemin. Il ne faut pas que je me rel\u00e2che mais j'avance dans la bonne direction. J'ai toujours un peu de retard mais je ne me fais pas trop de soucis pour l'instant. Il faut que je commence \u00e0 d\u00e9couper le code python (s\u00e9parer en fonction pour chaque requ\u00eate effectu\u00e9e) et il faut \u00e9galement que j'ajoute le guide d'installation dans la documentation. M.Jossi m'a \u00e9galement fait la remarque qu'il faudrait que je pr\u00e9cise les entr\u00e9es obligatoires dans les formulaires pr\u00e9sents sur les maquettes. J'ai pu commencer l'ajout du deuxi\u00e8me graphique de la page profil avec Chart.JS qui repr\u00e9sentera le nombre d'entrainements effectu\u00e9s par mois. Jeudi, 12 Mai 2022 J'ai pu terminer le passage des valeurs pour le deuxi\u00e8me graphique (pour le nombre d'entrainements par mois). Je n'ai pas pu avancer l'apr\u00e8s-midi car il y a eu l'apr\u00e8s-midi \"poster\" ou tous les \u00e9l\u00e8ves CFC ont venu voir les projets. Vendredi, 13 Mai 2022 J'ai re\u00e7u un mail inqui\u00e9tant de la part de Polar. Ils annoncent une maintenance le 18 Juin, je ne sais pas pour combien de temps. Sachant que la d\u00e9fense du dipl\u00f4me a lieu le 20, je vais devoir prendre des pr\u00e9cautions et faire une sorte de \"Mock\" de l'API Polar et simuler la r\u00e9cup\u00e9ration des donn\u00e9es au cas o\u00f9. Je vais quand m\u00eame leurs envoyer un mail, pour connaitre la dur\u00e9e de la maintenance et savoir si des changements majeurs auront lieu (des changements qui risquent de rendre obsol\u00e8te mon application). J'ai remarqu\u00e9 que les donn\u00e9es utilis\u00e9es pour le graphique qui affiche le nombre d'entrainements par mois ne prends pas en compte l'ann\u00e9e (si j'ai fait des entrainements en Mai 2021 et Mai 2022 il prendra la somme des 2). Je vais rajouter le crit\u00e8re de l'ann\u00e9e actuelle dans la requ\u00eate SQL. J'ai pu ajouter les statistiques de la semaine \u00e0 c\u00f4t\u00e9 des deux graphiques. Il faut encore que j'affiche le total d'heures d'entrainements de la semaine, la difficult\u00e9 est qu'il faut que j'utilise la fonction SQL SUM() sur des champs du type TIME (ce qui n'est pas faisable en SQL). Pour solutionner ce l\u00e9ger probl\u00e8me j'ai utilis\u00e9 la fonction SQL exctract qui m'a permis d'extraire les heures, minutes et secondes de chaque dur\u00e9e et ainsi les additionners. J'ai \u00e9galement pu ajouter la page \"Prochaine sessions\" qui affichent la liste des prochaines sessions avec un coach. Pour ressembler le plus possible \u00e0 la maquette j'ai ajout\u00e9 dans le dossier static/assets/img/sports des logos de beaucoup de sports qui serviront d'illustrations pour le type de s\u00e9ance qui est pr\u00e9vu pour la session. Je vais pouvoir maintenant commencer \u00e0 s\u00e9parer en diff\u00e9rentes fonctions les requ\u00eates SQL pour rendre plus lisible le fichier de routes. Pour le c\u00f4t\u00e9 client, il ne manque plus que l'affichage d\u00e9taill\u00e9 des entrainements et l'option changement de mot de passe. Je pourrai ensuite commencer le c\u00f4t\u00e9 coach. Pour la documentation je vais commencer \u00e0 documenter les endpoints du c\u00f4t\u00e9 client. Lundi, 16 Mai 2022 Aujourd'hui, j'ai pu terminer la page d\u00e9tails d'entrainements, je ne me suis pas trop attard\u00e9 sur le style mais la page est fonctionnelle. J'ai pu ensuite poursuivre avec la page ajout de review, je vais en faire une seule qui s'adaptera en fonction des champs qui lui sont envoy\u00e9s. Je remarque qu'il faut que je modifie la maquette d'ajout de review sur le coaching car j'avais modifi\u00e9 un champ et sur la maquette l'ancien champ est toujours pr\u00e9sent. J'ai eu une r\u00e9flexion lors de l'\u00e9laboration de la page d'ajout de review, ne faut-il pas ajouter une review sur les entrainements plut\u00f4t que les sessions ? Car les sessions ne sont pas toujours des entrainements et cela ne sert \u00e0 rien d'ajouter une review sur un rendez-vous pour un bilan. Il faut donc que je modifie les noms de table, les relations ainsi que les cl\u00e9s \u00e9trang\u00e8res. J'ai pu terminer la page d'ajout de review \u00e0 90%, il ne manque plus qu'\u00e0 modifier la base de donn\u00e9es pour que les revies soient sur les entrainements et plus les sessions et la page sera fonctionnelle pour l'ajout de review sur les entrainements. J'ajouterai les reviews coaching demain. Mardi, 17 Mai 2022 Je vais commencer par modifier la base de donn\u00e9es pour passer de \"SESSION_REVIEW\" \u00e0 \"WORKOUT_REVIEW\" car comme r\u00e9fl\u00e9chi hier, il est plus int\u00e9ressant de pouvoir mettre une review sur un entrainement que sur une session car certains workouts ne sont pas une session et le retour sur ces entrainements peuvent int\u00e9resser le coach. J'ai pu tout modifier, il faut maintenant que je fasse en sorte qu'un entrainement ne puisse avoir qu'une seule review pour \u00e9viter que l'utilisateur en publie plusieurs. J'ai \u00e9galement fait la modification de la maquette d'ajout de review sur le coaching les 4 champs n'\u00e9tant plus un select mais un slider comme les autres champs. J'ai ajout\u00e9 la possibilit\u00e9 d'ajouter les review du coaching. Il faudrait que j'ajoute en tout cas pour l'ajout de review sur le coaching un petit carr\u00e9 qui montre le coach en question. Pour l'ajout de review sur un entrainement cela n'est pas forc\u00e9ment n\u00e9cessaire sachant qu'il faut \u00eatre sur la page de d\u00e9tail de l'entrainement pour ajouter une review. Il faut que j'ajoute une redirection automatique lorsque la review ajout\u00e9. Je ne sais pas si c'est un probl\u00e8me mais vu qu'avant de v\u00e9rifier si la review d'entrainement existe je remplis la table REVIEW cela augmente l'id de 1 et si la review existe tout est rollback mais l'auto incr\u00e9ment garde l'incr\u00e9ment de 1. Lors de la cr\u00e9ation de la page pour changer le mot de passe, je rencontre un probl\u00e8me. J'avais ajout\u00e9 dans le model User une fonction qui permet de hash le password qui est d\u00e9fini sur la propri\u00e9t\u00e9 \"password\" mais lorsque je change la propri\u00e9t\u00e9 le mot de passe n'est pas hash\u00e9 et si je le hash manuellement le programme plante. La modification de mot de passe est d\u00e9sormais fonctionnel mais je rencontre maintenant un autre probl\u00e8me le logout ne fonctionne plus Je n'arrive plus \u00e0 logout l'utilisateur connect\u00e9, dans la route du login il y a une condition : if not current_user.is_authenticated sauf que m\u00eame apr\u00e8s avoir utilis\u00e9 la fonction logout_user de Flask Login, je ne passe jamais dans cette condition. Mercredi, 18 Mai 2022 Je suis rest\u00e9 bloqu\u00e9 sur mon probl\u00e8me de logout presque toute la matin\u00e9e, je ne trouvais absolument aucune solution logique. M. Zanardi est venu voir mon probl\u00e8me et nous avons debuger le logout. Nous avons d\u00e9couvert qu'une fois logout Flask Login se connectait automatiquement \u00e0 un utilisateur \"test\" que j'avais cr\u00e9\u00e9 dans la base de donn\u00e9es sans mot de passe et sans email. Ces champs devront \u00eatre non null car ils sont obligatoires \u00e0 l'inscription. Je ne sais pas ni pourquoi ni comment mais Flask Login se connectait par d\u00e9faut \u00e0 l'utilisateur sans email. Je pouvais donc apr\u00e8s m'\u00eatre d\u00e9connect\u00e9 acc\u00e9der aux pages sous @login_required . En supprimant cet utilisateur test , j'ai remarqu\u00e9 que tout fonctionnait comme il faut car Flask login ne pouvait plus se connecter automatiquement \u00e0 cet utilisateur sans email. La partie client est donc termin\u00e9, il va falloir que j'effectue quelques tests mais dans l'ensemble tout \u00e0 l'air fonctionnel. Je vais d\u00e9buter la partie coach en reprenant d\u00e9j\u00e0 les pages clients qui ont des options coach et j'ajouterai les nouvelles pages apr\u00e8s. J'ai commenc\u00e9 \u00e0 s\u00e9parer un peu le fichier client/routes.py j'ai cr\u00e9er un autre fichier util.py qui contiendra toutes les fonctions qui permettront de r\u00e9cup\u00e9rer des donn\u00e9es de la base de donn\u00e9es. Cela rendra mon fichier routes.py beaucoup plus lisible. Jeudi, 19 Mai 2022 Aujourd'hui j'ai bien avanc\u00e9 sur l'\u00e9puration de mon code, il y avait plein de requ\u00eate que je faisais en double ou qui \u00e9tait inutile. Exemple pour la plupart des pages je r\u00e9cup\u00e9rais un objet user pour avoir toutes les propri\u00e9t\u00e9s alors qu'avec Flask login je d\u00e9tenais d\u00e9j\u00e0 un objet User (current_user). Il ne reste qu'une petite partie du fichier routes.py \u00e0 corriger et \u00e7a sera bon. Demain, je vais essayer de beaucoup avancer sur la documentation technique car je ne l'ai plus touch\u00e9e depuis un moment. J'ai pas mal de points \u00e0 ajouter comme notamment les endpoints de l'application ou encore les diff\u00e9rentes fonctions qui sont appel\u00e9es pour r\u00e9cup\u00e9rer des donn\u00e9es de la base. Je pourrai ensuite ajouter la partie coach de l'application qui maintenant que le code est propre, ne devrait normalement pas me poser de gros probl\u00e8mes. En croisant M.Jossi, je lui ai demand\u00e9 si cela pouvait \u00eatre pertinent d'ajouter une sorte de business plan \u00e0 la documentation. Pour faire en sorte d'avoir une br\u00e8ve explication des co\u00fbts qu'il faudrait prendre en compte si on voulait mettre en place l'application chez un coach. (En comptant les montres, les cartes, les lecteurs, etc..). M.Jossi m'a confirm\u00e9 que cela pouvait \u00eatre une bonne id\u00e9e mais cela n'est vraiment pas prioritaire. Je vais donc garder cette id\u00e9e et si il me reste du temps sur la fin j'ajouterai ce point \u00e0 la documentation. Vendredi, 20 Mai 2022 Aujourd'hui j'ai pu terminer de refaire le fichier de route, toutes les fonctions utilisant la base de donn\u00e9es sont maintenant dans le fichier util.py . J'ai pu avancer sur la documentation en ajoutant le routage de l'application et en commen\u00e7ant \u00e0 expliquer les diff\u00e9rents endpoints. Je pense travailler un peu ce week-end pour avancer un peu la documentation et je pourrai \u00e9galement commencer \u00e0 ajouter les pages pour coach. Pour la lecture des cartes RFID et la r\u00e9cup\u00e9ration des donn\u00e9es via l'API, je poss\u00e8de d\u00e9j\u00e0 des scripts me permettant de le faire. Je n'aurai qu'\u00e0 les adapter pour les faire fonctionner. Avec l'annonce de maintenance de l'API le 18 Juin, je vais quand m\u00eame cr\u00e9er un mock de l'API pour me permettre de faire quand m\u00eame tourner l'application au cas o\u00f9 l'API ne fonctionnerait pas pour la pr\u00e9sentation. Lundi, 23 Mai 2022 J'ai d\u00e9couvert et voulus impl\u00e9menter le UserManager qui m'aurait permis de g\u00e9rer l'acc\u00e8s \u00e0 mes pages avec le d\u00e9corateur : @roles_required . Malheureusement, il est n\u00e9cessaire d'utiliser une certaine structure de donn\u00e9es et cela impliquerait trop de changement au stade actuel. Je vais donc m'en passer et faire des v\u00e9rifications plus traditionnelles pour g\u00e9rer les acc\u00e8s aux pages. J'ai eu un petit probl\u00e8me avec le formatage des datetimes r\u00e9cup\u00e9rer depuis la base. J'ai simplement utilis\u00e9 strftime() qui me permet de les afficher avec le format que je veux. J'ai pu terminer le tableau de bord coach, la prochaine session est affich\u00e9e avec la date, dur\u00e9e et type de session. Le client concern\u00e9 est \u00e9galement affich\u00e9. En dessous, on peut retrouver une liste de tous les clients que le coach suit avec quelques infos comme la date de fin de leurs abonnements ou encore le dernier entrainement qu'ils ont effectu\u00e9. Le dernier rendu interm\u00e9diaire a lieu demain, je vais essayer d'avancer un petit peu la documentation encore. En comptant cette semaine il reste un peu moins que 3 semaines avant la fin de ce travail. Pour \u00eatre dans les temps, il faudrait que je termine le c\u00f4t\u00e9 coach cette semaine, j'aurai ensuite une semaine pour impl\u00e9menter l'API et les cartes RFID et je pourrai pour la derni\u00e8re semaine effectuer les derniers tests et arranger la documentation. Mardi, 24 Mai 2022 Nous avons le dernier rendu interm\u00e9diaire aujourd'hui. J'ai commenc\u00e9 \u00e0 travailler sur la page calendrier qui est une des derni\u00e8res pages \"compliqu\u00e9es\" \u00e0 r\u00e9aliser. J'ai en premier temps, utilis\u00e9 un vieux calendrier que j'avais effectu\u00e9 lors de ma formation ici. En faisant quelques recherches j'ai fait la d\u00e9couverte de FullCalendar.io qui permet d'utiliser un calendrier javascript avec beaucoup de fonctionnalit\u00e9s. J'ai d\u00e9cid\u00e9 d'essayer de l'impl\u00e9menter dans mon application car cela va me permettre d'avoir diff\u00e9rents affichages du calendrier (Semaines, mois, jour, liste). J'ai r\u00e9ussi \u00e0 impl\u00e9menter le calendrier FullCalendar. Pour les \u00e9v\u00e9nements, je dois donner un tableau contenant plusieurs objets repr\u00e9sentant un \u00e9v\u00e9nement. Chaque \u00e9v\u00e9nement poss\u00e8de au minimum 1 titre, 1 date de d\u00e9but. Exemple : { title: 'Thomas Fuji', start: '2022-05-22T16:00:00', end: '2022-05-22T17:00:00' } Je vais donc faire une fonction qui va me retourner toutes les sessions enregistr\u00e9es sous ce format et je le passerai ensuite en javascript pour renseigner les \u00e9v\u00e9nements \u00e0 afficher sur le calendrier. J'ai \u00e9galement avanc\u00e9 sur le formulaire d'ajout de session, j'ai eu plusieurs probl\u00e8mes d'affichage \u00e0 cause de quelques erreurs d'inattention. Pour le formulaire d'ajout, il y a un champ Date et un champ Time pour s\u00e9lectionner la date et l'heure de la session. On peut ensuite s\u00e9l\u00e9ctionner une valeur de 1 \u00e0 3 (repr\u00e9sentant le nombre d'heure pr\u00e9vu pour la s\u00e9ance). L'heure de fin est g\u00e9n\u00e9r\u00e9e automatiquement lorsque les champs mentionn\u00e9s ci-dessus sont renseign\u00e9s. Avec le rendu d'aujourd'hui, j'ai toujours du retard, n\u00e9anmoins je pense quand m\u00eame r\u00e9ussir \u00e0 terminer dans les temps, j'avance beaucoup sur les derni\u00e8res pages \u00e0 faire et une fois cela terminer, j'ai \u00e9normement de point \u00e0 ajouter \u00e0 la documentation. J'ai ajout\u00e9 les t\u00e2ches qu'il reste \u00e0 effectuer dans le Trello. Mercredi, 25 Mai 2022 J'ai refait le mod\u00e8le de la table Session, \u00e0 la place d'avoir qu'une date, j'ai un start_time et un end_time . Cela me facilitera la conversion en \u00e9v\u00e9nement pour le calendrier. J'ai pu terminer le formulaire d'ajout de session. On peut maintenant ajouter une session en s\u00e9l\u00e9ctionnant : Client Type d'entrainement Date Heure Dur\u00e9e Pour l'affichage j'ai r\u00e9cup\u00e9r\u00e9 toutes les sessions et je les ai ins\u00e9r\u00e9s dans un tableau pour que \u00e7a respecte le format de FullCalendar. Je passe ensuite mon tableau directement au javascript pour qu'il l'utilise comme source. J'ai eu le dernier point avec M.Jossi, nous avons regarder les t\u00e2ches qu'il me reste a effectuer. Dans l'ensemble, j'ai encore beaucoup de travail mais cela devrait \u00eatre faisable dans les temps. L'objectif est de terminer toutes les pages (Ajout client, paiement, bilan, ajout de programme et affichage de profil client) avant la fin de cette semaine. Je pense que c'est faisable car la plus part des pages ne sont qu'un formulaire pour ins\u00e9rer des \u00e9l\u00e9ments dans la base de donn\u00e9es. Vendredi, 26 Mai 2022 Aujourd'hui j'ai poursuivi l'avancement des derni\u00e8res pages qu'il me reste a cr\u00e9er. J'ai pu terminer la page d'ajout de nouveau client, le coach peut d\u00e9sormais cr\u00e9er un client lui-m\u00eame. J'ai \u00e9galement fait la page de profil client, on y retrouve plusieurs infos du client comme les reviews qu'il a post\u00e9, ses programmes ainsi que des graphiques repr\u00e9sentant les entrainements qu'il effectue. Je vais cette fois vraiment devoir travailler un peu ce week-end, pour m'assurer que toutes les pages soient termin\u00e9es et fonctionnent comme je le souhaite. Je pourrai ainsi d\u00e9buter la r\u00e9cup\u00e9ration des donn\u00e9es avec l'API et la d\u00e9t\u00e9ction de carte RFID. J'esp\u00e8re au plus tard terminer mon projet en fin de semaine prochaine, pour garder une semaine compl\u00e8te de documentation. Lundi, 30 Mai 2022 J'ai pu terminer toutes les pages que je devais encore cr\u00e9er, le coach peut maintenant ajouter un \"checkup\"(bilan) \u00e0 un utilisateur et peut renouveler l'abonnement d'un client. J'ai d\u00fb modifier l\u00e9g\u00e8rement la base de donn\u00e9es, j'ai ajout\u00e9 un champ date \u00e0 la table PROGRAM pour garder les anciens programmes. J'ai \u00e9galement modifi\u00e9 le champ pdf en LONGBLOB car BLOB \u00e9tait trop court dans certains cas. Le client peut maintenant t\u00e9l\u00e9charger son programme directement depuis son profil dans la section Programs . J'ai encore quelques d\u00e9tails \u00e0 revoir et je vais tester toutes les fonctionnalit\u00e9s/pages. SI je ne rencontre aucun probl\u00e8me et que tout est ok, je vais ajouter la lecture de carte RFID pour assigner les cartes de membres. J'ai pu r\u00e9gler quelques d\u00e9tails comme : Affichage d'un message d'erreur Password must match lors de la cr\u00e9ation d'un nouveau compte D\u00e9finir le r\u00f4le coach lors de l'enregistrement de la page register (Les clients sont cr\u00e9\u00e9s avec le formulaire coach) Affichage des messages flash avec le bon CSS D\u00e9tails d'erreur pour l'ajout au calendrier si le coach ne poss\u00e8de aucun client. Affichage d'un message \u00e0 la place des graphiques si l'utilisateur n'a pas encore de donn\u00e9es d'entrainement Ajouter le total de temps d'entrainement cette semaine J'ai pu ajouter la mise \u00e0 jour de la carte de membre, lorsque le coach click sur le bouton change sur le profil du client il peut changer la carte de membre en scannant une nouvelle carte. Pour l'instant, je n'ai pas mis de timeout, c'est-\u00e0-dire que si le coach ne scanne pas de carte alors qu'il a cliqu\u00e9 sur le bouton le site restera bloqu\u00e9 \u00e0 attendre la carte. Je pense donc mettre un timeout de 30s Mardi, 31 Mai 2022 J'ai mis \u00e0 jour quelques d\u00e9tails comme l'affichage d'icone coh\u00e9rentes \u00e0 c\u00f4t\u00e9 des statistiques. J'ai commenc\u00e9 \u00e0 impl\u00e9menter le mailer avec FlaskMail . J'ai ajout\u00e9 la configuration dans mon fichier de config. Pour envoyer les mails, j'ai cr\u00e9er le mail : fitjourney.cfpt@gmail.com . Apr\u00e8s quelques tests, le mailer fonctionne correctement, je vais maintenant ajouter l'envoie d'un mail de notification sur quelques actions. (Pas trop car cela prend du temps donc je ne vais pas trop charger l'application avec des envoies de mail) J'ai ajout\u00e9 l'envoie d'une notification par mail lorsque le coach ajoute un nouveau programme, lors du renouvellement d'un abonnement , lors de l'enregistrement d'une session et lors de la cr\u00e9ation du compte client \u00e9galement. REMARQUE : Les actions qui envoient un mail, sont remarquablement ralenties. Il me reste quelques point \u00e0 effectuer avant de commencer le script qui tournera \u00e0 c\u00f4t\u00e9 pour g\u00e9rer les entr\u00e9es/sorties et l'appel \u00e0 l'API : Ajouter un graphique repr\u00e9sentant l'\u00e9volution du poid (si possible changement des valeurs avec Masse graisseuse , Masse musculaire , etc) (Ajouter la possibilit\u00e9 au coach de modifier les informations du compte client) V\u00e9rifier que le compte connect\u00e9 est bien coach pour toutes les pages coach Ajouter l'annulement d'un abonnement Mercredi, 01 Juin 2022 J'ai envoy\u00e9 un mail \u00e0 M.Jossi pour faire une mise au point avant de commencer la derni\u00e8re semaine. J'ai pu ajouter l'annulation d'abonnement, lorsque le coach clique sur le bouton Cancel . J'ai \u00e9galement ajout\u00e9 un graphique qui affiche l'\u00e9volution du poids d'un client. Je r\u00e9cup\u00e8re la moyenne des pes\u00e9es enregistr\u00e9e pour chaque mois (dans la plupart des cas 1 bilan par mois). Je n'aurai pas le temps de le faire maintenant, mais pour une am\u00e9lioration future cela serait int\u00e9ressant d'ajouter une \"navbar\" qui permettent de changer les valeurs du graphique entre toutes les donn\u00e9es r\u00e9cup\u00e9r\u00e9es lors d'un bilan (Taux de masse musculaire, graisseuse, etc..) J'ai \u00e9galement ajout\u00e9 le check pour les pages coach, elles ne sont plus accessibles par un client. Nous avons fait une mise au point avec M.Jossi, dans l'ensemble je commence \u00e0 arriver au bout. Je dois encore rajouter un historique des bilans ajout\u00e9s pour avoir quand m\u00eame un petit aper\u00e7u des bilans ajout\u00e9s. M.Jossi m'a \u00e9galement fait remarquer que je n'avais pas mis l'\u00e9chelle \u00e0 c\u00f4t\u00e9 des valeurs des reviews. Je vais donc les rajouter. J'ai pu terminer d'ajouter l'historique de bilan, sur la page client pour le coach et sur la page profil pour le client. Jeudi, 02 Juin 2022 Pour aujourd'hui, il me reste \u00e0 valider l'insert dans la DB des donn\u00e9es d'entrainement r\u00e9cup\u00e9r\u00e9s avec l'API Polar. Je vais \u00e9galement d\u00e9j\u00e0 pr\u00e9par\u00e9 une m\u00e9thode que j'utiliserai pour la d\u00e9mo si l'API n'est pas disponible. Je pourrai ensuite \u00e9tablir mon sc\u00e9nario de d\u00e9mo et commencer \u00e0 effectuer tous les tests utilisateurs que j'ajouterai directement dans la documentation. J'ai pu terminer l'insert dans la base de donn\u00e9es, je ne peux pas encore tester car l'API Polar semble avoir un probl\u00e8me (Impossible de faire une requ\u00eate ), j'obtiens une Error 500 Internal server error \u00e0 chaque requ\u00eate. Je testerai demain pour voir si mon script fonctionne comme il faut, je vais pr\u00e9parer ma m\u00e9thode pour r\u00e9cup\u00e9rer des donn\u00e9es dans le m\u00eame format que les donn\u00e9es Polar. En relisant les termes et conditions d'utilisations de l'API, j'ai vu que tout en bas de leur pdf ils precisent qu'ils ne garantissent ABSOLUMENT pas la disponibilit\u00e9 de leurs API. Je vais donc bien utiliser ma m\u00e9thode car je veux vraiment \u00e9viter les probl\u00e8mes lors de la d\u00e9mo. Vendredi, 03 Juin 2022 L'API Polar semble \u00eatre \u00e0 nouveau disponible, je vais tester mon script pour v\u00e9rifier que l'insert dans la base de donn\u00e9es est effectu\u00e9 correctement. Une fois cette \u00e9tape valid\u00e9e, je commencerai \u00e0 effectuer tous les tests utilisateurs pour v\u00e9rifier qu'ils ne restent aucun \"bug\". L'objectif est qu'\u00e0 la fin de la journ\u00e9e je ne touche plus au code et qu'il me reste uniquement la documentation \u00e0 terminer. J'ai d\u00fb faire quelques ajustements pour certains formats de valeurs lors de l'insert. J'utilise le champ duration que l'API me donne sauf qu'il est rendu avec un format tr\u00e8s sp\u00e9cifique qui change en fonction de la dur\u00e9e exemple : Pour une s\u00e9ance de 1h30 : PT1H30M Pour une s\u00e9ance de 50 min et 30s : PT50M30S j'ai donc fait un try avec plusieurs exceptions pour permettre de couvrir les diff\u00e9rents cas. L'insert est d\u00e9sormais fonctionnel, les donn\u00e9es d'entrainement sont correctement ins\u00e9r\u00e9 dans la base de donn\u00e9es. Je vais donc commencer mon tableau de test utilisateur et v\u00e9rifier que toutes mes fonctionnalit\u00e9s fonctionnent comme il faut. J'ai pu r\u00e9aliser une bonne partie des tests tout est fonctionnel pour l'instant, je vais terminer les tests et avancer grandement dans la documentation. J'aimerais avoir une version \"tr\u00e8s avanc\u00e9e\" \u00e0 montrer \u00e0 M.Jossi d'ici Lundi soir pour avoir le temps d'avoir un retour avant la fin. Pour la documentation, je vais devoir refaire les diagrammes de USECASES ainsi que l'architecture du projet qui ont bien chang\u00e9 depuis la derni\u00e8re fois. Mardi, 07 Juin 2022 Derni\u00e8re semaine de ce travail de dipl\u00f4me, je dois encore pas mal avancer sur la documentation. J'ai ajout\u00e9 un sch\u00e9ma pour expliquer le fonctionnement interne de l'application : En ajoutant les plannings, je me suis bien rendu compte que le planning pr\u00e9visionnel n'a vraiment pas \u00e9t\u00e9 respect\u00e9. Beaucoup de t\u00e2ches sont venues s'ajouter et certaines ont pris plus de temps que pr\u00e9vu. J'ai pu d\u00e9crire toutes les technologies que j'ai utilis\u00e9 et termin\u00e9 une grosse partie de l'analyse organique. Il faut encore que j'ajoute les tests utilisateurs que j'ai effectu\u00e9s, que je souligne les am\u00e9liorations possibles ainsi que mon bilan personnel. Mercredi, 08 Juin 2022 Aujourd'hui, je vais continuer d'avancer sur la documentation l'id\u00e9al serait de la terminer d'ici demain matin. Cela me laissera le temps de faire un manuel utilisateur pour le client et le coach. En voulant montrer application, je me rends compte que le mailer ne fonctionne plus. Le compte google fitjourney-cfpt@gmail.com a \u00e9t\u00e9 d\u00e9sactiv\u00e9 pour \"Acc\u00e8s suspect\" alors que j'avais au pr\u00e9alable bien autoris\u00e9 l'acc\u00e8s a des applications externes. J'ai r\u00e9activ\u00e9 le compte et vais attendre un peu voir si cela refonctionne. En attendant je vais continuer la documentation en ajoutant les tests utilisateurs qui ont \u00e9t\u00e9 effectu\u00e9. En retestant le mailer je me rends compte qu'il ne fonctionne toujours pas. Je vais donc voir sur le compte google voir s'il y a un probl\u00e8me avec le compte et je vois que depuis le 30 mai 2022 Google ne prend plus en charge les applications \"moins s\u00e9curis\u00e9e\" Ce qui veut dire que je ne peux plus utiliser de compte google pour envoyer les mails. Je vais devoir trouver une solution sinon le mailer ne sera pas fonctionnel. J'ai essay\u00e9 d'utiliser un compte Yahoo \u00e0 la place, mais cela n'a pas l'air de fonctionner. Le probl\u00e8me est que le 90% de la documentation que l'on peut trouver sur le net utilise les comptes google. Je n'ai toujours pas trouv\u00e9 de solution, alors je pense utiliser MailTrap . MailTrap est un service \"sandbox\" pour email, il capture le trafic SMTP et permet d'analyser les mails. Le mailer n'\u00e9tant plus fonctionnel, je peux utiliser mailtrap pour d\u00e9montrer que le mail s'envoie correctement (le mail ne s'enverra pas r\u00e9ellement au destinataire, il restera dans la bo\u00eete mailtrap) Jeudi, 09 Juin 2022 Avant-dernier jour avant le rendu, je vais refaire un tour sur mon application v\u00e9rifier que tout fonctionne normalement et que la r\u00e9ception avec MailTrap est fonctionnelle. Je vais garder MailTrap car je n'ai plus le temps d'impl\u00e9menter l'API Google qui me permettrai d'utiliser les comptes google pour le mailer comme je le faisais initialement. J'ai chang\u00e9 les morceaux de code que j'avais plac\u00e9 dans ma documentation, je les ai g\u00e9n\u00e9r\u00e9 avec Ray.so pour avoir un rendu visuel meilleur. Exemple de code avec Ray.so : Il faut que j'ajoute encore le retour sur l'exp\u00e9rience qui comprendra : * Points positifs * Points n\u00e9gatifs * Am\u00e9liorations * Probl\u00e8mes rencontr\u00e9s * Bilan personnel Je peux ensuite commencer les manuels utilisateurs pour d\u00e9tailler l'utilisation de mon application. J'ai eu le temps de terminer les deux manuels utilisateur. Il faut encore que je corrige l'orthographe de ma documentation et que je g\u00e9n\u00e8re le listing du code source et je serai bon.","title":"Logbook"},{"location":"logbook/#journal-de-bord-thomas-fujise","text":"","title":"Journal de bord - Thomas Fujise"},{"location":"logbook/#lundi-04-avril-2022","text":"Premier jour du travail de dipl\u00f4me, il faudrait r\u00e9ussir \u00e0 mettre en place l'environnement de travail aujourd'hui. Suite \u00e0 la pr\u00e9sentation du d\u00e9roulement du TD, je change de salle pour m'installer dans la salle \u00e0 c\u00f4t\u00e9. Je vais prendre contact avec M. Jossi, qui est responsable du suivi de mon projet, pour connaitre ses exigences en ce d\u00e9but de projet. Je commence \u00e0 lister les backlogs identifiables \u00e0 ce stade sur un Trello. Je r\u00e9alise en parral\u00e8le le planning pr\u00e9visionnel sur Excel. La journ\u00e9e se termine un peu plus t\u00f4t (vers 15h) car nous avons une visite \u00e0 l'HEPIA.","title":"Lundi, 04 Avril 2022"},{"location":"logbook/#mardi-05-avril-2022","text":"Deuxi\u00e8me jour du travail de dipl\u00f4me, aujourd'hui il faut que j'avance un maximum sur le planning pr\u00e9visionnel et l'identification des backlogs. J'ai rajout\u00e9 les difficult\u00e9s, la priorit\u00e9 et les d\u00e9pendances sur les t\u00e2ches dans le Trello. Cela me permet de mieux m'organiser dans l'ex\u00e9cution de tous les backlogs. M. Garcia est venu vers moi pour d\u00e9finir le nom de mon projet (je l'avais appel\u00e9 \"CoachingTools\" par d\u00e9faut), j'ai finalement d\u00e9cid\u00e9 de nommer mon projet \"FitJourney\". Je vais terminer de d\u00e9finir les backlogs avant la fin de la journ\u00e9e.","title":"Mardi, 05 Avril 2022"},{"location":"logbook/#mercredi-06-avril-2022","text":"Aujourd'hui, je vais modifier encore quelques d\u00e9tails sur mon planning pr\u00e9visionnel avant qu'il soit termin\u00e9. Le planning pr\u00e9visionnel est donc termin\u00e9 ainsi que l'identification des backlogs (du moins ceux identifiables \u00e0 ce stade). Je vais commencer le maquettage des interfaces avec Figma. Pour les maquettes je vais essayer de faire quelque chose d'assez simple, pour \u00e9viter de prendre trop de temps sur cette t\u00e2che. Je n'avais pas beaucoup utilis\u00e9 Figma auparavant mais j'ai r\u00e9ussi \u00e0 bien prendre l'outil en main durant la matin\u00e9e. J'ai pu terminer d\u00e9j\u00e0 quelques maquettes (Profil, Login, Register) et bient\u00f4t celle du tableau de bord pour coach. J'ai pu avancer sur les maquettes, il ne me manque plus que la maquette de la page pour cr\u00e9er une s\u00e9ance avec un coach. J'ai pris \u00e9tonnamment beaucoup moins de temps que pr\u00e9vu pour r\u00e9aliser les maquettes. Je vais donc pouvoir tr\u00e8s bient\u00f4t commencer \u00e0 coder. RAPPEL : Il faut que je commence la documentation demain pour d\u00e9j\u00e0 documenter les maquettes que j'ai r\u00e9alis\u00e9es.","title":"Mercredi, 06 Avril 2022"},{"location":"logbook/#jeudi-07-avril-2022","text":"Aujourd'hui, je vais terminer les maquettes et commencer la documentation technique. Je vais documenter d\u00e9j\u00e0 toutes les maquettes que j'ai r\u00e9alis\u00e9 pour ne pas avoir \u00e0 le faire plus tard. J'ai pu terminer les maquettes avant la fin de la matin\u00e9e. Il faut maintenant que je cr\u00e9er la structure de la documentation technique, je pourrai ensuite commencer \u00e0 documenter les maquettes que j'ai r\u00e9alis\u00e9. Suite \u00e0 une discussion avec un ami coach, j'ai d\u00e9couvert l'existence d'une solution similaire \u00e0 mon projet Inithy . Inithy propose globalement les m\u00eames fonctionnalit\u00e9s que FitJourney \u00e0 l'exception que leurs application est orient\u00e9 coaching \u00e0 distance l\u00e0 ou moi je m'oriente plus sur le coaching en salle (d'ou les cartes de membres RFID). Inithy est toujours au stade de d\u00e9mo, il faut les contacter pour avoir un acc\u00e8s \u00e0 leurs application qui n'est pas encore ouvert \u00e0 tous. Je vais leurs envoyer une demande pour essayer d'avoir acc\u00e8s \u00e0 leurs application et pouvoir analyser leurs application un peu plus en d\u00e9tail. J'ai pu commnecer la documentation des maquettes que j'ai r\u00e9alis\u00e9. J'ai eu une r\u00e9flexion sur l'enregistrement d'un nouveau coach, j'envisage deux cas possible : Soit l'application est d\u00e9livr\u00e9 avec un compte coach(admin) et le formulaire d'enregistrement n'est disponible que lorsqu'on est authentifi\u00e9 en tant que coach(admin) (C'est le coach qui rempli le formulaire pour les nouveaux clients) Soit rajouter un champ lors de l'inscription avec un code pour cr\u00e9er un novueau compte coach.","title":"Jeudi, 07 Avril 2022"},{"location":"logbook/#vendredi-08-avril-2022","text":"Fin de la premi\u00e8re semaine sur ce travail de dipl\u00f4me, j'ai pu commencer la documentation et documenter les maquettes que j'ai r\u00e9alis\u00e9. Suite \u00e0 ma r\u00e9flexion sur l'enregistrement d'un nouveau coach, j'ai d\u00e9cid\u00e9 de simplement rajouter une option sur le formulaire d'enregistrement pour cr\u00e9er un compte coach. Si une personne venait \u00e0 cr\u00e9er un compte coach sans l'\u00eatre ce ne serait pas tr\u00e8s d\u00e9rangeant car un coach n'a acc\u00e8s qu'aux comptes des clients qu'il suit et pour suivre un client il faut que le client confirme de son c\u00f4t\u00e9. Pour un client 2 mani\u00e8res d'avoir un compte : Par le formulaire d'enregistrement au pr\u00e9alable, le coach n'aura qu'a s\u00e9l\u00e9ctionner le profile client lors de la prise en charge. Par le coach (un coach peut cr\u00e9er un compte lors de l'ajout d'une prise en charge d'un client, le compte sera cr\u00e9er avec les infos basiques qui seront demand\u00e9es (Nom, pr\u00e9nom, date de naissance, adresse) et un mot de passe est g\u00e9n\u00e9r\u00e9 pour permettre au client de se connecter plus tard) J'ai ajout\u00e9 la structure de l'application et initialis\u00e9 les blueprints. (Les blueprints permettent de s\u00e9parer l'application en plusieurs modules qui sont ensuite import\u00e9 au m\u00eame endroit) J'ai cr\u00e9er un fichier de config qui permet d'avoir 2 mode : Debug Production Qui permet d'avoir des param\u00e8tres diff\u00e9rents. J'ai \u00e9galement ajout\u00e9 un fichier run qui permet de lancer l'application. Il charge la configuration correspondant au mode actuel (Debug/Production) et run l'application Flask.","title":"Vendredi, 08 Avril 2022"},{"location":"logbook/#lundi-11-avril-2022","text":"D\u00e9but de la deuxi\u00e8me semaine du travail de dipl\u00f4me, aujourd'hui je vais commencer mes pages HTML. Je pense que cela risque de prendre un peu de temps mais en tout cas les maquettes que j'ai r\u00e9alis\u00e9 vont me faire gagner pas mal de temps. J'ai r\u00e9ussi \u00e0 cr\u00e9er une structure de base pour les fichiers html. J'ai d\u00e9cid\u00e9 d'utiliser Sneat qui est un th\u00e8me css open-source publi\u00e9 par ThemeSelection sous licence MIT. J'ai ajout\u00e9 un fichier HTML pour les liens CSS qui sera inclus dans toutes mes pages. M. Mar\u00e9chal est venu voir l'avancer du projet car il va superviser mon travail de dipl\u00f4me de \"loin\". M. Jossi reste mon suiveur principal. M. Mar\u00e9chal m'a conseill\u00e9 de faire un diagramme explicatif du fonctionnement de l'application. J'ai ajout\u00e9 la route par d\u00e9faut pour pouvoir tester une page index avec le css (pour v\u00e9rifier que tout marche bien). Pour l'instant, je n'ai pas de probl\u00e8me tout \u00e0 l'air de fonctionner comme il faut. J'ai fait une class \"prototype\" Users avec SQLAlchemy pour emp\u00eacher des erreurs bloquantes avec Flask-Login. Flask-Login est une librairie qui permet de g\u00e9rer les sessions utilisateurs pour Flask. (Flask-Login g\u00e8re les connexions, d\u00e9connexions et garde la session utilisateur pour savoir l'utilisateur connect\u00e9 ou qui vient de se d\u00e9connecter) J'ai maintenant une page index qui peut afficher des composants \u00e0 l'aide du th\u00e8me CSS Sneat. Demain je poursuivrai la cr\u00e9ation de mes pages HTML et il faut \u00e9galement que je commence \u00e0 rajouter des \u00e9l\u00e9ments dans la documentation Ne pas oublier d'avancer la documentation","title":"Lundi, 11 Avril 2022"},{"location":"logbook/#mardi-12-avril-2022","text":"Aujourd'hui je vais essayer de terminer la partie authentification de l'application (Login/Register). J'utilise FlaskForm pour cr\u00e9er mes formulaires et je pense utiliser Mashmallow pour valider les champs en relation avec la BD (Je regarde quelques exemples d'utilisation avec SQLAlchemy : Exemple ). Il faut \u00e9galement que je fasse le diagramme qui m'a \u00e9t\u00e9 conseill\u00e9 par M.Mar\u00e9chal pour la description du fonctionnement de l'application. Pour la s\u00e9curit\u00e9 des mots de passe j'ai d\u00e9j\u00e0 rajout\u00e9 2 m\u00e9thodes pour permettre de hasher et de v\u00e9rifier les mots de passe. J'utilise la librairie Python hashlib qui me permet d'hasher les mots de passe avec un salt. Pour \u00e9viter d'enregistrer le salt en base, le salt est hash\u00e9 en sha256 et est plac\u00e9 avant le mot de passe dans la chaine. Comme un sha256 a toujours 64 caract\u00e8res, pour v\u00e9rifier le mot de passe je saute les 64 premiers caract\u00e8res de la chaine pour pouvoir comparer avec la saisie de l'utilisateur. J'ai pu faire un diagramme explicatif des diff\u00e9rents processus lors de l'utilisation de mon application en fonction de notre r\u00f4le (Client, coach) Image J'ai \u00e9galement termin\u00e9 le login (le register ne devrait pas prendre beaucoup de temps). J'ai eu quelques soucis pour inclure les formulaires avec FlaskForm (avec les imports python). J'ai ajout\u00e9 une navbar pour mes pages qui servira pour la navigation dans l'application. J'ai juste encore quelques soucis avec le css mais ce n'est pas du tout prioritaire pour le moment. J'ai regard\u00e9 pour utiliser un outil de g\u00e9n\u00e9ration de documentations, je pense utiliser Pdoc qui \u00e0 l'air assez complet et qui permet de g\u00e9n\u00e9rer la documentation sur les librairies inclues dans le projet.","title":"Mardi, 12 Avril 2022"},{"location":"logbook/#mercredi-13-avril-2022","text":"Dernier jour avant les vacances de p\u00e2ques, j'essaye d'int\u00e9grer pdoc \u00e0 mon projet mais lorsque je lance la commande pour g\u00e9n\u00e9rer le doc j'obtiens une erreur. Il n'arrive pas \u00e0 trouver apps qui est le dossier principal. J'ai pris un peu de retard par rapport \u00e0 ma planification initiale mais j'ai avanc\u00e9 sur des points que j'\u00e9tais cens\u00e9 effectuer plus tard dans le projet donc au final je n'ai pas beaucoup de retard. Je vais juste terminer encore ma page register qui va de pair avec la page Login. Il faudra ensuite que je commence \u00e0 documenter tous le back-end que j'ai d\u00e9j\u00e0 effectu\u00e9. Je pourrai ensuite commencer \u00e0 travailler sur la base de donn\u00e9es car pour le moment j'utilisais une base de donn\u00e9es temporaire pour tester mon login. En faisant des tests sur le login je me rends compte que j'ai une erreur qui s'affiche lors de la connexion. Lorsque j'effectue la requ\u00eate pour voir si le mail que l'utlisateur a saisit existe je ne rencontre aucune erreur si le mail ins\u00e9r\u00e9 n'est pas dans la base mais lorsque le mail rentr\u00e9 se trouve dans la base de donn\u00e9es alors une erreur s'affiche : string argument without an encoding Apr\u00e8s quelques heures d'incompr\u00e9hension sur cette erreur, je viens d'en trouver la raison. J'avais seulement mit le mauvais type dans l'initialisation du champ mot de passe avec SQLAlchemy. J'ai enfin finis le register et le login, tout fonctionne comme il faut. Je n'ai plus qu'a rajouter les champs que je veux dans le register (tout le back-end est fonctionnelle). Je vais commencer \u00e0 documenter les points que j'ai avanc\u00e9 jusque l\u00e0 je pourrai ensuite commencer \u00e0 travailler sur la base de donn\u00e9es. J'ai pu commenc\u00e9 \u00e0 documenter l'envirronement de mon projet mais il reste encore beaucoup de point que je peux documenter d\u00e9j\u00e0 maintenant. Pour avancer la documentation en m\u00eame temps que le projet je vais faire \u00e7a en priorit\u00e9 et je continuerai sur la base de donn\u00e9es une fois la documentation \u00e0 jour.","title":"Mercredi, 13 Avril 2022"},{"location":"logbook/#lundi-25-avril-2022","text":"Retour de vacance, je n'ai malheureusement pas pu \u00e9norm\u00e9ment avancer pendant la semaine et demie de vacance. Le premier rendu interm\u00e9diaire a lieu demain. Je vais terminer le diagramme UML que j'ai commenc\u00e9 pour la base de donn\u00e9es. J'utilise l'application WEB dbdiagram.io qui permet de cr\u00e9er un diagram et de l'exporter directement en SQL par la suite. Ma machine a eu un blue screen qui a \u00e9t\u00e9 tr\u00e8s long (30min) \u00e0 red\u00e9marrer. Je n'ai malheureusment pas eu le temps de sauver le diagram que j'avais quasiment termin\u00e9, je vais devoir recommencer. J'ai pu terminer le diagramme UML \u00e0 l'aide de dbdiagram.io : Je peux maintenant commencer la cr\u00e9ation des tables avec SQLAlchemy. J'ai d\u00e9couvert un outil qui est actuellement en BETA dbdocs qui permet de g\u00e9n\u00e9rer une documentation WEB d'une base de donn\u00e9es. Je regarderai l'outil un peu plus en d\u00e9tail plus tard mais je pense que cela pourrait \u00eatre une bonne id\u00e9e d'avoir cette documentation en plus de celle qui sera pr\u00e9sente dans le document de documentation technique. Je viens de me rendre compte que je n'avais pas cr\u00e9\u00e9 le planning effectif pour l'instant. J'ai dupliqu\u00e9 le planning pr\u00e9visionnel et effectu\u00e9 les quelques modifications pour le planning effectif. M.Jossi est venu voir l'avancement du projet. Nous avons discut\u00e9 de plusieurs points notamment le diagramme que j'avais fait pour expliquer l'utilisation de l'application. Le diagramme que j'ai fait \u00e9tait un mix d'un sitemap et d'un diagramme de cas d'utilisation. Je vais donc les refaire s\u00e9par\u00e9ment. Je vais \u00e9galement faire un MCD pour \u00eatre s\u00fbr de ne rien oublier pour ma base de donn\u00e9es. Je pourrai ensuite poursuivre la cr\u00e9ation de ma base avec SQLAlchemy. Pour l'\u00e9valuation interm\u00e9diaire, M.Jossi m'a demand\u00e9 de remplir la grille d'\u00e9valuation de mon c\u00f4t\u00e9 et nous referons un point mercredi pour voir si tout est ok.","title":"Lundi, 25 Avril 2022"},{"location":"logbook/#mardi-26-avril-2022","text":"Aujourd'hui je dois compl\u00e9ter la grille pour la premi\u00e8re \u00e9valuation interm\u00e9diaire comme convenu avec M.Jossi. J'ai pu terminer les 2 sitemaps pour le client et le coach. Je vais maintenant faire le MCD que j'aurai d\u00fb faire avant le MLD pour \u00eatre s\u00fbr de n'avoir rien oublier. Il faudrait que j'avance la documentation sur les diagrammes que je suis en train d'effectuer. J'ai pu terminer le MCD, je le ferai v\u00e9rifier par M.Jossi car j'ai quelques doutes sur certains points. Je ne sais pas si, dans mon cas, il n'est pas mieux de faire une classe m\u00e8re (Users) avec 2 enfants (Clients et coachs) pour le MCD. J'ai ajout\u00e9 les objets SQLAlchemy en fonction du MCD que j'ai fait au pr\u00e9alable. Je me suis rendu compte que certaines tables devront \u00eatre remplies au pr\u00e9alable ou je devrais rajouter des \u00e9crans pour pouvoir les remplir. Un coach n'a pas moyen d'ajouter un type d'entrainement (la table 'workoutsType') ni d'ajouter un type d'abonnement (table subscriptions). Les relations ont l'air de fonctionner avec SQLAlchemy je vais pouvoir adapter les formulaires de register et login que j'ai fait au pr\u00e9alable pour tester. J'ai mis \u00e9galement \u00e0 jour le Trello que je n'avais plus touch\u00e9 depuis quelques jours.","title":"Mardi, 26 Avril 2022"},{"location":"logbook/#mercredi-27-avril-2022","text":"M.Jossi devrait passer aujourd'hui \u00e0 la pause pour faire un point et faire l'\u00e9valuation interm\u00e9diaire comme convenu. Je vais adapter les formulaires de login/register \u00e0 la nouvelle base de donn\u00e9es. Je viens de me rendre compte que le champ 'DateField' dans mon formulaire, que j'utilise pour renseigner la date de naissance de l'utilisateur s'affiche comme un input texte basique. Pour avoir un input de type date j'ai utilis\u00e9 le champ 'DateField' mais depuis wtforms.fields.html5 . J'ai rencontr\u00e9 un nouveau probl\u00e8me, en premier les validations des champs du formulaire ne s'effectuait pas correctement. J'avais en fait simplemenet oublier d'utiliser un SubmitField (j'utilisais un input HTML en dur \u00e0 la place). Les validateurs fonctionnent sauf ceux du mot de passe qui sont sens\u00e9s v\u00e9rifier que les 2 mots de passes saisient soit identiques. Le formulaire se valide et prend en compte uniquement le premier mot de passe saisit. J'ai trouv\u00e9 pourquoi les mots de passe ne se v\u00e9rifiaient pas, je passais directement \u00e0 la cr\u00e9ation de l'utilisateur lors du clique sur le bouton 'register'. Les champs se v\u00e9rifiaient \"eux-m\u00eame\" par rapport au type de donn\u00e9es saisient mais le check si les 2 inputs \u00e9taient identiquent ne s'effectuaient donc pas. J'ai donc chang\u00e9 ma condition pour que je poursuive la cr\u00e9ation de l'utilisateur uniquement lors de la validation du formulaire. J'ai r\u00e9ussi \u00e0 adapter le login et le register avec les bons champs, il ne manque plus qu'a ajouter l'affichage des erreurs. M.Jossi est pass\u00e9 pour l'\u00e9valuation interm\u00e9diaire. Globalement tout est ok, j'ai juste prit un l\u00e9ger retard avec toute la mise en place du syst\u00e8me que j'avais l\u00e9g\u00e8rement sous-estim\u00e9. Pour la documentation, j'ai quelques points a ajouter/modifier : Ajouter les sitemaps Modifier le MCD (Pas de fl\u00e8ches, revoir les cardinalit\u00e9es, double relations pour coach/client) Ajouter Installation pour le projet en g\u00e9n\u00e9ral (pas seulement Python Flask) Ajouter l'aborescence du dossier source (explication d\u00e9taill\u00e9) Revoir l'ordre des maquettes (ordre logique) Explication des boutons sur les maquettes Use case dans l'analyse fonctionnelle Sch\u00e9ma pour montrer comment l'application va int\u00e9ragir avec l'API J'ai pu termin\u00e9 la modification du MCD, je vais l'envoyer \u00e0 M.Jossi pour qu'il puisse v\u00e9rifier. Il faut maintenant que j'avance sur la documentation.","title":"Mercredi, 27 Avril 2022"},{"location":"logbook/#jeudi-28-avril-2022","text":"J'ai commenc\u00e9 \u00e0 revoir la description de mes maquettes. Je me suis rendu compte de quelques incoh\u00e9rence sur certaines maquettes comme sur le tableau de bord du coach, la prochaine session \u00e9tait affich\u00e9 tout en bas de la page. Il \u00e9tait donc plus coh\u00e9rent d'afficher cette information tout en haut et de mettre la liste de client en bas. J'ai \u00e9galement eu une r\u00e9flexion sur les bilans. J'avais totalement oubli\u00e9 de penser au bilan qui est un \u00e9l\u00e9ment essentiel du coaching. Je vais donc revoir les maquettes et je pourrai donc modifier le MCD quand je retournerai dessus plus tard. Je pense rajouter 2 \"types\" de bilan, un bilan g\u00e9n\u00e9ral qui sert \u00e0 \u00e9valuer le ressenti du client par rapport \u00e0 sa prise en charge, le suivi de mani\u00e8re g\u00e9n\u00e9ral. Le deuxi\u00e8me type de bilan serait un bilan par session (qui ne serait pas obligatoire, au d\u00e9but cela peut ne pas d\u00e9ranger mais si le client effectu beaucoup de s\u00e9ance cela peut vite devenir r\u00e9p\u00e9titif) o\u00f9 le client note son ressenti sur la s\u00e9ance. Pour le coach, un bilan est effectu\u00e9 de mani\u00e8re soit hebdomadaire, soit mensuelle pour enregistrer les nouvelles mesures (poids, mensu, chrono, cela d\u00e9pend du type de coaching). Pour le bilan, les donn\u00e9es que le coach devra renseigner \u00e0 l'aide d'une balance connect\u00e9 qui permets leurs acquisition sont : Poids BMI (Body Mass Index / IMC) Body Fat % Water % Mucle Mass % Bone Mass BMR Fat Visceral Lean Body Mass Body Fat Mass Muscle Mass Protein Body Age J'ai pu termin\u00e9 les nouvelles maquettes, j'ai rajouter une page bilan de session pour l'utilisateur ainsi qu'une page bilan \"g\u00e9n\u00e9ral\" pour noter la qualit\u00e9 du coaching. Du c\u00f4t\u00e9 coach, j'ai rajout\u00e9 la page pour effectuer le bilan g\u00e9n\u00e9ral avec les informations mentionn\u00e9es au-dessus.","title":"Jeudi, 28 Avril 2022"},{"location":"logbook/#vendredi-29-avril-2022","text":"Maintenant que j'ai rajout\u00e9 les bilans et les avis je vais revoir le MCD. Je d\u00e9cide de s\u00e9parer les informations physiques de la table utilisateur et d'ajouter une date dans la table information physique pour avoir un historique de l'\u00e9volution. Il faut \u00e9galement que j'ajoute 2 tables pour les avis (Coaching et sessions). Au niveau MCD, je pense que les 2 tables avis doivent \u00eatre reli\u00e9es \u00e0 une table m\u00e8re \"Reviews\" qui serait associ\u00e9e \u00e0 la table Users . Je demanderai \u00e0 M.Jossi lorsque je lui enverrai mon MCD pour qu'il puisse v\u00e9rifier et me donner son avis. En utilisant une table m\u00e8re pour les avis, je dois remonter le champ \"commentaire\" car c'est un champ commun entre les 2 tables avis. (Les champs d'\u00e9valuation pour les avis ne pourront donc pas \u00eatre modifi\u00e9 sachant qu'ils repr\u00e9sentent des champs d\u00e9finis dans la base de donn\u00e9es) Je vais encore revoir les cardinalit\u00e9s du MCD et je pourrai ensuite l'envoyer \u00e0 M.Jossi. Voici le nouveau MCD : J'ai revu \u00e9galement les cas d'utilisations que j'avais r\u00e9alis\u00e9, j'ai d\u00e9cider de faire 2 sch\u00e9ma diff\u00e9rent pour le client et le coach. J'ai pu avancer sur la documentation, il faut encore que : J'ajoute les navbars dans la section maquette J'explique plus en d\u00e9tail l'arborescence de l'application J'ajoute l'explication de l'installation g\u00e9n\u00e9rale du projet J'explique les 2 sitemaps J'ajoute le MCD J'ajoute un sch\u00e9ma pour expliquer l'utilisation de l'API par l'application.","title":"Vendredi, 29 Avril 2022"},{"location":"logbook/#lundi-2-mai-2022","text":"Aujourd'hui je vais continuer d'avancer sur la documentation et je vais \u00e9galement reprendre le code maintenant que j'ai un MCD plut\u00f4t correcte. M.Jossi a pu regarder la nouvelle version du MCD que je lui avais envoy\u00e9. Je dois refaire quelques modifications pour respecter les standards Ecole (nom des entit\u00e9s en majuscule singulier) et mettre les verbe d'association \u00e0 l'indicatif si possible. M. Jossi est pass\u00e9 me voir, il m'a aid\u00e9 \u00e0 \u00e9claircir le passage du MCD au MLD avec la table m\u00e8re REVIEW . Nous avons d\u00e9cider de ne pas prendre la table m\u00e8re et de garder uniquement les tables filles car il n'y avait qu'un seul champ en commun. J'ai du retoucher encore une fois mes maquettes pour revoir les navbars, j'ai \u00e9galement refait le sitemap du c\u00f4t\u00e9 coach car j'avais oubli\u00e9 quelques chemins. J'ai rajout\u00e9 la documentation sur les navbars de l'application. J'ai impl\u00e9ment\u00e9 le MCD avec SQLAlchemy pour cr\u00e9er les tables. J'ai rajout\u00e9 des routes pour afficher une page d'erreur en fonction de l'erreur qui survient : 403 pour un acc\u00e8s non autoris\u00e9 404 si la page n'est pas trouv\u00e9e 500 si c'est un probl\u00e8me avec le serveur J'ai \u00e9galement cr\u00e9\u00e9 une route dynamique pour tous les templates dans le dossier templates/home, toutes les pages sont accessibles uniquement si l'utilisateur est connect\u00e9 (@login_required) Je rencontre un probl\u00e8me, je n'arrive pas \u00e0 acc\u00e9der aux pages car m\u00eame une fois le login pass\u00e9 le login manager ne d\u00e9tecte pas la connexion (Il agit comme si l'utilisateur n'\u00e9tait pas connect\u00e9)","title":"Lundi, 2 Mai 2022"},{"location":"logbook/#mardi-3-mai-2022","text":"J'ai continu\u00e9 de regarder mon probl\u00e8me avec le login_manager hier soir, je n'ai toujours pas trouv\u00e9 de solution. Ce matin en relisant, la documentation de Flask Login, j'ai essay\u00e9 d'ajouter les m\u00e9thodes que la classe User doit impl\u00e9menter pour que le Login manager fonctionne. Cette fois le Login manager fonctionne avec les m\u00e9thodes impl\u00e9ment\u00e9es \u00e0 la main, le probl\u00e8me est que pour \u00e9viter de d\u00e9voir les impl\u00e9menter \u00e0 la main j'avais fait h\u00e9riter ma classe User d' UserMixin qui permet l'impl\u00e9mentation par d\u00e9faut des propri\u00e9t\u00e9s et m\u00e9thodes n\u00e9cessaires. Donc je ne sais pas pourquoi en faisant h\u00e9riter ma classe de UserMixin cela ne fonctionne pas mais quand j'impl\u00e9mente les propri\u00e9t\u00e9s et m\u00e9thode \u00e0 la main le Login manager fonctionne. Documentation Flask Login J'ai tr\u00e8s rapidement retouch\u00e9 le MCD pour enlever encore les id qui ne sont pas obligatoire et j'ai juste rajouter un champ City et Country pour la table USER. J'ai commenc\u00e9 \u00e0 avancer sur la page profil du client. A la base j'avais s\u00e9par\u00e9 l'application en 2 gros dossiers : authentication/ home/ home/ \u00e9tait sens\u00e9 contenir toute l'application hormis l'authentification, je pense s\u00e9parer ce dossier en 2 parties : client/ coach/ Je vais alors avoir quelques fichiers en double mais ils seront bien pr\u00e9cis par rapport \u00e0 leurs utilit\u00e9es. Chaque dossier doit contenir les fichiers : routes.py , forms.py , init.py qui seront bien s\u00fbr diff\u00e9rents pour chaque dossier. J'ai pu terminer la base de la page profil, les informations du client sont affich\u00e9s et peuvent \u00eatre modifi\u00e9. Il faut encore que je rajoute le \"widget\" pour les retours ainsi que l'option pour changer le mot de passe.","title":"Mardi, 3 Mai 2022"},{"location":"logbook/#mercredi-4-mai-2022","text":"J'ai pu ajouter les requ\u00eates SQL pour afficher les donn\u00e9es sur la page profil comme la fin de l'abonnement qui a \u00e9t\u00e9 souscrit en dernier. Il faut que je commence le Poster car le rendu est fix\u00e9 \u00e0 Lundi et je dois \u00e9galement poursuivre l'avancement de ma documentation pour le rendu interm\u00e9diaire qui a lieu Mardi. Les points que je dois encore ajouter : Expliquer plus en d\u00e9tail l'arborescence de l'application Ajouter l'explication de l'installation g\u00e9n\u00e9rale du projet D\u00e9tailler les 2 sitemaps Remplir la section Base de donn\u00e9es (Ajouter un sch\u00e9ma pour expliquer l'utilisation de l'API par l'application.) Je peux \u00e9ventuellement aussi commencer \u00e0 documenter quelques fichiers comme les routes ou encore les blueprints que j'utilise. J'ai pu avancer sur mon poster, M.Bonvin nous a propos\u00e9 de passer demain pour voir les posters et donner un retour. Pour revenir \u00e0 l'application, je dois faire une requ\u00eate SQL pour r\u00e9cup\u00e9rer les retours du client. Le probl\u00e8me est que les retours sont dans 2 tables diff\u00e9rentes. J'ai cherch\u00e9 pendant un petit moment pour trouver une solution, et je me suis rappel\u00e9 des UNION en SQL qui me permettent exactement de faire ce dont j'ai besoin. Le seul probl\u00e8me est que les champs gardent le nom du premier SELECT. Donc lorsque je r\u00e9cup\u00e8re les retours client d'un client en particulier, je les r\u00e9cup\u00e8re dans un objet CoachingReview m\u00eame si les donn\u00e9es proviennent de la table SessionReview (Car le premier SELECT de l'UNION est celui de CoachingReview). Il faut que je trouve comment rajouter des AS dans ma requ\u00eate SQL.","title":"Mercredi, 4 Mai 2022"},{"location":"logbook/#jeudi-5-mai-2022","text":"J'ai trouv\u00e9 le moyen de renommer les champs avec la m\u00e9thode label() . J'ai donc renomm\u00e9 les champs du premier SELECT pour avoir des propri\u00e9t\u00e9s plus g\u00e9n\u00e9riques. Je peux maintenant terminer l'affichage des retours client. Finallement, je vais revoir la base de donn\u00e9es pour optimiser la r\u00e9cup\u00e9ration des retours. Actuellement, il n'est d\u00e9j\u00e0 pas possible de savoir de quel type est le retour car pas de champs et pour savoir quel coach \u00e9tait assign\u00e9 au client il faut v\u00e9rifier dans 2 autres tables pour la date du coaching etc. Je pense finalement garder la table interm\u00e9diaire dans le MLD, une table \"REVIEW\" qui comporte les points communs entre les 2 (client_id, coach_id, date, comment, type) et garder les 2 tables fille qui comporteront les champs sp\u00e9cifiques \u00e0 chacune. J'ai mis l'ID d'une review dans la table REVIEW et cet ID sera la cl\u00e9 primaire et \u00e9trang\u00e8re des tables filles. Une fois la table interm\u00e9diaire ajout\u00e9e, je pourrai terminer l'affichage des retours ainsi que la l'affichage de leurs d\u00e9tails. Je suis bloqu\u00e9 sur un probl\u00e8me, je n'arrive pas \u00e0 joindre une table r\u00e9cup\u00e9rer \u00e0 l'aide d'un UNION avec SQL Alchemy. Voici la requ\u00eate en SQL : SELECT R.id, R.comment, R.date , R.type, I.Field1 FROM REVIEW AS R JOIN (SELECT C.id AS ID, C.satisfaction AS Field1 FROM COACHING_REVIEW AS C UNION SELECT S.id, S.difficulty FROM SESSION_REVIEW AS S) AS I ON I.ID = R.id WHERE id_client = 1 J'arrive \u00e0 faire l'UNION avec tous les champs, seulement lorsque je veux join la table \u00e0 une autre table je n'arrive pas \u00e0 determiner la jointure (le ON ) car je ne peux pas acc\u00e8der aux colonnes de la table \"UNION\". La premi\u00e8re requ\u00eate qui va chercher toutes les reviews de coaching : q1 = db.session.query(CoachingReview.id, CoachingReview.satisfaction.label(\"Field1\"), CoachingReview.support.label(\"Field2\"), CoachingReview.disponibility.label(\"Field3\"), CoachingReview.is_continuing.label(\"Field4\")) La deuxi\u00e8me requ\u00eate qui va chercher toutes les reviews de sessions : q2 = db.session.query(SessionReview.id, SessionReview.difficulty, SessionReview.feel, SessionReview.fatigue, SessionReview.energy) L'union entre les deux : q3 = q1.union(q2) Et la requ\u00eate qui relie les infos de la table m\u00e8re REVIEW aux donn\u00e9es r\u00e9cup\u00e9r\u00e9s dans l'UNION : query = db.session.query(Review.id, Review.comment, Review.date, Review.type).join(q3,Review.id==q3.c.id).filter(Review.client_id==id) La variable q3 qui contient le r\u00e9sultat de l'UNION est sens\u00e9 poss\u00e9der les colonnes de cette table accessible depuis q3.c mais j'ai l'erreur : AttributeError : id En debugant les objets SQL Alchemy, j'ai trouv\u00e9 pourquoi je n'arrivais pas \u00e0 acc\u00e9der aux champs. Les champs avaient un alias g\u00e9n\u00e9r\u00e9 automatiquement. Pour r\u00e9gler ce probl\u00e8me, j'ai rajouter un nouvel alias \u00e0 chaque champs et d\u00e9sormais tout fonctionne. Les reviews du clients sont maintenant affich\u00e9s sur sa page profil, je peux maintenant ajouter la page de d\u00e9tails lorsqu'on clique sur la review. Demain je vais beaucoup travailler sur la documentation car le rendu interm\u00e9diaire \u00e0 lieu lundi et il faudrait que j'ai document\u00e9 toutes les fonctionnalit\u00e9es d\u00e9j\u00e0 effectu\u00e9.","title":"Jeudi, 5 Mai 2022"},{"location":"logbook/#vendredi-6-mai-2022","text":"Je viens d'ajouter le changement d'image de profil. Sachant que l'application n'est pas destin\u00e9e \u00e0 contenir des milliers d'utilisateurs, j'ai cr\u00e9\u00e9 un dossier \"profile/\" dans le dossier \"img/\" de l'application. Toutes les photos de profil seront enregistr\u00e9es ici avec un UUID comme nom de fichier. Le nom de fichier est enregistr\u00e9 dans la base de donn\u00e9es. J'ai avanc\u00e9 un peu sur la page Workouts, il faut que je modifie la cr\u00e9ation des champs de la table 'WORKOUT' car les valeurs sont arrondies et n'ont pas de d\u00e9cimals. J'ai pu terminer l'affichage des workouts effectu\u00e9s par le client. Cet apr\u00e8s-midi, je vais avancer sur la documentation technique et le poster. Pour le moment, il me manque encore l'ajout des reviews par le client ainsi que l'affichage d\u00e9taill\u00e9 des reviews et des workouts et l'affichage des graphiques avec Chart.JS. Une fois cela termin\u00e9, j'aurai termin\u00e9 le c\u00f4t\u00e9 client. La partie des graphiques avec Chart.JS sera je pense que la partie la plus \"compliqu\u00e9e\". Pour le reste de l'application, tous le c\u00f4t\u00e9 coach est uniquement compos\u00e9 de formulaire et des m\u00eames pages que le c\u00f4t\u00e9 client mais avec des options suppl\u00e9mentaires. J'ai pris la d\u00e9cision de laisser un peu de c\u00f4t\u00e9 l'aspect \"esth\u00e9tique\" de l'application car n'\u00e9tant vraiment en avance je veux me concentrer principalement sur les fonctionnalit\u00e9s de l'application. J'ai pu avanc\u00e9 un peu sur la documentation de la base de donn\u00e9es. Je vais devoir revoir mon poster ce week-end, M.Bonvin m'a fait un retour : Je n'explique pas ce que mon application fait et je fais plus de pub pour Polar qu'autre chose.","title":"Vendredi, 6 Mai 2022"},{"location":"logbook/#lundi-9-mai-2022","text":"Aujourd'hui \u00e0 17h, nous avons le rendu interm\u00e9diaire. Nous devons rendre le poster, le r\u00e9sum\u00e9 et l'abstract ainsi que l'\u00e9tat actuel de la documentation technique. J'ai pu refaire un nouveau Poster plus explicit de ce qu'est mon application : Je l'ai montr\u00e9 \u00e0 M.Garcia qui m'a fait la remarque qu'il n'y avait pas vraiment d'ordre de proc\u00e9der pour l'application (Trop d'images misent un peu partout sans sens particulier). Je vais donc reordrer les images et je devrai \u00eatre pas mal. J'ai pu avancer ma documentation technique un peu, il faut encore que j'ajoute : L'arborescence L'installation et que je commence \u00e0 expliquer les diff\u00e9rentes routes de l'application. Je viens de rencontrer un probl\u00e8me, lors du rendu en PDF avec Mkdocs, j'ai plusieurs images qui s'affichaient sur le site statique mais qui ne sont pas visible sur le PDF. M.Jossi est pass\u00e9 pour voir l'avancement du projet, nous ferons un point pour l'\u00e9valuation interm\u00e9diaire Mercredi. Il m'a \u00e9galement fait la remarque que mon poster contenait trop d'images un peu partout. Je vais \u00e9purer mon poster et continuer d'avancer sur la documentation. J'ai pu ajouter l'arborescence (qui n'est pas termin\u00e9e vu que le projet ne l'est pas encore). Il faudrait encore que j'ajoute des tests utilisateurs dans la documentation pour les parties d\u00e9j\u00e0 termin\u00e9es. J'ai pu modifier et all\u00e9ger mon poster :","title":"Lundi, 9 Mai 2022"},{"location":"logbook/#mardi-10-mai-2022","text":"Aujourd'hui je vais avancer sur mon projet. Il faut que j'ajoute l'affichage des d\u00e9tails d'une review lorsque l'utilisateur clique dessus. Je rencontre un probl\u00e8me, je voulais \u00e0 la base passer la review (objet) en param\u00e8tre GET pour pouvoir r\u00e9cup\u00e9rer les infos sur la page review. Mais lorsque je passe l'objet en param\u00e8tre il arrive de l'autre c\u00f4t\u00e9 sous forme de chaine (string). Je ne peux donc pas r\u00e9cup\u00e9rer les donn\u00e9es comme je le souhaite car seul les valeurs sont dans la chaine, il n'y pas les indexs. Je vois deux possibilit\u00e9 : Soit je passe l'id en param\u00e8tre et je vais refaire une requ\u00eate pour chercher les infos (je vais devoir en faire deux car je ne peux pas savoir le type de la review \u00e0 l'avance et en fonction du type la requ\u00eate est diff\u00e9rente) Soit j'arrive \u00e0 r\u00e9cup\u00e9rer un objet en param\u00e8tre. Je vais essayer de trouver un moyen de passer l'objet mais si je perds trop de temps je ferai l'option avec les deux requ\u00eates. J'ai pu passer les valeurs en param\u00e8tre, au lieu de passer l'objet j'ai pass\u00e9 toutes les valeurs s\u00e9par\u00e9ments. En avan\u00e7ant je viens de me rendre qu'il faut que j'ajoute un champ dans les 2 tables \"COACHING_REVIEW\" et \"SESSION_REVIEW\". Il faut que j'ai l'id de la session/coach concercn\u00e9 par la review. J'ai rajout\u00e9 les champs \"target_id\" aux deux tables de reviews. J'ai mis \u00e0 jour les diagrammes. J'ai pu terminer l'affichage des 2 types de reviews, je pourrai revoir encore le style \u00e9ventuellement plus tard si j'ai le temps.","title":"Mardi, 10 Mai 2022"},{"location":"logbook/#mercredi-11-mai-2022","text":"Nous allons faire le point interm\u00e9diaire aujourd'hui avec M.Jossi, je pense toujours avoir un peu de retard sur le projet de mani\u00e8re g\u00e9n\u00e9rale. Je rencontre un probl\u00e8me lors de l'ajout des charts sur la page profil. J'ai fait une requ\u00eate pour obtenir les types d'entrainements qui ont \u00e9t\u00e9 effectu\u00e9s un client ainsi que le nombre de s\u00e9ance effectu\u00e9 pour chaque type. Je s\u00e9pare donc ces valeurs en 2 tableaux (Pour pouvoir ensuite les passer dans le Javascript et utiliser les valeurs avec Chart.JS). Seulement une fois passer du c\u00f4t\u00e9 HTML j'ai un probl\u00e8me, pour tableau qui contient les valeurs num\u00e9riques (int) tout va bien mais pour le tableau qui contient le titre des exercices (string) les apostrophes contenues dans le tableau pour d\u00e9terminer les strings sont remplac\u00e9 par : \" Tableau avant (backend python) ['Weightlifting', 'Cycling'] Tableau apr\u00e8s (frontend html) [&#34;Weightlifting&#34;,&#34;Cycling&#34;] Le probl\u00e8me est que je ne peux m\u00eame pas remplacer les caract\u00e8res ind\u00e9sirables car ce n'est pas une chaine mais un tableau. Pour r\u00e9soudre ce probl\u00e8me, j'ai fait une boucle qui parcourt le tableau re\u00e7u sur le c\u00f4t\u00e9 template et j'ai rempli un tableau javascript avec les valeurs. J'ai ensuite remplac\u00e9 les caract\u00e8res ind\u00e9sirables des valeurs et tout fonctionnait. En me faisant une r\u00e9flexion sur l'application, je me suis rendu compte que je vais devoir modifier une maquette. Sur la maquette d'interface pour la page d\u00e9tail d'un entrainement, j'ai affich\u00e9 un graphique qui repr\u00e9sentait l'\u00e9volution des battements de coeur durant la s\u00e9ance. Malheureusement l'API Polar ne permet pas de r\u00e9colter les donn\u00e9es de toute la s\u00e9ance, on obtient uniquement le bpm max, min et moyen (pas de quoi afficher un graphique repr\u00e9sentant la s\u00e9ance enti\u00e8re). J'ai fait le point interm\u00e9diaire avec M.Jossi, dans l'ensemble je suis sur le bon chemin. Il ne faut pas que je me rel\u00e2che mais j'avance dans la bonne direction. J'ai toujours un peu de retard mais je ne me fais pas trop de soucis pour l'instant. Il faut que je commence \u00e0 d\u00e9couper le code python (s\u00e9parer en fonction pour chaque requ\u00eate effectu\u00e9e) et il faut \u00e9galement que j'ajoute le guide d'installation dans la documentation. M.Jossi m'a \u00e9galement fait la remarque qu'il faudrait que je pr\u00e9cise les entr\u00e9es obligatoires dans les formulaires pr\u00e9sents sur les maquettes. J'ai pu commencer l'ajout du deuxi\u00e8me graphique de la page profil avec Chart.JS qui repr\u00e9sentera le nombre d'entrainements effectu\u00e9s par mois.","title":"Mercredi, 11 Mai 2022"},{"location":"logbook/#jeudi-12-mai-2022","text":"J'ai pu terminer le passage des valeurs pour le deuxi\u00e8me graphique (pour le nombre d'entrainements par mois). Je n'ai pas pu avancer l'apr\u00e8s-midi car il y a eu l'apr\u00e8s-midi \"poster\" ou tous les \u00e9l\u00e8ves CFC ont venu voir les projets.","title":"Jeudi, 12 Mai 2022"},{"location":"logbook/#vendredi-13-mai-2022","text":"J'ai re\u00e7u un mail inqui\u00e9tant de la part de Polar. Ils annoncent une maintenance le 18 Juin, je ne sais pas pour combien de temps. Sachant que la d\u00e9fense du dipl\u00f4me a lieu le 20, je vais devoir prendre des pr\u00e9cautions et faire une sorte de \"Mock\" de l'API Polar et simuler la r\u00e9cup\u00e9ration des donn\u00e9es au cas o\u00f9. Je vais quand m\u00eame leurs envoyer un mail, pour connaitre la dur\u00e9e de la maintenance et savoir si des changements majeurs auront lieu (des changements qui risquent de rendre obsol\u00e8te mon application). J'ai remarqu\u00e9 que les donn\u00e9es utilis\u00e9es pour le graphique qui affiche le nombre d'entrainements par mois ne prends pas en compte l'ann\u00e9e (si j'ai fait des entrainements en Mai 2021 et Mai 2022 il prendra la somme des 2). Je vais rajouter le crit\u00e8re de l'ann\u00e9e actuelle dans la requ\u00eate SQL. J'ai pu ajouter les statistiques de la semaine \u00e0 c\u00f4t\u00e9 des deux graphiques. Il faut encore que j'affiche le total d'heures d'entrainements de la semaine, la difficult\u00e9 est qu'il faut que j'utilise la fonction SQL SUM() sur des champs du type TIME (ce qui n'est pas faisable en SQL). Pour solutionner ce l\u00e9ger probl\u00e8me j'ai utilis\u00e9 la fonction SQL exctract qui m'a permis d'extraire les heures, minutes et secondes de chaque dur\u00e9e et ainsi les additionners. J'ai \u00e9galement pu ajouter la page \"Prochaine sessions\" qui affichent la liste des prochaines sessions avec un coach. Pour ressembler le plus possible \u00e0 la maquette j'ai ajout\u00e9 dans le dossier static/assets/img/sports des logos de beaucoup de sports qui serviront d'illustrations pour le type de s\u00e9ance qui est pr\u00e9vu pour la session. Je vais pouvoir maintenant commencer \u00e0 s\u00e9parer en diff\u00e9rentes fonctions les requ\u00eates SQL pour rendre plus lisible le fichier de routes. Pour le c\u00f4t\u00e9 client, il ne manque plus que l'affichage d\u00e9taill\u00e9 des entrainements et l'option changement de mot de passe. Je pourrai ensuite commencer le c\u00f4t\u00e9 coach. Pour la documentation je vais commencer \u00e0 documenter les endpoints du c\u00f4t\u00e9 client.","title":"Vendredi, 13 Mai 2022"},{"location":"logbook/#lundi-16-mai-2022","text":"Aujourd'hui, j'ai pu terminer la page d\u00e9tails d'entrainements, je ne me suis pas trop attard\u00e9 sur le style mais la page est fonctionnelle. J'ai pu ensuite poursuivre avec la page ajout de review, je vais en faire une seule qui s'adaptera en fonction des champs qui lui sont envoy\u00e9s. Je remarque qu'il faut que je modifie la maquette d'ajout de review sur le coaching car j'avais modifi\u00e9 un champ et sur la maquette l'ancien champ est toujours pr\u00e9sent. J'ai eu une r\u00e9flexion lors de l'\u00e9laboration de la page d'ajout de review, ne faut-il pas ajouter une review sur les entrainements plut\u00f4t que les sessions ? Car les sessions ne sont pas toujours des entrainements et cela ne sert \u00e0 rien d'ajouter une review sur un rendez-vous pour un bilan. Il faut donc que je modifie les noms de table, les relations ainsi que les cl\u00e9s \u00e9trang\u00e8res. J'ai pu terminer la page d'ajout de review \u00e0 90%, il ne manque plus qu'\u00e0 modifier la base de donn\u00e9es pour que les revies soient sur les entrainements et plus les sessions et la page sera fonctionnelle pour l'ajout de review sur les entrainements. J'ajouterai les reviews coaching demain.","title":"Lundi, 16 Mai 2022"},{"location":"logbook/#mardi-17-mai-2022","text":"Je vais commencer par modifier la base de donn\u00e9es pour passer de \"SESSION_REVIEW\" \u00e0 \"WORKOUT_REVIEW\" car comme r\u00e9fl\u00e9chi hier, il est plus int\u00e9ressant de pouvoir mettre une review sur un entrainement que sur une session car certains workouts ne sont pas une session et le retour sur ces entrainements peuvent int\u00e9resser le coach. J'ai pu tout modifier, il faut maintenant que je fasse en sorte qu'un entrainement ne puisse avoir qu'une seule review pour \u00e9viter que l'utilisateur en publie plusieurs. J'ai \u00e9galement fait la modification de la maquette d'ajout de review sur le coaching les 4 champs n'\u00e9tant plus un select mais un slider comme les autres champs. J'ai ajout\u00e9 la possibilit\u00e9 d'ajouter les review du coaching. Il faudrait que j'ajoute en tout cas pour l'ajout de review sur le coaching un petit carr\u00e9 qui montre le coach en question. Pour l'ajout de review sur un entrainement cela n'est pas forc\u00e9ment n\u00e9cessaire sachant qu'il faut \u00eatre sur la page de d\u00e9tail de l'entrainement pour ajouter une review. Il faut que j'ajoute une redirection automatique lorsque la review ajout\u00e9. Je ne sais pas si c'est un probl\u00e8me mais vu qu'avant de v\u00e9rifier si la review d'entrainement existe je remplis la table REVIEW cela augmente l'id de 1 et si la review existe tout est rollback mais l'auto incr\u00e9ment garde l'incr\u00e9ment de 1. Lors de la cr\u00e9ation de la page pour changer le mot de passe, je rencontre un probl\u00e8me. J'avais ajout\u00e9 dans le model User une fonction qui permet de hash le password qui est d\u00e9fini sur la propri\u00e9t\u00e9 \"password\" mais lorsque je change la propri\u00e9t\u00e9 le mot de passe n'est pas hash\u00e9 et si je le hash manuellement le programme plante. La modification de mot de passe est d\u00e9sormais fonctionnel mais je rencontre maintenant un autre probl\u00e8me le logout ne fonctionne plus Je n'arrive plus \u00e0 logout l'utilisateur connect\u00e9, dans la route du login il y a une condition : if not current_user.is_authenticated sauf que m\u00eame apr\u00e8s avoir utilis\u00e9 la fonction logout_user de Flask Login, je ne passe jamais dans cette condition.","title":"Mardi, 17 Mai 2022"},{"location":"logbook/#mercredi-18-mai-2022","text":"Je suis rest\u00e9 bloqu\u00e9 sur mon probl\u00e8me de logout presque toute la matin\u00e9e, je ne trouvais absolument aucune solution logique. M. Zanardi est venu voir mon probl\u00e8me et nous avons debuger le logout. Nous avons d\u00e9couvert qu'une fois logout Flask Login se connectait automatiquement \u00e0 un utilisateur \"test\" que j'avais cr\u00e9\u00e9 dans la base de donn\u00e9es sans mot de passe et sans email. Ces champs devront \u00eatre non null car ils sont obligatoires \u00e0 l'inscription. Je ne sais pas ni pourquoi ni comment mais Flask Login se connectait par d\u00e9faut \u00e0 l'utilisateur sans email. Je pouvais donc apr\u00e8s m'\u00eatre d\u00e9connect\u00e9 acc\u00e9der aux pages sous @login_required . En supprimant cet utilisateur test , j'ai remarqu\u00e9 que tout fonctionnait comme il faut car Flask login ne pouvait plus se connecter automatiquement \u00e0 cet utilisateur sans email. La partie client est donc termin\u00e9, il va falloir que j'effectue quelques tests mais dans l'ensemble tout \u00e0 l'air fonctionnel. Je vais d\u00e9buter la partie coach en reprenant d\u00e9j\u00e0 les pages clients qui ont des options coach et j'ajouterai les nouvelles pages apr\u00e8s. J'ai commenc\u00e9 \u00e0 s\u00e9parer un peu le fichier client/routes.py j'ai cr\u00e9er un autre fichier util.py qui contiendra toutes les fonctions qui permettront de r\u00e9cup\u00e9rer des donn\u00e9es de la base de donn\u00e9es. Cela rendra mon fichier routes.py beaucoup plus lisible.","title":"Mercredi, 18 Mai 2022"},{"location":"logbook/#jeudi-19-mai-2022","text":"Aujourd'hui j'ai bien avanc\u00e9 sur l'\u00e9puration de mon code, il y avait plein de requ\u00eate que je faisais en double ou qui \u00e9tait inutile. Exemple pour la plupart des pages je r\u00e9cup\u00e9rais un objet user pour avoir toutes les propri\u00e9t\u00e9s alors qu'avec Flask login je d\u00e9tenais d\u00e9j\u00e0 un objet User (current_user). Il ne reste qu'une petite partie du fichier routes.py \u00e0 corriger et \u00e7a sera bon. Demain, je vais essayer de beaucoup avancer sur la documentation technique car je ne l'ai plus touch\u00e9e depuis un moment. J'ai pas mal de points \u00e0 ajouter comme notamment les endpoints de l'application ou encore les diff\u00e9rentes fonctions qui sont appel\u00e9es pour r\u00e9cup\u00e9rer des donn\u00e9es de la base. Je pourrai ensuite ajouter la partie coach de l'application qui maintenant que le code est propre, ne devrait normalement pas me poser de gros probl\u00e8mes. En croisant M.Jossi, je lui ai demand\u00e9 si cela pouvait \u00eatre pertinent d'ajouter une sorte de business plan \u00e0 la documentation. Pour faire en sorte d'avoir une br\u00e8ve explication des co\u00fbts qu'il faudrait prendre en compte si on voulait mettre en place l'application chez un coach. (En comptant les montres, les cartes, les lecteurs, etc..). M.Jossi m'a confirm\u00e9 que cela pouvait \u00eatre une bonne id\u00e9e mais cela n'est vraiment pas prioritaire. Je vais donc garder cette id\u00e9e et si il me reste du temps sur la fin j'ajouterai ce point \u00e0 la documentation.","title":"Jeudi, 19 Mai 2022"},{"location":"logbook/#vendredi-20-mai-2022","text":"Aujourd'hui j'ai pu terminer de refaire le fichier de route, toutes les fonctions utilisant la base de donn\u00e9es sont maintenant dans le fichier util.py . J'ai pu avancer sur la documentation en ajoutant le routage de l'application et en commen\u00e7ant \u00e0 expliquer les diff\u00e9rents endpoints. Je pense travailler un peu ce week-end pour avancer un peu la documentation et je pourrai \u00e9galement commencer \u00e0 ajouter les pages pour coach. Pour la lecture des cartes RFID et la r\u00e9cup\u00e9ration des donn\u00e9es via l'API, je poss\u00e8de d\u00e9j\u00e0 des scripts me permettant de le faire. Je n'aurai qu'\u00e0 les adapter pour les faire fonctionner. Avec l'annonce de maintenance de l'API le 18 Juin, je vais quand m\u00eame cr\u00e9er un mock de l'API pour me permettre de faire quand m\u00eame tourner l'application au cas o\u00f9 l'API ne fonctionnerait pas pour la pr\u00e9sentation.","title":"Vendredi, 20 Mai 2022"},{"location":"logbook/#lundi-23-mai-2022","text":"J'ai d\u00e9couvert et voulus impl\u00e9menter le UserManager qui m'aurait permis de g\u00e9rer l'acc\u00e8s \u00e0 mes pages avec le d\u00e9corateur : @roles_required . Malheureusement, il est n\u00e9cessaire d'utiliser une certaine structure de donn\u00e9es et cela impliquerait trop de changement au stade actuel. Je vais donc m'en passer et faire des v\u00e9rifications plus traditionnelles pour g\u00e9rer les acc\u00e8s aux pages. J'ai eu un petit probl\u00e8me avec le formatage des datetimes r\u00e9cup\u00e9rer depuis la base. J'ai simplement utilis\u00e9 strftime() qui me permet de les afficher avec le format que je veux. J'ai pu terminer le tableau de bord coach, la prochaine session est affich\u00e9e avec la date, dur\u00e9e et type de session. Le client concern\u00e9 est \u00e9galement affich\u00e9. En dessous, on peut retrouver une liste de tous les clients que le coach suit avec quelques infos comme la date de fin de leurs abonnements ou encore le dernier entrainement qu'ils ont effectu\u00e9. Le dernier rendu interm\u00e9diaire a lieu demain, je vais essayer d'avancer un petit peu la documentation encore. En comptant cette semaine il reste un peu moins que 3 semaines avant la fin de ce travail. Pour \u00eatre dans les temps, il faudrait que je termine le c\u00f4t\u00e9 coach cette semaine, j'aurai ensuite une semaine pour impl\u00e9menter l'API et les cartes RFID et je pourrai pour la derni\u00e8re semaine effectuer les derniers tests et arranger la documentation.","title":"Lundi, 23 Mai 2022"},{"location":"logbook/#mardi-24-mai-2022","text":"Nous avons le dernier rendu interm\u00e9diaire aujourd'hui. J'ai commenc\u00e9 \u00e0 travailler sur la page calendrier qui est une des derni\u00e8res pages \"compliqu\u00e9es\" \u00e0 r\u00e9aliser. J'ai en premier temps, utilis\u00e9 un vieux calendrier que j'avais effectu\u00e9 lors de ma formation ici. En faisant quelques recherches j'ai fait la d\u00e9couverte de FullCalendar.io qui permet d'utiliser un calendrier javascript avec beaucoup de fonctionnalit\u00e9s. J'ai d\u00e9cid\u00e9 d'essayer de l'impl\u00e9menter dans mon application car cela va me permettre d'avoir diff\u00e9rents affichages du calendrier (Semaines, mois, jour, liste). J'ai r\u00e9ussi \u00e0 impl\u00e9menter le calendrier FullCalendar. Pour les \u00e9v\u00e9nements, je dois donner un tableau contenant plusieurs objets repr\u00e9sentant un \u00e9v\u00e9nement. Chaque \u00e9v\u00e9nement poss\u00e8de au minimum 1 titre, 1 date de d\u00e9but. Exemple : { title: 'Thomas Fuji', start: '2022-05-22T16:00:00', end: '2022-05-22T17:00:00' } Je vais donc faire une fonction qui va me retourner toutes les sessions enregistr\u00e9es sous ce format et je le passerai ensuite en javascript pour renseigner les \u00e9v\u00e9nements \u00e0 afficher sur le calendrier. J'ai \u00e9galement avanc\u00e9 sur le formulaire d'ajout de session, j'ai eu plusieurs probl\u00e8mes d'affichage \u00e0 cause de quelques erreurs d'inattention. Pour le formulaire d'ajout, il y a un champ Date et un champ Time pour s\u00e9lectionner la date et l'heure de la session. On peut ensuite s\u00e9l\u00e9ctionner une valeur de 1 \u00e0 3 (repr\u00e9sentant le nombre d'heure pr\u00e9vu pour la s\u00e9ance). L'heure de fin est g\u00e9n\u00e9r\u00e9e automatiquement lorsque les champs mentionn\u00e9s ci-dessus sont renseign\u00e9s. Avec le rendu d'aujourd'hui, j'ai toujours du retard, n\u00e9anmoins je pense quand m\u00eame r\u00e9ussir \u00e0 terminer dans les temps, j'avance beaucoup sur les derni\u00e8res pages \u00e0 faire et une fois cela terminer, j'ai \u00e9normement de point \u00e0 ajouter \u00e0 la documentation. J'ai ajout\u00e9 les t\u00e2ches qu'il reste \u00e0 effectuer dans le Trello.","title":"Mardi, 24 Mai 2022"},{"location":"logbook/#mercredi-25-mai-2022","text":"J'ai refait le mod\u00e8le de la table Session, \u00e0 la place d'avoir qu'une date, j'ai un start_time et un end_time . Cela me facilitera la conversion en \u00e9v\u00e9nement pour le calendrier. J'ai pu terminer le formulaire d'ajout de session. On peut maintenant ajouter une session en s\u00e9l\u00e9ctionnant : Client Type d'entrainement Date Heure Dur\u00e9e Pour l'affichage j'ai r\u00e9cup\u00e9r\u00e9 toutes les sessions et je les ai ins\u00e9r\u00e9s dans un tableau pour que \u00e7a respecte le format de FullCalendar. Je passe ensuite mon tableau directement au javascript pour qu'il l'utilise comme source. J'ai eu le dernier point avec M.Jossi, nous avons regarder les t\u00e2ches qu'il me reste a effectuer. Dans l'ensemble, j'ai encore beaucoup de travail mais cela devrait \u00eatre faisable dans les temps. L'objectif est de terminer toutes les pages (Ajout client, paiement, bilan, ajout de programme et affichage de profil client) avant la fin de cette semaine. Je pense que c'est faisable car la plus part des pages ne sont qu'un formulaire pour ins\u00e9rer des \u00e9l\u00e9ments dans la base de donn\u00e9es.","title":"Mercredi, 25 Mai 2022"},{"location":"logbook/#vendredi-26-mai-2022","text":"Aujourd'hui j'ai poursuivi l'avancement des derni\u00e8res pages qu'il me reste a cr\u00e9er. J'ai pu terminer la page d'ajout de nouveau client, le coach peut d\u00e9sormais cr\u00e9er un client lui-m\u00eame. J'ai \u00e9galement fait la page de profil client, on y retrouve plusieurs infos du client comme les reviews qu'il a post\u00e9, ses programmes ainsi que des graphiques repr\u00e9sentant les entrainements qu'il effectue. Je vais cette fois vraiment devoir travailler un peu ce week-end, pour m'assurer que toutes les pages soient termin\u00e9es et fonctionnent comme je le souhaite. Je pourrai ainsi d\u00e9buter la r\u00e9cup\u00e9ration des donn\u00e9es avec l'API et la d\u00e9t\u00e9ction de carte RFID. J'esp\u00e8re au plus tard terminer mon projet en fin de semaine prochaine, pour garder une semaine compl\u00e8te de documentation.","title":"Vendredi, 26 Mai 2022"},{"location":"logbook/#lundi-30-mai-2022","text":"J'ai pu terminer toutes les pages que je devais encore cr\u00e9er, le coach peut maintenant ajouter un \"checkup\"(bilan) \u00e0 un utilisateur et peut renouveler l'abonnement d'un client. J'ai d\u00fb modifier l\u00e9g\u00e8rement la base de donn\u00e9es, j'ai ajout\u00e9 un champ date \u00e0 la table PROGRAM pour garder les anciens programmes. J'ai \u00e9galement modifi\u00e9 le champ pdf en LONGBLOB car BLOB \u00e9tait trop court dans certains cas. Le client peut maintenant t\u00e9l\u00e9charger son programme directement depuis son profil dans la section Programs . J'ai encore quelques d\u00e9tails \u00e0 revoir et je vais tester toutes les fonctionnalit\u00e9s/pages. SI je ne rencontre aucun probl\u00e8me et que tout est ok, je vais ajouter la lecture de carte RFID pour assigner les cartes de membres. J'ai pu r\u00e9gler quelques d\u00e9tails comme : Affichage d'un message d'erreur Password must match lors de la cr\u00e9ation d'un nouveau compte D\u00e9finir le r\u00f4le coach lors de l'enregistrement de la page register (Les clients sont cr\u00e9\u00e9s avec le formulaire coach) Affichage des messages flash avec le bon CSS D\u00e9tails d'erreur pour l'ajout au calendrier si le coach ne poss\u00e8de aucun client. Affichage d'un message \u00e0 la place des graphiques si l'utilisateur n'a pas encore de donn\u00e9es d'entrainement Ajouter le total de temps d'entrainement cette semaine J'ai pu ajouter la mise \u00e0 jour de la carte de membre, lorsque le coach click sur le bouton change sur le profil du client il peut changer la carte de membre en scannant une nouvelle carte. Pour l'instant, je n'ai pas mis de timeout, c'est-\u00e0-dire que si le coach ne scanne pas de carte alors qu'il a cliqu\u00e9 sur le bouton le site restera bloqu\u00e9 \u00e0 attendre la carte. Je pense donc mettre un timeout de 30s","title":"Lundi, 30 Mai 2022"},{"location":"logbook/#mardi-31-mai-2022","text":"J'ai mis \u00e0 jour quelques d\u00e9tails comme l'affichage d'icone coh\u00e9rentes \u00e0 c\u00f4t\u00e9 des statistiques. J'ai commenc\u00e9 \u00e0 impl\u00e9menter le mailer avec FlaskMail . J'ai ajout\u00e9 la configuration dans mon fichier de config. Pour envoyer les mails, j'ai cr\u00e9er le mail : fitjourney.cfpt@gmail.com . Apr\u00e8s quelques tests, le mailer fonctionne correctement, je vais maintenant ajouter l'envoie d'un mail de notification sur quelques actions. (Pas trop car cela prend du temps donc je ne vais pas trop charger l'application avec des envoies de mail) J'ai ajout\u00e9 l'envoie d'une notification par mail lorsque le coach ajoute un nouveau programme, lors du renouvellement d'un abonnement , lors de l'enregistrement d'une session et lors de la cr\u00e9ation du compte client \u00e9galement. REMARQUE : Les actions qui envoient un mail, sont remarquablement ralenties. Il me reste quelques point \u00e0 effectuer avant de commencer le script qui tournera \u00e0 c\u00f4t\u00e9 pour g\u00e9rer les entr\u00e9es/sorties et l'appel \u00e0 l'API : Ajouter un graphique repr\u00e9sentant l'\u00e9volution du poid (si possible changement des valeurs avec Masse graisseuse , Masse musculaire , etc) (Ajouter la possibilit\u00e9 au coach de modifier les informations du compte client) V\u00e9rifier que le compte connect\u00e9 est bien coach pour toutes les pages coach Ajouter l'annulement d'un abonnement","title":"Mardi, 31 Mai 2022"},{"location":"logbook/#mercredi-01-juin-2022","text":"J'ai envoy\u00e9 un mail \u00e0 M.Jossi pour faire une mise au point avant de commencer la derni\u00e8re semaine. J'ai pu ajouter l'annulation d'abonnement, lorsque le coach clique sur le bouton Cancel . J'ai \u00e9galement ajout\u00e9 un graphique qui affiche l'\u00e9volution du poids d'un client. Je r\u00e9cup\u00e8re la moyenne des pes\u00e9es enregistr\u00e9e pour chaque mois (dans la plupart des cas 1 bilan par mois). Je n'aurai pas le temps de le faire maintenant, mais pour une am\u00e9lioration future cela serait int\u00e9ressant d'ajouter une \"navbar\" qui permettent de changer les valeurs du graphique entre toutes les donn\u00e9es r\u00e9cup\u00e9r\u00e9es lors d'un bilan (Taux de masse musculaire, graisseuse, etc..) J'ai \u00e9galement ajout\u00e9 le check pour les pages coach, elles ne sont plus accessibles par un client. Nous avons fait une mise au point avec M.Jossi, dans l'ensemble je commence \u00e0 arriver au bout. Je dois encore rajouter un historique des bilans ajout\u00e9s pour avoir quand m\u00eame un petit aper\u00e7u des bilans ajout\u00e9s. M.Jossi m'a \u00e9galement fait remarquer que je n'avais pas mis l'\u00e9chelle \u00e0 c\u00f4t\u00e9 des valeurs des reviews. Je vais donc les rajouter. J'ai pu terminer d'ajouter l'historique de bilan, sur la page client pour le coach et sur la page profil pour le client.","title":"Mercredi, 01 Juin 2022"},{"location":"logbook/#jeudi-02-juin-2022","text":"Pour aujourd'hui, il me reste \u00e0 valider l'insert dans la DB des donn\u00e9es d'entrainement r\u00e9cup\u00e9r\u00e9s avec l'API Polar. Je vais \u00e9galement d\u00e9j\u00e0 pr\u00e9par\u00e9 une m\u00e9thode que j'utiliserai pour la d\u00e9mo si l'API n'est pas disponible. Je pourrai ensuite \u00e9tablir mon sc\u00e9nario de d\u00e9mo et commencer \u00e0 effectuer tous les tests utilisateurs que j'ajouterai directement dans la documentation. J'ai pu terminer l'insert dans la base de donn\u00e9es, je ne peux pas encore tester car l'API Polar semble avoir un probl\u00e8me (Impossible de faire une requ\u00eate ), j'obtiens une Error 500 Internal server error \u00e0 chaque requ\u00eate. Je testerai demain pour voir si mon script fonctionne comme il faut, je vais pr\u00e9parer ma m\u00e9thode pour r\u00e9cup\u00e9rer des donn\u00e9es dans le m\u00eame format que les donn\u00e9es Polar. En relisant les termes et conditions d'utilisations de l'API, j'ai vu que tout en bas de leur pdf ils precisent qu'ils ne garantissent ABSOLUMENT pas la disponibilit\u00e9 de leurs API. Je vais donc bien utiliser ma m\u00e9thode car je veux vraiment \u00e9viter les probl\u00e8mes lors de la d\u00e9mo.","title":"Jeudi, 02 Juin 2022"},{"location":"logbook/#vendredi-03-juin-2022","text":"L'API Polar semble \u00eatre \u00e0 nouveau disponible, je vais tester mon script pour v\u00e9rifier que l'insert dans la base de donn\u00e9es est effectu\u00e9 correctement. Une fois cette \u00e9tape valid\u00e9e, je commencerai \u00e0 effectuer tous les tests utilisateurs pour v\u00e9rifier qu'ils ne restent aucun \"bug\". L'objectif est qu'\u00e0 la fin de la journ\u00e9e je ne touche plus au code et qu'il me reste uniquement la documentation \u00e0 terminer. J'ai d\u00fb faire quelques ajustements pour certains formats de valeurs lors de l'insert. J'utilise le champ duration que l'API me donne sauf qu'il est rendu avec un format tr\u00e8s sp\u00e9cifique qui change en fonction de la dur\u00e9e exemple : Pour une s\u00e9ance de 1h30 : PT1H30M Pour une s\u00e9ance de 50 min et 30s : PT50M30S j'ai donc fait un try avec plusieurs exceptions pour permettre de couvrir les diff\u00e9rents cas. L'insert est d\u00e9sormais fonctionnel, les donn\u00e9es d'entrainement sont correctement ins\u00e9r\u00e9 dans la base de donn\u00e9es. Je vais donc commencer mon tableau de test utilisateur et v\u00e9rifier que toutes mes fonctionnalit\u00e9s fonctionnent comme il faut. J'ai pu r\u00e9aliser une bonne partie des tests tout est fonctionnel pour l'instant, je vais terminer les tests et avancer grandement dans la documentation. J'aimerais avoir une version \"tr\u00e8s avanc\u00e9e\" \u00e0 montrer \u00e0 M.Jossi d'ici Lundi soir pour avoir le temps d'avoir un retour avant la fin. Pour la documentation, je vais devoir refaire les diagrammes de USECASES ainsi que l'architecture du projet qui ont bien chang\u00e9 depuis la derni\u00e8re fois.","title":"Vendredi, 03 Juin 2022"},{"location":"logbook/#mardi-07-juin-2022","text":"Derni\u00e8re semaine de ce travail de dipl\u00f4me, je dois encore pas mal avancer sur la documentation. J'ai ajout\u00e9 un sch\u00e9ma pour expliquer le fonctionnement interne de l'application : En ajoutant les plannings, je me suis bien rendu compte que le planning pr\u00e9visionnel n'a vraiment pas \u00e9t\u00e9 respect\u00e9. Beaucoup de t\u00e2ches sont venues s'ajouter et certaines ont pris plus de temps que pr\u00e9vu. J'ai pu d\u00e9crire toutes les technologies que j'ai utilis\u00e9 et termin\u00e9 une grosse partie de l'analyse organique. Il faut encore que j'ajoute les tests utilisateurs que j'ai effectu\u00e9s, que je souligne les am\u00e9liorations possibles ainsi que mon bilan personnel.","title":"Mardi, 07 Juin 2022"},{"location":"logbook/#mercredi-08-juin-2022","text":"Aujourd'hui, je vais continuer d'avancer sur la documentation l'id\u00e9al serait de la terminer d'ici demain matin. Cela me laissera le temps de faire un manuel utilisateur pour le client et le coach. En voulant montrer application, je me rends compte que le mailer ne fonctionne plus. Le compte google fitjourney-cfpt@gmail.com a \u00e9t\u00e9 d\u00e9sactiv\u00e9 pour \"Acc\u00e8s suspect\" alors que j'avais au pr\u00e9alable bien autoris\u00e9 l'acc\u00e8s a des applications externes. J'ai r\u00e9activ\u00e9 le compte et vais attendre un peu voir si cela refonctionne. En attendant je vais continuer la documentation en ajoutant les tests utilisateurs qui ont \u00e9t\u00e9 effectu\u00e9. En retestant le mailer je me rends compte qu'il ne fonctionne toujours pas. Je vais donc voir sur le compte google voir s'il y a un probl\u00e8me avec le compte et je vois que depuis le 30 mai 2022 Google ne prend plus en charge les applications \"moins s\u00e9curis\u00e9e\" Ce qui veut dire que je ne peux plus utiliser de compte google pour envoyer les mails. Je vais devoir trouver une solution sinon le mailer ne sera pas fonctionnel. J'ai essay\u00e9 d'utiliser un compte Yahoo \u00e0 la place, mais cela n'a pas l'air de fonctionner. Le probl\u00e8me est que le 90% de la documentation que l'on peut trouver sur le net utilise les comptes google. Je n'ai toujours pas trouv\u00e9 de solution, alors je pense utiliser MailTrap . MailTrap est un service \"sandbox\" pour email, il capture le trafic SMTP et permet d'analyser les mails. Le mailer n'\u00e9tant plus fonctionnel, je peux utiliser mailtrap pour d\u00e9montrer que le mail s'envoie correctement (le mail ne s'enverra pas r\u00e9ellement au destinataire, il restera dans la bo\u00eete mailtrap)","title":"Mercredi, 08 Juin 2022"},{"location":"logbook/#jeudi-09-juin-2022","text":"Avant-dernier jour avant le rendu, je vais refaire un tour sur mon application v\u00e9rifier que tout fonctionne normalement et que la r\u00e9ception avec MailTrap est fonctionnelle. Je vais garder MailTrap car je n'ai plus le temps d'impl\u00e9menter l'API Google qui me permettrai d'utiliser les comptes google pour le mailer comme je le faisais initialement. J'ai chang\u00e9 les morceaux de code que j'avais plac\u00e9 dans ma documentation, je les ai g\u00e9n\u00e9r\u00e9 avec Ray.so pour avoir un rendu visuel meilleur. Exemple de code avec Ray.so : Il faut que j'ajoute encore le retour sur l'exp\u00e9rience qui comprendra : * Points positifs * Points n\u00e9gatifs * Am\u00e9liorations * Probl\u00e8mes rencontr\u00e9s * Bilan personnel Je peux ensuite commencer les manuels utilisateurs pour d\u00e9tailler l'utilisation de mon application. J'ai eu le temps de terminer les deux manuels utilisateur. Il faut encore que je corrige l'orthographe de ma documentation et que je g\u00e9n\u00e8re le listing du code source et je serai bon.","title":"Jeudi, 09 Juin 2022"}]}